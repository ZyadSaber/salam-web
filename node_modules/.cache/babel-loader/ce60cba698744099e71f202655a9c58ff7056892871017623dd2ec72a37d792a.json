{"ast":null,"code":"import _toConsumableArray from\"/home/zyad/Documents/ActiveProjects/SalamApp/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _objectSpread from\"/home/zyad/Documents/ActiveProjects/SalamApp/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"/home/zyad/Documents/ActiveProjects/SalamApp/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{memo,useCallback,useEffect,useState}from\"react\";import InsertForm from\"./Partials/InsertForm\";import InputText from\"../../components/InputText/InputText\";import useFormManager from\"../../hooks/useFormManager\";import usePost from\"../../hooks/usePost\";import Table from\"../../components/TableView/Table\";import{columns}from\"./constant\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var CustomerInvoices=function CustomerInvoices(){var _usePost=usePost(\"invoices/customer_invoice_dml\"),setRow=_usePost.setRow;var _useState=useState({customer_id:0,date:\"\",items:[],query_status:\"n\",total:0,discount:0,total_after_discount:0,paid:0,credit:0}),_useState2=_slicedToArray(_useState,2),itemsType=_useState2[0],setItemsType=_useState2[1];var _useState3=useState({item_id:0,width:0,height:0,size:0,quantity:0,price:0,total:0,notes:\"\",itemName:\"\",print_id:0,print_name:\"\"}),_useState4=_slicedToArray(_useState3,2),activeItem=_useState4[0],setActiveItem=_useState4[1];var _useFormManager=useFormManager(activeItem,setActiveItem),itemState=_useFormManager.state,itemChange=_useFormManager.onChange;var _useFormManager2=useFormManager(itemsType,setItemsType),state=_useFormManager2.state,onChange=_useFormManager2.onChange;var resetItemsType=useCallback(function(){//@ts-ignore\nsetItemsType({customer_id:0,date:\"\",items:[],query_status:\"n\",total:0,discount:0,total_after_discount:0,paid:0,credit:0});},[]);var handleAdd=useCallback(function(){setItemsType(_objectSpread(_objectSpread({},itemsType),{},{items:[].concat(_toConsumableArray(itemsType.items),[activeItem]),total:itemsType.total+activeItem.total}));setActiveItem({item_id:0,width:0,height:0,size:0,quantity:0,price:0,total:0,notes:\"\",itemName:\"\",print_id:0,print_name:\"\"});},[activeItem,itemsType]);// const handleDelete = useCallback((passedItem: itemsType) => {\n//     // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n//     let newItems = itemsType.items.filter((item: itemsType) => { item !== passedItem })\n//     // setItemsType({ ...itemsType, items: newItems })\n//     console.log(newItems)\n// }, [itemsType]);\nvar handleSave=useCallback(function(){setRow(itemsType);resetItemsType();},[itemsType,resetItemsType,setRow]);useEffect(function(){setItemsType(_objectSpread(_objectSpread({},itemsType),{},{total_after_discount:itemsType.total-itemsType.discount,credit:itemsType.total-itemsType.discount-itemsType.paid}));// eslint-disable-next-line react-hooks/exhaustive-deps\n},[itemsType.total,itemsType.discount,itemsType.paid]);var addionalButtons=[{icon:\"fa-solid fa-broom\",onClick:resetItemsType}];return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Table,{columns:columns,dataSource:itemsType.items,actionColumn:true,actionLabel:\"Delete\"// onAction={handleDelete}\n,hideTools:false,onAdd:handleAdd,onSave:handleSave,onSelectedRow:setActiveItem,canAdd:true,canSave:true,addionalButtons:addionalButtons,children:/*#__PURE__*/_jsx(InsertForm,{itemState:itemState,itemChange:itemChange,activeItem:activeItem,setActiveItem:setActiveItem,onChange:onChange,state:state})}),/*#__PURE__*/_jsxs(\"div\",{style:{display:\"flex\",width:\"100%\",justifyContent:\"space-between\",padding:\"0 100px\"},children:[/*#__PURE__*/_jsx(InputText,{name:\"total\",disabled:true//@ts-ignore\n,value:state.total,Label:\"Total\"}),/*#__PURE__*/_jsx(InputText,{name:\"discount\"//@ts-ignore\n,value:state.discount,Label:\"Discount\",onChange:onChange}),/*#__PURE__*/_jsx(InputText,{name:\"totalAfterDiscount\",disabled:true//@ts-ignore\n,value:state.total_after_discount,Label:\"Total After Discount\"}),/*#__PURE__*/_jsx(InputText,{name:\"paid\"//@ts-ignore\n,value:state.paid,Label:\"Paid\",onChange:onChange}),/*#__PURE__*/_jsx(InputText,{name:\"credit\",disabled:true//@ts-ignore\n,value:state.credit,Label:\"Credit\"})]})]});};export default/*#__PURE__*/memo(CustomerInvoices);","map":{"version":3,"names":["memo","useCallback","useEffect","useState","InsertForm","InputText","useFormManager","usePost","Table","columns","CustomerInvoices","setRow","customer_id","date","items","query_status","total","discount","total_after_discount","paid","credit","itemsType","setItemsType","item_id","width","height","size","quantity","price","notes","itemName","print_id","print_name","activeItem","setActiveItem","itemState","state","itemChange","onChange","resetItemsType","handleAdd","handleSave","addionalButtons","icon","onClick","display","justifyContent","padding"],"sources":["/home/zyad/Documents/ActiveProjects/SalamApp/src/Pages/CustomerInvoices/component.tsx"],"sourcesContent":["import { memo, useCallback, useEffect, useState } from \"react\";\nimport InsertForm from \"./Partials/InsertForm\";\nimport InputText from \"../../components/InputText/InputText\";\nimport useFormManager from \"../../hooks/useFormManager\";\nimport usePost from \"../../hooks/usePost\";\nimport { invoiceDtls, itemsType } from \"./interface\";\nimport Table from \"../../components/TableView/Table\";\nimport { columns } from \"./constant\"\n\nconst CustomerInvoices = () => {\n    const { setRow } = usePost(\"invoices/customer_invoice_dml\")\n\n    const [itemsType, setItemsType] = useState<invoiceDtls>({\n        customer_id: 0,\n        date: \"\",\n        items: [],\n        query_status: \"n\",\n        total: 0,\n        discount: 0,\n        total_after_discount: 0,\n        paid: 0,\n        credit: 0\n    })\n    const [activeItem, setActiveItem] = useState<itemsType>({\n        item_id: 0,\n        width: 0,\n        height: 0,\n        size: 0,\n        quantity: 0,\n        price: 0,\n        total: 0,\n        notes: \"\",\n        itemName: \"\",\n        print_id: 0,\n        print_name: \"\"\n    })\n\n    const { state: itemState, onChange: itemChange } = useFormManager(activeItem, setActiveItem)\n    const { state, onChange } = useFormManager(itemsType, setItemsType)\n\n    const resetItemsType = useCallback(() => {\n        //@ts-ignore\n        setItemsType({\n            customer_id: 0,\n            date: \"\",\n            items: [],\n            query_status: \"n\",\n            total: 0,\n            discount: 0,\n            total_after_discount: 0,\n            paid: 0,\n            credit: 0\n        })\n    }, [])\n\n    const handleAdd = useCallback(() => {\n        setItemsType({ ...itemsType, items: [...itemsType.items, activeItem], total: itemsType.total + activeItem.total })\n        setActiveItem({\n            item_id: 0,\n            width: 0,\n            height: 0,\n            size: 0,\n            quantity: 0,\n            price: 0,\n            total: 0,\n            notes: \"\",\n            itemName: \"\",\n            print_id: 0,\n            print_name: \"\"\n        })\n\n    }, [activeItem, itemsType]);\n\n    // const handleDelete = useCallback((passedItem: itemsType) => {\n    //     // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n    //     let newItems = itemsType.items.filter((item: itemsType) => { item !== passedItem })\n    //     // setItemsType({ ...itemsType, items: newItems })\n    //     console.log(newItems)\n    // }, [itemsType]);\n\n    const handleSave = useCallback(() => {\n        setRow(itemsType)\n        resetItemsType()\n    }, [itemsType, resetItemsType, setRow]);\n\n    useEffect(() => {\n        setItemsType({ ...itemsType, total_after_discount: itemsType.total - itemsType.discount, credit: itemsType.total - itemsType.discount - itemsType.paid })\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [itemsType.total, itemsType.discount, itemsType.paid])\n\n    const addionalButtons = [\n        {\n            icon: \"fa-solid fa-broom\",\n            onClick: resetItemsType\n        },\n    ]\n    return (\n        <>\n\n            <Table\n                columns={columns}\n                dataSource={itemsType.items}\n                actionColumn\n                actionLabel=\"Delete\"\n                // onAction={handleDelete}\n                hideTools={false}\n                onAdd={handleAdd}\n                onSave={handleSave}\n                onSelectedRow={setActiveItem}\n                canAdd={true}\n                canSave={true}\n                addionalButtons={addionalButtons}\n            >\n                <InsertForm\n                    itemState={itemState}\n                    itemChange={itemChange}\n                    activeItem={activeItem}\n                    setActiveItem={setActiveItem}\n                    onChange={onChange}\n                    state={state}\n                />\n            </Table>\n            <div style={{ display: \"flex\", width: \"100%\", justifyContent: \"space-between\", padding: \"0 100px\" }}>\n                <InputText\n                    name='total'\n                    disabled\n                    //@ts-ignore\n                    value={state.total}\n                    Label=\"Total\"\n                />\n                <InputText\n                    name='discount'\n                    //@ts-ignore\n                    value={state.discount}\n                    Label=\"Discount\"\n                    onChange={onChange}\n                />\n                <InputText\n                    name='totalAfterDiscount'\n                    disabled\n                    //@ts-ignore\n                    value={state.total_after_discount}\n                    Label=\"Total After Discount\"\n                />\n                <InputText\n                    name='paid'\n                    //@ts-ignore\n                    value={state.paid}\n                    Label=\"Paid\"\n                    onChange={onChange}\n                />\n                <InputText\n                    name='credit'\n                    disabled\n                    //@ts-ignore\n                    value={state.credit}\n                    Label=\"Credit\"\n                />\n            </div>\n        </>\n    )\n}\n\nexport default memo(CustomerInvoices)"],"mappings":"6YAAA,OAASA,IAAI,CAAEC,WAAW,CAAEC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAC9D,MAAOC,WAAU,KAAM,uBAAuB,CAC9C,MAAOC,UAAS,KAAM,sCAAsC,CAC5D,MAAOC,eAAc,KAAM,4BAA4B,CACvD,MAAOC,QAAO,KAAM,qBAAqB,CAEzC,MAAOC,MAAK,KAAM,kCAAkC,CACpD,OAASC,OAAO,KAAQ,YAAY,8IAEpC,GAAMC,iBAAgB,CAAG,QAAnBA,iBAAgB,EAAS,CAC3B,aAAmBH,OAAO,CAAC,+BAA+B,CAAC,CAAnDI,MAAM,UAANA,MAAM,CAEd,cAAkCR,QAAQ,CAAc,CACpDS,WAAW,CAAE,CAAC,CACdC,IAAI,CAAE,EAAE,CACRC,KAAK,CAAE,EAAE,CACTC,YAAY,CAAE,GAAG,CACjBC,KAAK,CAAE,CAAC,CACRC,QAAQ,CAAE,CAAC,CACXC,oBAAoB,CAAE,CAAC,CACvBC,IAAI,CAAE,CAAC,CACPC,MAAM,CAAE,CACZ,CAAC,CAAC,wCAVKC,SAAS,eAAEC,YAAY,eAW9B,eAAoCnB,QAAQ,CAAY,CACpDoB,OAAO,CAAE,CAAC,CACVC,KAAK,CAAE,CAAC,CACRC,MAAM,CAAE,CAAC,CACTC,IAAI,CAAE,CAAC,CACPC,QAAQ,CAAE,CAAC,CACXC,KAAK,CAAE,CAAC,CACRZ,KAAK,CAAE,CAAC,CACRa,KAAK,CAAE,EAAE,CACTC,QAAQ,CAAE,EAAE,CACZC,QAAQ,CAAE,CAAC,CACXC,UAAU,CAAE,EAChB,CAAC,CAAC,yCAZKC,UAAU,eAAEC,aAAa,eAchC,oBAAmD5B,cAAc,CAAC2B,UAAU,CAAEC,aAAa,CAAC,CAA7EC,SAAS,iBAAhBC,KAAK,CAAuBC,UAAU,iBAApBC,QAAQ,CAClC,qBAA4BhC,cAAc,CAACe,SAAS,CAAEC,YAAY,CAAC,CAA3Dc,KAAK,kBAALA,KAAK,CAAEE,QAAQ,kBAARA,QAAQ,CAEvB,GAAMC,eAAc,CAAGtC,WAAW,CAAC,UAAM,CACrC;AACAqB,YAAY,CAAC,CACTV,WAAW,CAAE,CAAC,CACdC,IAAI,CAAE,EAAE,CACRC,KAAK,CAAE,EAAE,CACTC,YAAY,CAAE,GAAG,CACjBC,KAAK,CAAE,CAAC,CACRC,QAAQ,CAAE,CAAC,CACXC,oBAAoB,CAAE,CAAC,CACvBC,IAAI,CAAE,CAAC,CACPC,MAAM,CAAE,CACZ,CAAC,CAAC,CACN,CAAC,CAAE,EAAE,CAAC,CAEN,GAAMoB,UAAS,CAAGvC,WAAW,CAAC,UAAM,CAChCqB,YAAY,gCAAMD,SAAS,MAAEP,KAAK,8BAAMO,SAAS,CAACP,KAAK,GAAEmB,UAAU,EAAC,CAAEjB,KAAK,CAAEK,SAAS,CAACL,KAAK,CAAGiB,UAAU,CAACjB,KAAK,GAAG,CAClHkB,aAAa,CAAC,CACVX,OAAO,CAAE,CAAC,CACVC,KAAK,CAAE,CAAC,CACRC,MAAM,CAAE,CAAC,CACTC,IAAI,CAAE,CAAC,CACPC,QAAQ,CAAE,CAAC,CACXC,KAAK,CAAE,CAAC,CACRZ,KAAK,CAAE,CAAC,CACRa,KAAK,CAAE,EAAE,CACTC,QAAQ,CAAE,EAAE,CACZC,QAAQ,CAAE,CAAC,CACXC,UAAU,CAAE,EAChB,CAAC,CAAC,CAEN,CAAC,CAAE,CAACC,UAAU,CAAEZ,SAAS,CAAC,CAAC,CAE3B;AACA;AACA;AACA;AACA;AACA;AAEA,GAAMoB,WAAU,CAAGxC,WAAW,CAAC,UAAM,CACjCU,MAAM,CAACU,SAAS,CAAC,CACjBkB,cAAc,EAAE,CACpB,CAAC,CAAE,CAAClB,SAAS,CAAEkB,cAAc,CAAE5B,MAAM,CAAC,CAAC,CAEvCT,SAAS,CAAC,UAAM,CACZoB,YAAY,gCAAMD,SAAS,MAAEH,oBAAoB,CAAEG,SAAS,CAACL,KAAK,CAAGK,SAAS,CAACJ,QAAQ,CAAEG,MAAM,CAAEC,SAAS,CAACL,KAAK,CAAGK,SAAS,CAACJ,QAAQ,CAAGI,SAAS,CAACF,IAAI,GAAG,CACzJ;AACJ,CAAC,CAAE,CAACE,SAAS,CAACL,KAAK,CAAEK,SAAS,CAACJ,QAAQ,CAAEI,SAAS,CAACF,IAAI,CAAC,CAAC,CAEzD,GAAMuB,gBAAe,CAAG,CACpB,CACIC,IAAI,CAAE,mBAAmB,CACzBC,OAAO,CAAEL,cACb,CAAC,CACJ,CACD,mBACI,wCAEI,KAAC,KAAK,EACF,OAAO,CAAE9B,OAAQ,CACjB,UAAU,CAAEY,SAAS,CAACP,KAAM,CAC5B,YAAY,MACZ,WAAW,CAAC,QACZ;AAAA,CACA,SAAS,CAAE,KAAM,CACjB,KAAK,CAAE0B,SAAU,CACjB,MAAM,CAAEC,UAAW,CACnB,aAAa,CAAEP,aAAc,CAC7B,MAAM,CAAE,IAAK,CACb,OAAO,CAAE,IAAK,CACd,eAAe,CAAEQ,eAAgB,uBAEjC,KAAC,UAAU,EACP,SAAS,CAAEP,SAAU,CACrB,UAAU,CAAEE,UAAW,CACvB,UAAU,CAAEJ,UAAW,CACvB,aAAa,CAAEC,aAAc,CAC7B,QAAQ,CAAEI,QAAS,CACnB,KAAK,CAAEF,KAAM,EACf,EACE,cACR,aAAK,KAAK,CAAE,CAAES,OAAO,CAAE,MAAM,CAAErB,KAAK,CAAE,MAAM,CAAEsB,cAAc,CAAE,eAAe,CAAEC,OAAO,CAAE,SAAU,CAAE,wBAChG,KAAC,SAAS,EACN,IAAI,CAAC,OAAO,CACZ,QAAQ,KACR;AAAA,CACA,KAAK,CAAEX,KAAK,CAACpB,KAAM,CACnB,KAAK,CAAC,OAAO,EACf,cACF,KAAC,SAAS,EACN,IAAI,CAAC,UACL;AAAA,CACA,KAAK,CAAEoB,KAAK,CAACnB,QAAS,CACtB,KAAK,CAAC,UAAU,CAChB,QAAQ,CAAEqB,QAAS,EACrB,cACF,KAAC,SAAS,EACN,IAAI,CAAC,oBAAoB,CACzB,QAAQ,KACR;AAAA,CACA,KAAK,CAAEF,KAAK,CAAClB,oBAAqB,CAClC,KAAK,CAAC,sBAAsB,EAC9B,cACF,KAAC,SAAS,EACN,IAAI,CAAC,MACL;AAAA,CACA,KAAK,CAAEkB,KAAK,CAACjB,IAAK,CAClB,KAAK,CAAC,MAAM,CACZ,QAAQ,CAAEmB,QAAS,EACrB,cACF,KAAC,SAAS,EACN,IAAI,CAAC,QAAQ,CACb,QAAQ,KACR;AAAA,CACA,KAAK,CAAEF,KAAK,CAAChB,MAAO,CACpB,KAAK,CAAC,QAAQ,EAChB,GACA,GACP,CAEX,CAAC,CAED,2BAAepB,IAAI,CAACU,gBAAgB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}