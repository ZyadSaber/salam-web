{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useCallback } from \"react\";\nimport usePost from \"../../../hooks/usePost\";\nconst useTableControlsButtons = api => {\n  _s();\n  const [selectedRow, setSelectedRow] = useState({});\n  const [mode, setMode] = useState(\"\");\n  const {\n    setRow\n  } = usePost(api);\n  console.log(mode);\n  const onSaveAndInsertion = useCallback(() => {\n    if (mode === \"n\") {\n      setSelectedRow({\n        ...selectedRow,\n        \"query_status\": \"n\"\n      });\n      setRow(selectedRow);\n      setSelectedRow({});\n      setMode(\"\");\n    } else if (mode === \"u\") {\n      setSelectedRow({\n        ...selectedRow,\n        \"query_status\": \"u\"\n      });\n      setSelectedRow({});\n      setMode(\"\");\n    }\n  }, [mode, selectedRow, setRow]);\n  const onDelete = useCallback(() => {\n    setSelectedRow({\n      ...selectedRow,\n      \"query_status\": \"d\"\n    });\n    setRow(selectedRow);\n    setSelectedRow({});\n    setMode(\"\");\n  }, [selectedRow, setRow]);\n  return {\n    setSelectedRow,\n    onSaveAndInsertion,\n    setMode,\n    selectedRow,\n    onDelete\n  };\n};\n_s(useTableControlsButtons, \"NuNBRpOSdxNpjPF8qi+nH+w251c=\", false, function () {\n  return [usePost];\n});\nexport default useTableControlsButtons;","map":{"version":3,"names":["useState","useCallback","usePost","useTableControlsButtons","api","selectedRow","setSelectedRow","mode","setMode","setRow","console","log","onSaveAndInsertion","onDelete"],"sources":["C:/Users/Zyad Ahmed/Documents/Active Projects/test/src/components/TableView/hooks/useTableControlsButtons.ts"],"sourcesContent":["import { useState, useCallback } from \"react\";\r\nimport usePost from \"../../../hooks/usePost\";\r\n\r\ntype modeType = \"n\" | \"d\" | \"u\" | \"\"\r\n\r\nconst useTableControlsButtons = (api?: string) => {\r\n\r\n    const [selectedRow, setSelectedRow] = useState<any>({})\r\n    const [mode, setMode] = useState<modeType>(\"\")\r\n    const { setRow } = usePost(api)\r\n    console.log(mode)\r\n\r\n\r\n    const onSaveAndInsertion = useCallback(()=>{\r\n        if (mode === \"n\") {\r\n            setSelectedRow({...selectedRow, \"query_status\":\"n\"})\r\n            setRow(selectedRow)\r\n            setSelectedRow({})\r\n            setMode(\"\")\r\n        } else if (mode === \"u\") {\r\n            setSelectedRow({...selectedRow, \"query_status\":\"u\"})\r\n            setSelectedRow({})\r\n            setMode(\"\")\r\n        }\r\n    },[mode, selectedRow, setRow])\r\n\r\n    const onDelete = useCallback(() =>{\r\n        setSelectedRow({...selectedRow, \"query_status\":\"d\"})\r\n        setRow(selectedRow)\r\n            setSelectedRow({})\r\n            setMode(\"\")\r\n        },[selectedRow, setRow])\r\n\r\n    return{setSelectedRow, onSaveAndInsertion, setMode, selectedRow, onDelete}\r\n\r\n}\r\n\r\nexport default useTableControlsButtons"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AAC7C,OAAOC,OAAO,MAAM,wBAAwB;AAI5C,MAAMC,uBAAuB,GAAIC,GAAY,IAAK;EAAA;EAE9C,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGN,QAAQ,CAAM,CAAC,CAAC,CAAC;EACvD,MAAM,CAACO,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAW,EAAE,CAAC;EAC9C,MAAM;IAAES;EAAO,CAAC,GAAGP,OAAO,CAACE,GAAG,CAAC;EAC/BM,OAAO,CAACC,GAAG,CAACJ,IAAI,CAAC;EAGjB,MAAMK,kBAAkB,GAAGX,WAAW,CAAC,MAAI;IACvC,IAAIM,IAAI,KAAK,GAAG,EAAE;MACdD,cAAc,CAAC;QAAC,GAAGD,WAAW;QAAE,cAAc,EAAC;MAAG,CAAC,CAAC;MACpDI,MAAM,CAACJ,WAAW,CAAC;MACnBC,cAAc,CAAC,CAAC,CAAC,CAAC;MAClBE,OAAO,CAAC,EAAE,CAAC;IACf,CAAC,MAAM,IAAID,IAAI,KAAK,GAAG,EAAE;MACrBD,cAAc,CAAC;QAAC,GAAGD,WAAW;QAAE,cAAc,EAAC;MAAG,CAAC,CAAC;MACpDC,cAAc,CAAC,CAAC,CAAC,CAAC;MAClBE,OAAO,CAAC,EAAE,CAAC;IACf;EACJ,CAAC,EAAC,CAACD,IAAI,EAAEF,WAAW,EAAEI,MAAM,CAAC,CAAC;EAE9B,MAAMI,QAAQ,GAAGZ,WAAW,CAAC,MAAK;IAC9BK,cAAc,CAAC;MAAC,GAAGD,WAAW;MAAE,cAAc,EAAC;IAAG,CAAC,CAAC;IACpDI,MAAM,CAACJ,WAAW,CAAC;IACfC,cAAc,CAAC,CAAC,CAAC,CAAC;IAClBE,OAAO,CAAC,EAAE,CAAC;EACf,CAAC,EAAC,CAACH,WAAW,EAAEI,MAAM,CAAC,CAAC;EAE5B,OAAM;IAACH,cAAc;IAAEM,kBAAkB;IAAEJ,OAAO;IAAEH,WAAW;IAAEQ;EAAQ,CAAC;AAE9E,CAAC;AAAA,GA9BKV,uBAAuB;EAAA,QAIND,OAAO;AAAA;AA4B9B,eAAeC,uBAAuB"},"metadata":{},"sourceType":"module","externalDependencies":[]}