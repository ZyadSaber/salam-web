{"ast":null,"code":"var _jsxFileName = \"/home/zyad/Documents/ActiveProjects/SalamApp/src/components/TableView/Table.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback } from 'react';\nimport \"./style.css\";\nimport Button from \"../button/button\";\nimport IconButton from '../button/iconButton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Table = _ref => {\n  _s();\n  let {\n    dataSource,\n    rowkey = \"rowkey\",\n    columns,\n    hideTools = true,\n    canEdit = false,\n    canAdd = false,\n    canDelete = false,\n    onAdd,\n    onEdit,\n    onDelete,\n    children,\n    actionColumn = false,\n    onAction,\n    actionLabel = \"\",\n    onSelectedRow,\n    canPrint = false,\n    onPrint,\n    addionalButtons,\n    onSave,\n    canSave = false,\n    width = \"100%\"\n  } = _ref;\n  //@ts-ignore\n  const [rowSelected, setRowSelected] = useState();\n  const handleSelectedRow = useCallback(item => () => {\n    onSelectedRow(item);\n    setRowSelected(item);\n  }, [onSelectedRow]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"view\",\n      style: {\n        width: width\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"section\",\n          children: [children, /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tools\",\n            hidden: hideTools,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"TableTools\",\n              children: [/*#__PURE__*/_jsxDEV(IconButton, {\n                icon: \"fa-sharp fa-solid fa-plus\",\n                onClick: onAdd,\n                disabled: canAdd\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                icon: \"fa-sharp fa-solid fa-pen-clip\",\n                onClick: onEdit,\n                disabled: canEdit\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                icon: \"fa-sharp fa-solid fa-trash\",\n                onClick: onDelete,\n                disabled: canDelete\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 33\n              }, this), addionalButtons && addionalButtons.map(button => {\n                return /*#__PURE__*/_jsxDEV(IconButton, {\n                  icon: button.icon,\n                  onClick: button.onClick,\n                  disabled: button.disabled\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 94,\n                  columnNumber: 41\n                }, this);\n              }), /*#__PURE__*/_jsxDEV(IconButton, {\n                icon: \"fa-solid fa-floppy-disk\",\n                onClick: onSave,\n                disabled: canSave\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                icon: \"fa-solid fa-print\",\n                onClick: onPrint,\n                disabled: canPrint\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"table2 \",\n            children: [/*#__PURE__*/_jsxDEV(\"table\", {\n              className: \"table\",\n              children: /*#__PURE__*/_jsxDEV(\"thead\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  className: \"table-secondary\",\n                  children: [columns.map(item => {\n                    return /*#__PURE__*/_jsxDEV(\"th\", {\n                      scope: \"col\",\n                      style: {\n                        width: item.width\n                      },\n                      children: item.title\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 119,\n                      columnNumber: 49\n                    }, this);\n                  }), /*#__PURE__*/_jsxDEV(\"th\", {\n                    hidden: !actionColumn,\n                    children: \"Action\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 124,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 116,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"tbl-content\",\n              children: /*#__PURE__*/_jsxDEV(\"table\", {\n                className: \"table \",\n                children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n                  children: dataSource === null || dataSource === void 0 ? void 0 : dataSource.map(item => {\n                    return /*#__PURE__*/_jsxDEV(\"tr\", {\n                      onClick: handleSelectedRow(item),\n                      children: [columns.map(column => {\n                        return /*#__PURE__*/_jsxDEV(\"td\", {\n                          className: `${rowSelected === item ? \"table-success\" : \"table-light\"} `,\n                          style: {\n                            width: column.width\n                          },\n                          children: item[column.dataIndex]\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 136,\n                          columnNumber: 61\n                        }, this);\n                      }), /*#__PURE__*/_jsxDEV(\"td\", {\n                        className: `${rowSelected === item ? \"table-success\" : \"table-light\"} `,\n                        hidden: !actionColumn,\n                        children: /*#__PURE__*/_jsxDEV(Button, {\n                          label: actionLabel,\n                          onClick: () => {\n                            onAction(item);\n                          }\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 142,\n                          columnNumber: 57\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 141,\n                        columnNumber: 53\n                      }, this)]\n                    }, item[rowkey], true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 133,\n                      columnNumber: 49\n                    }, this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 130,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(Table, \"L+NSgJPUMzlDe6jkwM6gdC2ftGk=\");\n_c = Table;\nexport default Table;\nvar _c;\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"names":["React","useState","useCallback","Button","IconButton","Table","dataSource","rowkey","columns","hideTools","canEdit","canAdd","canDelete","onAdd","onEdit","onDelete","children","actionColumn","onAction","actionLabel","onSelectedRow","canPrint","onPrint","addionalButtons","onSave","canSave","width","rowSelected","setRowSelected","handleSelectedRow","item","map","button","icon","onClick","disabled","title","column","dataIndex"],"sources":["/home/zyad/Documents/ActiveProjects/SalamApp/src/components/TableView/Table.tsx"],"sourcesContent":["import React, { memo, useState, useMemo, useCallback, useEffect } from 'react';\r\nimport \"./style.css\";\r\nimport Button from \"../button/button\";\r\nimport IconButton from '../button/iconButton';\r\nimport { addionalButton } from \"../../Types/general\"\r\n\r\ninterface TableProps {\r\n    rowkey?: string | number;\r\n    dataSource?: any[];\r\n    columns: column[];\r\n    title?: string;\r\n    canEdit?: boolean;\r\n    canAdd?: boolean;\r\n    canDelete?: boolean;\r\n    hideTools?: boolean;\r\n    onAdd?: () => void;\r\n    onEdit?: () => void | any;\r\n    onDelete?: () => void;\r\n    children?: any;\r\n    Form?: any;\r\n    actionColumn?: boolean;\r\n    onAction?: any;\r\n    actionLabel?: string;\r\n    onSelectedRow?: any;\r\n    canPrint?: boolean;\r\n    onPrint?: () => void;\r\n    addionalButtons?: addionalButton[];\r\n    onSave?: () => void;\r\n    canSave?: boolean;\r\n    width?: number | string;\r\n}\r\n\r\ninterface column {\r\n    title: string;\r\n    width?: number | string;\r\n    dataIndex?: any;\r\n}\r\n\r\nconst Table = ({\r\n    dataSource,\r\n    rowkey = \"rowkey\",\r\n    columns,\r\n    hideTools = true,\r\n    canEdit = false,\r\n    canAdd = false,\r\n    canDelete = false,\r\n    onAdd,\r\n    onEdit,\r\n    onDelete,\r\n    children,\r\n    actionColumn = false,\r\n    onAction,\r\n    actionLabel = \"\",\r\n    onSelectedRow,\r\n    canPrint = false,\r\n    onPrint,\r\n    addionalButtons,\r\n    onSave,\r\n    canSave = false,\r\n    width = \"100%\"\r\n}: TableProps) => {\r\n    //@ts-ignore\r\n    const [rowSelected, setRowSelected] = useState()\r\n    const handleSelectedRow = useCallback((item: any) => () => {\r\n        onSelectedRow(item)\r\n        setRowSelected(item)\r\n    }, [onSelectedRow])\r\n\r\n    return (\r\n        <>\r\n            <div className=\"view\" style={{ width: width }}>\r\n                <div>\r\n                    <div className=\"section\">\r\n                        {children}\r\n                        <div className=\"tools\" hidden={hideTools}>\r\n                            <div className=\"TableTools\">\r\n                                <IconButton\r\n                                    icon='fa-sharp fa-solid fa-plus'\r\n                                    onClick={onAdd}\r\n                                    disabled={canAdd}\r\n                                />\r\n                                <IconButton\r\n                                    icon='fa-sharp fa-solid fa-pen-clip'\r\n                                    onClick={onEdit}\r\n                                    disabled={canEdit}\r\n                                />\r\n                                <IconButton\r\n                                    icon='fa-sharp fa-solid fa-trash'\r\n                                    onClick={onDelete}\r\n                                    disabled={canDelete}\r\n                                />\r\n                                {addionalButtons && addionalButtons.map((button: addionalButton) => {\r\n                                    return (\r\n                                        <IconButton\r\n                                            icon={button.icon}\r\n                                            onClick={button.onClick}\r\n                                            disabled={button.disabled}\r\n                                        />\r\n                                    )\r\n                                })}\r\n                                <IconButton\r\n                                    icon='fa-solid fa-floppy-disk'\r\n                                    onClick={onSave}\r\n                                    disabled={canSave}\r\n                                />\r\n                                <IconButton\r\n                                    icon='fa-solid fa-print'\r\n                                    onClick={onPrint}\r\n                                    disabled={canPrint}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"table2 \">\r\n                            <table className='table'>\r\n                                <thead>\r\n                                    <tr className='table-secondary'>\r\n                                        {columns.map((item: any) => {\r\n                                            return (\r\n                                                <th scope=\"col\" style={{ width: item.width }}>\r\n                                                    {item.title}\r\n                                                </th>\r\n                                            )\r\n                                        })}\r\n                                        <th hidden={!actionColumn}>Action</th>\r\n                                    </tr>\r\n                                </thead>\r\n                            </table>\r\n                            <div className=\"tbl-content\">\r\n                                <table className='table '>\r\n                                    <tbody>\r\n                                        {dataSource?.map((item: any) => {\r\n                                            return (\r\n                                                <tr key={item[rowkey]} onClick={handleSelectedRow(item)}>\r\n                                                    {columns.map((column: any) => {\r\n                                                        return (\r\n                                                            <td className={`${rowSelected === item ? \"table-success\" : \"table-light\"} `} style={{ width: column.width }}>\r\n                                                                {item[column.dataIndex]}\r\n                                                            </td>\r\n                                                        )\r\n                                                    })}\r\n                                                    <td className={`${rowSelected === item ? \"table-success\" : \"table-light\"} `} hidden={!actionColumn}>\r\n                                                        <Button\r\n                                                            label={actionLabel}\r\n                                                            onClick={() => { onAction(item) }}\r\n                                                        />\r\n                                                    </td>\r\n                                                </tr>\r\n                                            )\r\n                                        })}\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Table;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}