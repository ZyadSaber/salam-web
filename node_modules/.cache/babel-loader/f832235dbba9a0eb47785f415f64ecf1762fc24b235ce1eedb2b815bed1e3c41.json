{"ast":null,"code":"var _jsxFileName = \"/home/zyad/Documents/ActiveProjects/SalamApp/src/Pages/PrintOptions/Partials/ModalView.tsx\";\nimport { memo } from 'react';\nimport Modal from \"../../../components/Modal/Modal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ModalView = _ref => {\n  let {\n    visible,\n    onOK,\n    onClose,\n    setSelectedRow,\n    selectedRow\n  } = _ref;\n  // const onChangeName = useCallback((event?: any) => {\n  //     setSelectedRow({ ...selectedRow, name: event.target.value })\n  // }, [selectedRow, setSelectedRow]);\n  // const onChangeEmail = useCallback((event?: any) => {\n  //     setSelectedRow({ ...selectedRow, email: event.target.value })\n  // }, [selectedRow, setSelectedRow])\n  // const onChangePhone = useCallback((event?: any) => {\n  //     setSelectedRow({ ...selectedRow, phone: event.target.value })\n  // }, [selectedRow, setSelectedRow])\n  // const onChangeMobile = useCallback((event?: any) => {\n  //     setSelectedRow({ ...selectedRow, mobile: event.target.value })\n  // }, [selectedRow, setSelectedRow])\n  // const onChangeAddress = useCallback((event?: any) => {\n  //     setSelectedRow({ ...selectedRow, address: event.target.value })\n  // }, [selectedRow, setSelectedRow])\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    visible: visible,\n    label: \"Details\",\n    onOK: onOK,\n    onClose: onClose\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n_c = ModalView;\nexport default _c2 = /*#__PURE__*/memo(ModalView);\nvar _c, _c2;\n$RefreshReg$(_c, \"ModalView\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["memo","Modal","ModalView","visible","onOK","onClose","setSelectedRow","selectedRow"],"sources":["/home/zyad/Documents/ActiveProjects/SalamApp/src/Pages/PrintOptions/Partials/ModalView.tsx"],"sourcesContent":["import { memo, useCallback } from 'react';\nimport Modal from \"../../../components/Modal/Modal\";\n\ninterface ModalViewProp {\n    visible: boolean;\n    onOK: () => void;\n    onClose: () => void;\n    selectedRow: any;\n    setSelectedRow: any\n}\n\nconst ModalView = ({\n    visible,\n    onOK,\n    onClose,\n    setSelectedRow,\n    selectedRow\n}: ModalViewProp) => {\n\n    // const onChangeName = useCallback((event?: any) => {\n    //     setSelectedRow({ ...selectedRow, name: event.target.value })\n    // }, [selectedRow, setSelectedRow]);\n    // const onChangeEmail = useCallback((event?: any) => {\n    //     setSelectedRow({ ...selectedRow, email: event.target.value })\n    // }, [selectedRow, setSelectedRow])\n    // const onChangePhone = useCallback((event?: any) => {\n    //     setSelectedRow({ ...selectedRow, phone: event.target.value })\n    // }, [selectedRow, setSelectedRow])\n    // const onChangeMobile = useCallback((event?: any) => {\n    //     setSelectedRow({ ...selectedRow, mobile: event.target.value })\n    // }, [selectedRow, setSelectedRow])\n    // const onChangeAddress = useCallback((event?: any) => {\n    //     setSelectedRow({ ...selectedRow, address: event.target.value })\n    // }, [selectedRow, setSelectedRow])\n\n\n\n    return (\n        <Modal\n            visible={visible}\n            label={\"Details\"}\n            onOK={onOK}\n            onClose={onClose}\n        >\n            {/* <label htmlFor=\"\">Name</label>\n            <input type=\"text\" value={selectedRow.name} onChange={onChangeName} />\n            <label htmlFor=\"\">Email</label>\n            <input type=\"text\" value={selectedRow.email} onChange={onChangeEmail} />\n            <label htmlFor=\"\">Phone</label>\n            <input type=\"text\" value={selectedRow.phone} onChange={onChangePhone} />\n            <label htmlFor=\"\">Mobile</label>\n            <input type=\"text\" value={selectedRow.mobile} onChange={onChangeMobile} />\n            <label htmlFor=\"\">Address</label>\n            <input type=\"text\" value={selectedRow.address} onChange={onChangeAddress} /> */}\n        </Modal>\n    )\n};\n\nexport default memo(ModalView)"],"mappings":";AAAA,SAASA,IAAI,QAAqB,OAAO;AACzC,OAAOC,KAAK,MAAM,iCAAiC;AAAC;AAUpD,MAAMC,SAAS,GAAG,QAMG;EAAA,IANF;IACfC,OAAO;IACPC,IAAI;IACJC,OAAO;IACPC,cAAc;IACdC;EACW,CAAC;EAEZ;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAIA,oBACI,QAAC,KAAK;IACF,OAAO,EAAEJ,OAAQ;IACjB,KAAK,EAAE,SAAU;IACjB,IAAI,EAAEC,IAAK;IACX,OAAO,EAAEC;EAAQ;IAAA;IAAA;IAAA;EAAA,QAYb;AAEhB,CAAC;AAAC,KA7CIH,SAAS;AA+Cf,kCAAeF,IAAI,CAACE,SAAS,CAAC;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}