{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Zyad Ahmed\\\\Documents\\\\Active Projects\\\\test\\\\src\\\\components\\\\TableView\\\\ApiTable.tsx\",\n  _s = $RefreshSig$();\nimport { memo, useState } from \"react\";\nimport Table from \"./Table\";\nimport useFetch from \"../../hooks/useFetch\";\nimport useTableControlsButtons from \"./hooks/useTableControlsButtons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ApiTable = _ref => {\n  _s();\n  let {\n    api,\n    postApi,\n    columns,\n    hideTools,\n    canAdd,\n    canEdit,\n    canDelete,\n    rowKey\n  } = _ref;\n  const {\n    data\n  } = useFetch(api);\n  const {\n    setSelectedRow,\n    onSaveAndInsertion,\n    selectedRow\n  } = useTableControlsButtons(postApi);\n  const [row, setRow] = useState({});\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      dataSource: data,\n      columns: columns,\n      hideTools: hideTools,\n      canAdd: canAdd,\n      canEdit: canEdit,\n      canDelete: canDelete,\n      rowkey: rowKey\n      // onAdd={handleAdd}\n      // onEdit={handleEdit}\n      // onDelete={() => {\n      //     setSelectedRow({ ...selectedRow, query_status: \"d\" })\n      //     onSaveAndInsertion()\n      // }}\n      // onSelectedRow={setSelectedRow}\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(ApiTable, \"uCGHY0/fN6t95SJn+I0CFse0seg=\", false, function () {\n  return [useFetch, useTableControlsButtons];\n});\n_c = ApiTable;\nexport default _c2 = /*#__PURE__*/memo(ApiTable);\nvar _c, _c2;\n$RefreshReg$(_c, \"ApiTable\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["memo","useState","Table","useFetch","useTableControlsButtons","ApiTable","api","postApi","columns","hideTools","canAdd","canEdit","canDelete","rowKey","data","setSelectedRow","onSaveAndInsertion","selectedRow","row","setRow"],"sources":["C:/Users/Zyad Ahmed/Documents/Active Projects/test/src/components/TableView/ApiTable.tsx"],"sourcesContent":["import { memo, useState } from \"react\";\r\nimport Table from \"./Table\";\r\nimport useFetch from \"../../hooks/useFetch\";\r\nimport useTableControlsButtons from \"./hooks/useTableControlsButtons\"\r\n\r\ninterface ApiTableProps {\r\n    api: string;\r\n    postApi?: string;\r\n    columns: {\r\n        title: string,\r\n        dataIndex: string,\r\n        width: number\r\n    }[];\r\n    hideTools?: boolean;\r\n    canAdd?: boolean;\r\n    canEdit?: boolean;\r\n    canDelete?: boolean;\r\n    rowKey: string;\r\n}\r\n\r\nconst ApiTable = ({\r\n    api,\r\n    postApi,\r\n    columns,\r\n    hideTools,\r\n    canAdd,\r\n    canEdit,\r\n    canDelete,\r\n    rowKey\r\n}: ApiTableProps) => {\r\n\r\n    const { data } = useFetch(api)\r\n    const { setSelectedRow, onSaveAndInsertion, selectedRow } = useTableControlsButtons(postApi)\r\n    const [row, setRow] = useState({})\r\n\r\n    return (\r\n        <>\r\n\r\n            <Table\r\n                dataSource={data}\r\n                columns={columns}\r\n                hideTools={hideTools}\r\n                canAdd={canAdd}\r\n                canEdit={canEdit}\r\n                canDelete={canDelete}\r\n                rowkey={rowKey}\r\n            // onAdd={handleAdd}\r\n            // onEdit={handleEdit}\r\n            // onDelete={() => {\r\n            //     setSelectedRow({ ...selectedRow, query_status: \"d\" })\r\n            //     onSaveAndInsertion()\r\n            // }}\r\n            // onSelectedRow={setSelectedRow}\r\n            >\r\n            </Table>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default memo(ApiTable)"],"mappings":";;AAAA,SAASA,IAAI,EAAEC,QAAQ,QAAQ,OAAO;AACtC,OAAOC,KAAK,MAAM,SAAS;AAC3B,OAAOC,QAAQ,MAAM,sBAAsB;AAC3C,OAAOC,uBAAuB,MAAM,iCAAiC;AAAA;AAAA;AAiBrE,MAAMC,QAAQ,GAAG,QASI;EAAA;EAAA,IATH;IACdC,GAAG;IACHC,OAAO;IACPC,OAAO;IACPC,SAAS;IACTC,MAAM;IACNC,OAAO;IACPC,SAAS;IACTC;EACW,CAAC;EAEZ,MAAM;IAAEC;EAAK,CAAC,GAAGX,QAAQ,CAACG,GAAG,CAAC;EAC9B,MAAM;IAAES,cAAc;IAAEC,kBAAkB;IAAEC;EAAY,CAAC,GAAGb,uBAAuB,CAACG,OAAO,CAAC;EAC5F,MAAM,CAACW,GAAG,EAAEC,MAAM,CAAC,GAAGlB,QAAQ,CAAC,CAAC,CAAC,CAAC;EAElC,oBACI;IAAA,uBAEI,QAAC,KAAK;MACF,UAAU,EAAEa,IAAK;MACjB,OAAO,EAAEN,OAAQ;MACjB,SAAS,EAAEC,SAAU;MACrB,MAAM,EAAEC,MAAO;MACf,OAAO,EAAEC,OAAQ;MACjB,SAAS,EAAEC,SAAU;MACrB,MAAM,EAAEC;MACZ;MACA;MACA;MACA;MACA;MACA;MACA;IAAA;MAAA;MAAA;MAAA;IAAA;EAEQ,iBAET;AAEX,CAAC;AAAA,GAtCKR,QAAQ;EAAA,QAWOF,QAAQ,EACmCC,uBAAuB;AAAA;AAAA,KAZjFC,QAAQ;AAwCd,kCAAeL,IAAI,CAACK,QAAQ,CAAC;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}