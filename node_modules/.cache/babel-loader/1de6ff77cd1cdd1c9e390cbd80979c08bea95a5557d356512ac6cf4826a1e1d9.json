{"ast":null,"code":"var _jsxFileName = \"/home/zyad/Documents/active_projects/SalamApp/src/Pages/SupplierInvoice/component.tsx\",\n  _s = $RefreshSig$();\nimport { memo, useState, useCallback, useEffect } from 'react';\nimport usePost from '../../hooks/usePost';\nimport Table from '../../components/TableView/Table';\nimport InputText from '../../components/InputText/InputText';\nimport useFormManager from '../../hooks/useFormManager';\nimport { columns } from \"./constants\";\nimport InsertForm from \"./Partials/InsertForm\";\nimport Flex from '../../components/Flex/Flex';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SupplierInvoice = () => {\n  _s();\n  const {\n    setRow\n  } = usePost({\n    link: \"POST_SUPPLIER_INVOICE\"\n  });\n  const [itemsType, setItemsType] = useState({\n    supplier_id: 0,\n    date: \"\",\n    items: [],\n    query_status: \"n\",\n    total: 0,\n    discount: 0,\n    total_after_discount: 0,\n    paid: 0,\n    credit: 0\n  });\n  const [activeItem, setActiveItem] = useState({\n    item_id: 0,\n    width: 0,\n    height: 0,\n    size: 0,\n    quantity: 0,\n    price: 0,\n    total: 0,\n    notes: \"\",\n    itemName: \"\"\n  });\n  const {\n    state: itemState,\n    onChange: itemChange\n  } = useFormManager({\n    initialValue: activeItem,\n    setSelectedRow: setActiveItem\n  });\n  const {\n    state,\n    onChange\n  } = useFormManager({\n    initialValue: itemsType,\n    setSelectedRow: setItemsType\n  });\n  const resetItemsType = useCallback(() => {\n    //@ts-ignore\n    setItemsType({\n      supplier_id: 0,\n      date: \"\",\n      items: [],\n      query_status: \"n\",\n      total: 0,\n      discount: 0,\n      total_after_discount: 0,\n      paid: 0,\n      credit: 0\n    });\n  }, []);\n  const handleAdd = useCallback(() => {\n    setItemsType({\n      ...itemsType,\n      items: [...itemsType.items, activeItem],\n      total: itemsType.total + activeItem.total\n    });\n    setActiveItem({\n      item_id: 0,\n      width: 0,\n      height: 0,\n      size: 0,\n      quantity: 0,\n      price: 0,\n      total: 0,\n      notes: \"\",\n      itemName: \"\"\n    });\n  }, [activeItem, itemsType]);\n  const handleSave = useCallback(() => {\n    setRow(itemsType);\n    resetItemsType();\n  }, [itemsType, resetItemsType, setRow]);\n  useEffect(() => {\n    setItemsType({\n      ...itemsType,\n      total_after_discount: itemsType.total - itemsType.discount,\n      credit: itemsType.total - itemsType.discount - itemsType.paid\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [itemsType.total, itemsType.discount, itemsType.paid]);\n  const addionalButtons = [{\n    icon: \"fa-solid fa-broom\",\n    onClick: resetItemsType\n  }];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Flex, {\n      flexDirection: \"column\",\n      width: \"100%\",\n      children: [/*#__PURE__*/_jsxDEV(InsertForm, {\n        itemState: itemState,\n        itemChange: itemChange,\n        activeItem: activeItem,\n        setActiveItem: setActiveItem,\n        onChange: onChange,\n        state: state\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        columns: columns,\n        dataSource: itemsType.items,\n        actionColumn: true,\n        actionLabel: \"Delete\"\n        // onAction={handleDelete}\n        ,\n        hideTools: false,\n        onAdd: handleAdd,\n        onSave: handleSave,\n        onSelectedRow: setActiveItem,\n        canAdd: true,\n        canSave: true,\n        addionalButtons: addionalButtons\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Flex, {\n        width: \"100%\",\n        justifyContent: \"space-around\",\n        children: [/*#__PURE__*/_jsxDEV(InputText, {\n          name: \"total\",\n          disabled: true,\n          value: state.total,\n          Label: \"Total\",\n          width: \"15%\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(InputText, {\n          name: \"discount\",\n          value: state.discount,\n          Label: \"Discount\",\n          onChange: onChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(InputText, {\n          name: \"totalAfterDiscount\",\n          disabled: true,\n          value: state.total_after_discount,\n          Label: \"Total After Discount\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(InputText, {\n          name: \"paid\",\n          value: state.paid,\n          Label: \"Paid\",\n          onChange: onChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(InputText, {\n          name: \"credit\",\n          disabled: true,\n          value: state.credit,\n          Label: \"Credit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(SupplierInvoice, \"Oegzj8HAfA1bbYAXzApfy8pkaN4=\", false, function () {\n  return [usePost, useFormManager, useFormManager];\n});\n_c = SupplierInvoice;\nexport default _c2 = /*#__PURE__*/memo(SupplierInvoice);\nvar _c, _c2;\n$RefreshReg$(_c, \"SupplierInvoice\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["memo","useState","useCallback","useEffect","usePost","Table","InputText","useFormManager","columns","InsertForm","Flex","SupplierInvoice","setRow","link","itemsType","setItemsType","supplier_id","date","items","query_status","total","discount","total_after_discount","paid","credit","activeItem","setActiveItem","item_id","width","height","size","quantity","price","notes","itemName","state","itemState","onChange","itemChange","initialValue","setSelectedRow","resetItemsType","handleAdd","handleSave","addionalButtons","icon","onClick"],"sources":["/home/zyad/Documents/active_projects/SalamApp/src/Pages/SupplierInvoice/component.tsx"],"sourcesContent":["import { memo, useState, useCallback, useEffect } from 'react';\r\nimport usePost from '../../hooks/usePost';\r\nimport Table from '../../components/TableView/Table';\r\nimport InputText from '../../components/InputText/InputText';\r\nimport useFormManager from '../../hooks/useFormManager';\r\nimport { columns } from \"./constants\";\r\nimport InsertForm from \"./Partials/InsertForm\";\r\nimport { itemsType, invoiceDtls } from \"./interface\";\r\nimport Flex from '../../components/Flex/Flex';\r\n\r\nconst SupplierInvoice = () => {\r\n\r\n    const { setRow } = usePost({ link: \"POST_SUPPLIER_INVOICE\" })\r\n\r\n    const [itemsType, setItemsType] = useState<invoiceDtls>({\r\n        supplier_id: 0,\r\n        date: \"\",\r\n        items: [],\r\n        query_status: \"n\",\r\n        total: 0,\r\n        discount: 0,\r\n        total_after_discount: 0,\r\n        paid: 0,\r\n        credit: 0\r\n    })\r\n    const [activeItem, setActiveItem] = useState<itemsType>({\r\n        item_id: 0,\r\n        width: 0,\r\n        height: 0,\r\n        size: 0,\r\n        quantity: 0,\r\n        price: 0,\r\n        total: 0,\r\n        notes: \"\",\r\n        itemName: \"\"\r\n    })\r\n\r\n    const { state: itemState, onChange: itemChange } = useFormManager({ initialValue: activeItem, setSelectedRow: setActiveItem })\r\n    const { state, onChange } = useFormManager({ initialValue: itemsType, setSelectedRow: setItemsType })\r\n\r\n    const resetItemsType = useCallback(() => {\r\n        //@ts-ignore\r\n        setItemsType({\r\n            supplier_id: 0,\r\n            date: \"\",\r\n            items: [],\r\n            query_status: \"n\",\r\n            total: 0,\r\n            discount: 0,\r\n            total_after_discount: 0,\r\n            paid: 0,\r\n            credit: 0\r\n        })\r\n    }, [])\r\n\r\n    const handleAdd = useCallback(() => {\r\n        setItemsType({ ...itemsType, items: [...itemsType.items, activeItem], total: itemsType.total + activeItem.total })\r\n        setActiveItem({\r\n            item_id: 0,\r\n            width: 0,\r\n            height: 0,\r\n            size: 0,\r\n            quantity: 0,\r\n            price: 0,\r\n            total: 0,\r\n            notes: \"\",\r\n            itemName: \"\"\r\n        })\r\n\r\n    }, [activeItem, itemsType]);\r\n\r\n    const handleSave = useCallback(() => {\r\n        setRow(itemsType)\r\n        resetItemsType()\r\n    }, [itemsType, resetItemsType, setRow]);\r\n\r\n    useEffect(() => {\r\n        setItemsType({ ...itemsType, total_after_discount: itemsType.total - itemsType.discount, credit: itemsType.total - itemsType.discount - itemsType.paid })\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [itemsType.total, itemsType.discount, itemsType.paid])\r\n\r\n    const addionalButtons = [\r\n        {\r\n            icon: \"fa-solid fa-broom\",\r\n            onClick: resetItemsType\r\n        },\r\n    ]\r\n    return (\r\n        <>\r\n            <Flex flexDirection='column' width='100%'>\r\n                <InsertForm\r\n                    itemState={itemState}\r\n                    itemChange={itemChange}\r\n                    activeItem={activeItem}\r\n                    setActiveItem={setActiveItem}\r\n                    onChange={onChange}\r\n                    state={state}\r\n                />\r\n                <Table\r\n                    columns={columns}\r\n                    dataSource={itemsType.items}\r\n                    actionColumn\r\n                    actionLabel=\"Delete\"\r\n                    // onAction={handleDelete}\r\n                    hideTools={false}\r\n                    onAdd={handleAdd}\r\n                    onSave={handleSave}\r\n                    onSelectedRow={setActiveItem}\r\n                    canAdd={true}\r\n                    canSave={true}\r\n                    addionalButtons={addionalButtons}\r\n                />\r\n                <Flex width='100%' justifyContent='space-around'>\r\n                    <InputText\r\n                        name='total'\r\n                        disabled\r\n                        value={state.total}\r\n                        Label=\"Total\"\r\n                        width=\"15%\"\r\n                    />\r\n                    <InputText\r\n                        name='discount'\r\n                        value={state.discount}\r\n                        Label=\"Discount\"\r\n                        onChange={onChange}\r\n                    />\r\n                    <InputText\r\n                        name='totalAfterDiscount'\r\n                        disabled\r\n                        value={state.total_after_discount}\r\n                        Label=\"Total After Discount\"\r\n                    />\r\n                    <InputText\r\n                        name='paid'\r\n                        value={state.paid}\r\n                        Label=\"Paid\"\r\n                        onChange={onChange}\r\n                    />\r\n                    <InputText\r\n                        name='credit'\r\n                        disabled\r\n                        value={state.credit}\r\n                        Label=\"Credit\"\r\n                    />\r\n                </Flex>\r\n            </Flex>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default memo(SupplierInvoice);"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}