{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Zyad Ahmed\\\\Documents\\\\Active Projects\\\\SalamApp\\\\src\\\\Pages\\\\Suppliers\\\\component.tsx\",\n  _s = $RefreshSig$();\nimport React, { memo, useCallback, useEffect, useState } from 'react';\nimport Header from '../../components/Header/component';\nimport Footer from '../../components/Footer/component';\nimport useCheckUser from '../../hooks/useCheckUser';\nimport './style.css';\nimport useFetch from '../../hooks/useFetch';\nimport ModalView from \"./Partials/ModalView\";\n// import FormView from \"./Partials/FormView\";\n\nimport useTableControlsButtons from \"../../components/TableView/hooks/useTableControlsButtons\";\nimport ApiTable from \"../../components/TableView/ApiTable\";\nimport { columns } from \"./constants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Suppliers = () => {\n  _s();\n  //@ts-ignore\n  const {\n    setSelectedRow,\n    onDelete,\n    onSaveAndInsertion,\n    setMode,\n    selectedRow,\n    response,\n    modal,\n    setModal\n  } = useTableControlsButtons(\"suppliers\");\n  const [search, setSearch] = useState(\"\");\n  const [mainTableData, setMainTableData] = useState([{\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    mobile: \"\",\n    address: \"\"\n  }]);\n  const {\n    hidden\n  } = useCheckUser();\n  const {\n    data\n  } = useFetch(\"http://localhost:8000/suppliers\");\n  useEffect(() => {\n    setMainTableData(data);\n  }, [data, response]);\n  const handleAdd = useCallback(() => {\n    setMode(\"n\");\n    setModal(true);\n    setSelectedRow({});\n  }, [setMode, setModal, setSelectedRow]);\n  const handleCloseModal = useCallback(() => {\n    setModal(false);\n    setSelectedRow({});\n    setMode(\"\");\n    setMainTableData(data);\n  }, [setModal, setSelectedRow, setMode, data]);\n  const handleEdit = useCallback(() => {\n    setMode(\"u\");\n    setModal(true);\n  }, [setModal, setMode]);\n  const handleSelect = useCallback(selected => () => {\n    setSelectedRow(selected);\n  }, [setSelectedRow]);\n  const handleSearchMethod = useCallback(() => {\n    setMainTableData(data.filter(item => {\n      if (search === \"\") return item;else if (item.name.toLocaleLowerCase().includes(search.toLowerCase())) return item;\n    }));\n  }, [data, search]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Suppliers\",\n      hidden: hidden,\n      children: /*#__PURE__*/_jsxDEV(ApiTable, {\n        api: \"basicData/suppliers\",\n        postApi: \"basicData/customers_dml\",\n        columns: columns,\n        hideTools: false,\n        canEdit: true,\n        canAdd: true,\n        canDelete: true,\n        rowKey: \"supplier_id\",\n        Modal: ModalView\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(Suppliers, \"22s3oB7YKB5nakcSX0WqvU01lYo=\", false, function () {\n  return [useTableControlsButtons, useCheckUser, useFetch];\n});\n_c = Suppliers;\nexport default _c2 = /*#__PURE__*/memo(Suppliers);\nvar _c, _c2;\n$RefreshReg$(_c, \"Suppliers\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","memo","useCallback","useEffect","useState","Header","Footer","useCheckUser","useFetch","ModalView","useTableControlsButtons","ApiTable","columns","Suppliers","setSelectedRow","onDelete","onSaveAndInsertion","setMode","selectedRow","response","modal","setModal","search","setSearch","mainTableData","setMainTableData","name","email","phone","mobile","address","hidden","data","handleAdd","handleCloseModal","handleEdit","handleSelect","selected","handleSearchMethod","filter","item","toLocaleLowerCase","includes","toLowerCase"],"sources":["C:/Users/Zyad Ahmed/Documents/Active Projects/SalamApp/src/Pages/Suppliers/component.tsx"],"sourcesContent":["import React, { memo, useCallback, useEffect, useState } from 'react';\r\nimport Header from '../../components/Header/component';\r\nimport Footer from '../../components/Footer/component';\r\nimport useCheckUser from '../../hooks/useCheckUser';\r\nimport './style.css';\r\nimport useFetch from '../../hooks/useFetch';\r\nimport ModalView from \"./Partials/ModalView\";\r\n// import FormView from \"./Partials/FormView\";\r\nimport Table from \"../../components/TableView/Table\";\r\nimport useTableControlsButtons from \"../../components/TableView/hooks/useTableControlsButtons\";\r\nimport ApiTable from \"../../components/TableView/ApiTable\";\r\nimport { columns } from \"./constants\";\r\n\r\ninterface SupplierType {\r\n    id?: number;\r\n    name: string;\r\n    email?: string;\r\n    phone?: string;\r\n    mobile?: string;\r\n    address?: string\r\n}\r\n\r\nconst Suppliers = () => {\r\n    //@ts-ignore\r\n    const { setSelectedRow, onDelete, onSaveAndInsertion, setMode, selectedRow, response, modal, setModal } = useTableControlsButtons(\"suppliers\")\r\n    const [search, setSearch] = useState(\"\");\r\n    const [mainTableData, setMainTableData] = useState<SupplierType[]>([\r\n        {\r\n            name: \"\",\r\n            email: \"\",\r\n            phone: \"\",\r\n            mobile: \"\",\r\n            address: \"\"\r\n        }\r\n    ])\r\n\r\n    const { hidden } = useCheckUser()\r\n    const { data } = useFetch(\"http://localhost:8000/suppliers\")\r\n\r\n    useEffect(() => {\r\n        setMainTableData(data)\r\n    }, [data, response])\r\n\r\n    const handleAdd = useCallback(() => {\r\n        setMode(\"n\")\r\n        setModal(true)\r\n        setSelectedRow({})\r\n    }, [setMode, setModal, setSelectedRow])\r\n\r\n    const handleCloseModal = useCallback(() => {\r\n        setModal(false)\r\n        setSelectedRow({})\r\n        setMode(\"\")\r\n        setMainTableData(data)\r\n    }, [setModal, setSelectedRow, setMode, data])\r\n\r\n    const handleEdit = useCallback(() => {\r\n        setMode(\"u\")\r\n        setModal(true)\r\n    }, [setModal, setMode])\r\n\r\n    const handleSelect = useCallback((selected: SupplierType) => () => { setSelectedRow(selected) }, [setSelectedRow])\r\n\r\n    const handleSearchMethod = useCallback(() => {\r\n        setMainTableData(data.filter((item: SupplierType) => {\r\n            if (search === \"\") return item;\r\n            else if (item.name.toLocaleLowerCase().includes(search.toLowerCase())) return item;\r\n        }))\r\n    }, [data, search])\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <Header />\r\n\r\n            <div className=\"Suppliers\" hidden={hidden}>\r\n                <ApiTable\r\n                    api={\"basicData/suppliers\"}\r\n                    postApi={\"basicData/customers_dml\"}\r\n                    columns={columns}\r\n                    hideTools={false}\r\n                    canEdit={true}\r\n                    canAdd={true}\r\n                    canDelete={true}\r\n                    rowKey={\"supplier_id\"}\r\n                    Modal={ModalView}\r\n                />\r\n            </div>\r\n            <Footer />\r\n        </>\r\n    )\r\n};\r\n\r\nexport default memo(Suppliers);\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}