{"ast":null,"code":"var _jsxFileName = \"/home/zyad/Documents/ActiveProjects/SalamApp/src/Pages/Customers/Partials/ModalView.tsx\",\n  _s = $RefreshSig$();\nimport React, { memo, useCallback } from 'react';\nimport Modal from \"../../../components/Modal/Modal\";\nimport InputText from '../../../components/InputText/InputText';\nimport useFormManager from '../../../hooks/useFormManager';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ModalView = _ref => {\n  _s();\n  let {\n    visible,\n    onOK,\n    onClose,\n    setSelectedRow,\n    selectedRow\n  } = _ref;\n  const {\n    state,\n    onChange\n  } = useFormManager(selectedRow, setSelectedRow);\n  //@ts-ignore\n  const {\n    name,\n    email,\n    phone,\n    mobile,\n    address\n  } = state;\n  const onChangeName = useCallback(event => {\n    setSelectedRow({\n      ...selectedRow,\n      name: event.target.value\n    });\n  }, [selectedRow, setSelectedRow]);\n  const onChangeEmail = useCallback(event => {\n    setSelectedRow({\n      ...selectedRow,\n      email: event.target.value\n    });\n  }, [selectedRow, setSelectedRow]);\n  const onChangePhone = useCallback(event => {\n    setSelectedRow({\n      ...selectedRow,\n      phone: event.target.value\n    });\n  }, [selectedRow, setSelectedRow]);\n  const onChangeMobile = useCallback(event => {\n    setSelectedRow({\n      ...selectedRow,\n      mobile: event.target.value\n    });\n  }, [selectedRow, setSelectedRow]);\n  const onChangeAddress = useCallback(event => {\n    setSelectedRow({\n      ...selectedRow,\n      address: event.target.value\n    });\n  }, [selectedRow, setSelectedRow]);\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    visible: visible,\n    label: \"Details\",\n    onOK: onOK,\n    onClose: onClose,\n    children: [/*#__PURE__*/_jsxDEV(InputText, {\n      name: \"name\",\n      Label: \"Name\"\n      // value={t}\n      // onChange={}\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(InputText, {\n      name: \"name\",\n      Label: \"Name\",\n      onChange: onChange,\n      value: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(InputText, {\n      name: \"email\",\n      Label: \"Email\",\n      onChange: onChange,\n      value: email\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(InputText, {\n      name: \"phone\",\n      Label: \"Phone\",\n      onChange: onChange,\n      value: phone\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(InputText, {\n      name: \"mobile\",\n      Label: \"Mobile\",\n      onChange: onChange,\n      value: mobile\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(InputText, {\n      name: \"address\",\n      Label: \"Address\",\n      onChange: onChange,\n      value: address\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n_s(ModalView, \"QFN12NpbLaFuFie6Up1fa7WmZN4=\", false, function () {\n  return [useFormManager];\n});\n_c = ModalView;\nexport default _c2 = /*#__PURE__*/memo(ModalView);\nvar _c, _c2;\n$RefreshReg$(_c, \"ModalView\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","memo","useCallback","Modal","InputText","useFormManager","ModalView","visible","onOK","onClose","setSelectedRow","selectedRow","state","onChange","name","email","phone","mobile","address","onChangeName","event","target","value","onChangeEmail","onChangePhone","onChangeMobile","onChangeAddress"],"sources":["/home/zyad/Documents/ActiveProjects/SalamApp/src/Pages/Customers/Partials/ModalView.tsx"],"sourcesContent":["import React, { memo, useCallback, useState } from 'react';\r\nimport Modal from \"../../../components/Modal/Modal\";\r\nimport InputText from '../../../components/InputText/InputText';\r\nimport useFormManager from '../../../hooks/useFormManager';\r\n\r\ninterface ModalViewProp {\r\n    visible?: boolean;\r\n    onOK?: () => void;\r\n    onClose?: () => void;\r\n    selectedRow?: any;\r\n    setSelectedRow?: any\r\n}\r\n\r\nconst ModalView = ({\r\n    visible,\r\n    onOK,\r\n    onClose,\r\n    setSelectedRow,\r\n    selectedRow\r\n}: ModalViewProp) => {\r\n\r\n    const { state, onChange } = useFormManager(selectedRow, setSelectedRow)\r\n    //@ts-ignore\r\n    const { name, email, phone, mobile, address } = state\r\n\r\n    const onChangeName = useCallback((event?: any) => {\r\n        setSelectedRow({ ...selectedRow, name: event.target.value })\r\n    }, [selectedRow, setSelectedRow]);\r\n    const onChangeEmail = useCallback((event?: any) => {\r\n        setSelectedRow({ ...selectedRow, email: event.target.value })\r\n    }, [selectedRow, setSelectedRow])\r\n    const onChangePhone = useCallback((event?: any) => {\r\n        setSelectedRow({ ...selectedRow, phone: event.target.value })\r\n    }, [selectedRow, setSelectedRow])\r\n    const onChangeMobile = useCallback((event?: any) => {\r\n        setSelectedRow({ ...selectedRow, mobile: event.target.value })\r\n    }, [selectedRow, setSelectedRow])\r\n    const onChangeAddress = useCallback((event?: any) => {\r\n        setSelectedRow({ ...selectedRow, address: event.target.value })\r\n    }, [selectedRow, setSelectedRow])\r\n\r\n\r\n    return (\r\n        <Modal\r\n            visible={visible}\r\n            label={\"Details\"}\r\n            onOK={onOK}\r\n            onClose={onClose}\r\n        >\r\n            <InputText\r\n                name='name'\r\n                Label='Name'\r\n            // value={t}\r\n            // onChange={}\r\n            />\r\n            <InputText\r\n                name=\"name\"\r\n                Label='Name'\r\n                onChange={onChange}\r\n                value={name}\r\n            />\r\n            <InputText\r\n                name=\"email\"\r\n                Label='Email'\r\n                onChange={onChange}\r\n                value={email}\r\n            />\r\n            <InputText\r\n                name=\"phone\"\r\n                Label='Phone'\r\n                onChange={onChange}\r\n                value={phone}\r\n            />\r\n            <InputText\r\n                name=\"mobile\"\r\n                Label='Mobile'\r\n                onChange={onChange}\r\n                value={mobile}\r\n            />\r\n            <InputText\r\n                name=\"address\"\r\n                Label='Address'\r\n                onChange={onChange}\r\n                value={address}\r\n            />\r\n        </Modal>\r\n    )\r\n};\r\n\r\nexport default memo(ModalView)"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}