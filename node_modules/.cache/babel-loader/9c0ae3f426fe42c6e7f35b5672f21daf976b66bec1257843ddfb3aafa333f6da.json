{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useCallback } from \"react\";\nconst useFormManager = (initialValue, setSelectedRow, change) => {\n  _s();\n  const [initialValues, setInitialValues] = useState();\n  const [state, setState] = useState({});\n  const onChange = useCallback(change => {\n    //@ts-ignore\n    if (setSelectedRow) setSelectedRow({\n      ...initialValue,\n      [change.name]: change.value\n    });\n    setState({\n      ...state,\n      [change.name]: change.value\n    });\n    setInitialValues(initialValues);\n  }, [initialValues, initialValue, setSelectedRow, state]);\n\n  // useEffect(()=>{\n  //     setState(initialValue);\n  // },[initialValue])\n\n  // const \n\n  const resetState = useCallback(() => {\n    setSelectedRow(initialValues);\n  }, [initialValues, setSelectedRow]);\n  console.log(state);\n  return {\n    state,\n    onChange,\n    resetState\n  };\n};\n_s(useFormManager, \"mKnM3gjw0xisvmAffcSU3R56EB8=\");\nexport default useFormManager;","map":{"version":3,"names":["useState","useCallback","useFormManager","initialValue","setSelectedRow","change","initialValues","setInitialValues","state","setState","onChange","name","value","resetState","console","log"],"sources":["/home/zyad/Documents/ActiveProjects/SalamApp/src/hooks/useFormManager.ts"],"sourcesContent":["import {useState, useCallback, useEffect} from \"react\";\n\nconst useFormManager = (initialValue?: any, setSelectedRow?: any, change?: any)=>{\n    const [initialValues, setInitialValues] = useState()\n    const [state, setState] = useState({})\n\n    const onChange = useCallback((change: any)=>{\n        //@ts-ignore\n            if (setSelectedRow)setSelectedRow({...initialValue, [change.name]: change.value})\n            setState({...state, [change.name]: change.value})\n            setInitialValues(initialValues)\n    },[initialValues, initialValue, setSelectedRow, state])\n\n    // useEffect(()=>{\n    //     setState(initialValue);\n    // },[initialValue])\n\n    // const \n\n    const resetState = useCallback(()=>{\n        setSelectedRow(initialValues)\n    },[initialValues, setSelectedRow])\n\n    console.log(state)\n\n    return{state, onChange, resetState}\n}\n\nexport default useFormManager"],"mappings":";AAAA,SAAQA,QAAQ,EAAEC,WAAW,QAAkB,OAAO;AAEtD,MAAMC,cAAc,GAAG,CAACC,YAAkB,EAAEC,cAAoB,EAAEC,MAAY,KAAG;EAAA;EAC7E,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGP,QAAQ,EAAE;EACpD,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC,CAAC;EAEtC,MAAMU,QAAQ,GAAGT,WAAW,CAAEI,MAAW,IAAG;IACxC;IACI,IAAID,cAAc,EAACA,cAAc,CAAC;MAAC,GAAGD,YAAY;MAAE,CAACE,MAAM,CAACM,IAAI,GAAGN,MAAM,CAACO;IAAK,CAAC,CAAC;IACjFH,QAAQ,CAAC;MAAC,GAAGD,KAAK;MAAE,CAACH,MAAM,CAACM,IAAI,GAAGN,MAAM,CAACO;IAAK,CAAC,CAAC;IACjDL,gBAAgB,CAACD,aAAa,CAAC;EACvC,CAAC,EAAC,CAACA,aAAa,EAAEH,YAAY,EAAEC,cAAc,EAAEI,KAAK,CAAC,CAAC;;EAEvD;EACA;EACA;;EAEA;;EAEA,MAAMK,UAAU,GAAGZ,WAAW,CAAC,MAAI;IAC/BG,cAAc,CAACE,aAAa,CAAC;EACjC,CAAC,EAAC,CAACA,aAAa,EAAEF,cAAc,CAAC,CAAC;EAElCU,OAAO,CAACC,GAAG,CAACP,KAAK,CAAC;EAElB,OAAM;IAACA,KAAK;IAAEE,QAAQ;IAAEG;EAAU,CAAC;AACvC,CAAC;AAAA,GAxBKX,cAAc;AA0BpB,eAAeA,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}