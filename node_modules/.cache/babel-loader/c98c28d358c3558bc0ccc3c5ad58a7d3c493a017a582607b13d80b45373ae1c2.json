{"ast":null,"code":"var _jsxFileName = \"/home/zyad/Documents/ActiveProjects/SalamApp/src/components/TableView/ApiTable.tsx\",\n  _s = $RefreshSig$();\nimport { memo, useState, useCallback } from \"react\";\nimport Table from \"./Table\";\nimport useFetch from \"../../hooks/useFetch\";\nimport useTableControlsButtons from \"./hooks/useTableControlsButtons\";\nimport Notification from \"../Notification/component\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ApiTable = _ref => {\n  _s();\n  let {\n    api,\n    postApi,\n    columns,\n    hideTools,\n    canAdd,\n    canEdit,\n    canDelete,\n    rowKey,\n    Modal,\n    width,\n    onSelectedRow,\n    fetchOnFirstRun = false,\n    refreshAfter\n  } = _ref;\n  const {\n    data,\n    refresh\n  } = useFetch(api, fetchOnFirstRun);\n  const {\n    setSelectedRow,\n    onSaveAndInsertion,\n    selectedRow\n  } = useTableControlsButtons(postApi);\n  const [rows, setRows] = useState({});\n  const [modal, setModal] = useState(false);\n  const handleAdd = useCallback(() => {\n    setSelectedRow({\n      query_status: \"n\"\n    });\n    setModal(true);\n  }, [setSelectedRow]);\n  const handleEdit = useCallback(() => {\n    setSelectedRow({\n      ...rows,\n      query_status: \"u\"\n    });\n    setModal(true);\n  }, [rows, setSelectedRow]);\n  const handleDelete = () => {\n    setSelectedRow({\n      ...rows,\n      query_status: \"d\"\n    });\n    onSaveAndInsertion();\n  };\n  const handleCloseModal = useCallback(() => {\n    setModal(false);\n  }, []);\n  const handleSaveModal = useCallback(() => {\n    setModal(false);\n    onSaveAndInsertion();\n  }, [onSaveAndInsertion]);\n  const handleSelectedRow = row => {\n    setRows(row);\n    if (onSelectedRow) onSelectedRow(row);\n  };\n  if (refreshAfter) {\n    setInterval(refresh, refreshAfter);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Notification, {\n      Label: \"Alert\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this), Modal && /*#__PURE__*/_jsxDEV(Modal, {\n      visible: modal,\n      onOK: handleSaveModal,\n      onClose: handleCloseModal,\n      selectedRow: selectedRow,\n      setSelectedRow: setSelectedRow\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      dataSource: data,\n      columns: columns,\n      hideTools: hideTools,\n      canAdd: canAdd,\n      canEdit: canEdit,\n      canDelete: canDelete,\n      rowkey: rowKey,\n      onAdd: handleAdd,\n      onEdit: handleEdit,\n      onDelete: handleDelete,\n      onSelectedRow: handleSelectedRow,\n      width: width\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(ApiTable, \"tnR5BM67hETyS4BpgpbMfd+Nlyo=\", false, function () {\n  return [useFetch, useTableControlsButtons];\n});\n_c = ApiTable;\nexport default _c2 = /*#__PURE__*/memo(ApiTable);\nvar _c, _c2;\n$RefreshReg$(_c, \"ApiTable\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["memo","useState","useCallback","Table","useFetch","useTableControlsButtons","Notification","ApiTable","api","postApi","columns","hideTools","canAdd","canEdit","canDelete","rowKey","Modal","width","onSelectedRow","fetchOnFirstRun","refreshAfter","data","refresh","setSelectedRow","onSaveAndInsertion","selectedRow","rows","setRows","modal","setModal","handleAdd","query_status","handleEdit","handleDelete","handleCloseModal","handleSaveModal","handleSelectedRow","row","setInterval"],"sources":["/home/zyad/Documents/ActiveProjects/SalamApp/src/components/TableView/ApiTable.tsx"],"sourcesContent":["import { memo, useState, useCallback } from \"react\";\r\nimport Table from \"./Table\";\r\nimport useFetch from \"../../hooks/useFetch\";\r\nimport useTableControlsButtons from \"./hooks/useTableControlsButtons\"\r\nimport Notification from \"../Notification/component\";\r\n\r\ninterface ApiTableProps {\r\n    api: string;\r\n    postApi?: string;\r\n    columns: {\r\n        title: string,\r\n        dataIndex: string,\r\n        width: number | string\r\n    }[];\r\n    hideTools?: boolean;\r\n    canAdd?: boolean;\r\n    canEdit?: boolean;\r\n    canDelete?: boolean;\r\n    rowKey: string;\r\n    Modal?: any;\r\n    width?: number | string;\r\n    onSelectedRow?: any;\r\n    fetchOnFirstRun?: boolean;\r\n    refreshAfter?: number;\r\n}\r\n\r\nconst ApiTable = ({\r\n    api,\r\n    postApi,\r\n    columns,\r\n    hideTools,\r\n    canAdd,\r\n    canEdit,\r\n    canDelete,\r\n    rowKey,\r\n    Modal,\r\n    width,\r\n    onSelectedRow,\r\n    fetchOnFirstRun = false,\r\n    refreshAfter\r\n}: ApiTableProps) => {\r\n\r\n\r\n    const { data, refresh } = useFetch(api, fetchOnFirstRun)\r\n    const { setSelectedRow, onSaveAndInsertion, selectedRow } = useTableControlsButtons(postApi)\r\n    const [rows, setRows] = useState({})\r\n    const [modal, setModal] = useState(false)\r\n    const handleAdd = useCallback(() => {\r\n        setSelectedRow({ query_status: \"n\" })\r\n        setModal(true)\r\n    }, [setSelectedRow])\r\n    const handleEdit = useCallback(() => {\r\n        setSelectedRow({ ...rows, query_status: \"u\" })\r\n        setModal(true)\r\n    }, [rows, setSelectedRow])\r\n    const handleDelete = () => {\r\n        setSelectedRow({ ...rows, query_status: \"d\" })\r\n        onSaveAndInsertion()\r\n    }\r\n\r\n    const handleCloseModal = useCallback(() => {\r\n        setModal(false)\r\n    }, [])\r\n\r\n    const handleSaveModal = useCallback(() => {\r\n        setModal(false)\r\n        onSaveAndInsertion()\r\n    }, [onSaveAndInsertion])\r\n\r\n    const handleSelectedRow = (row: any) => {\r\n        setRows(row)\r\n        if (onSelectedRow) onSelectedRow(row)\r\n    }\r\n\r\n    if (refreshAfter) {\r\n        setInterval(refresh, refreshAfter)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Notification\r\n                Label=\"Alert\"\r\n            />\r\n            {Modal && <Modal\r\n                visible={modal}\r\n                onOK={handleSaveModal}\r\n                onClose={handleCloseModal}\r\n                selectedRow={selectedRow}\r\n                setSelectedRow={setSelectedRow}\r\n            />}\r\n            <Table\r\n                dataSource={data}\r\n                columns={columns}\r\n                hideTools={hideTools}\r\n                canAdd={canAdd}\r\n                canEdit={canEdit}\r\n                canDelete={canDelete}\r\n                rowkey={rowKey}\r\n                onAdd={handleAdd}\r\n                onEdit={handleEdit}\r\n                onDelete={handleDelete}\r\n                onSelectedRow={handleSelectedRow}\r\n                width={width}\r\n            >\r\n            </Table>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default memo(ApiTable)"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}