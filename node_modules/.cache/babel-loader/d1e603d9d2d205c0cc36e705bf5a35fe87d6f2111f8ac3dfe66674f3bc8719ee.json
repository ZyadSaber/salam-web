{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useCallback } from \"react\";\nimport useLoacalStorage from \"./useLocalStorage\";\n\n//@ts-ignore\nconst usePost = apiPost => {\n  _s();\n  const url = `http://127.0.0.1:9090/api/v1/${apiPost}`;\n  const [success, setSuccess] = useState();\n  // const [row, setRow] = useState<{}>()\n  const {\n    authorization\n  } = useLoacalStorage();\n  const postData = useCallback(async (dataToPost, link) => {\n    dataToPost.authorization = authorization;\n    const settings = {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(dataToPost)\n    };\n    try {\n      const fetchResponse = await fetch(url, settings);\n      const data = await fetchResponse.json();\n      setSuccess(data);\n      return data;\n    } catch (e) {\n      console.log(e);\n    }\n  }, [authorization, url]);\n\n  // useEffect(()=>{\n  //     if(apiPost && row){\n  //     postData(row, url)\n  //     }\n  // }, [row, postData, url, apiPost])\n\n  const setRow = useCallback(() => {\n    postData(row, url);\n  }, [postData, url]);\n  return {\n    success,\n    setRow\n  };\n};\n_s(usePost, \"rvX66iTcWxvjFzD/0nLrHiWNRD8=\", false, function () {\n  return [useLoacalStorage];\n});\nexport default usePost;","map":{"version":3,"names":["useState","useCallback","useLoacalStorage","usePost","apiPost","url","success","setSuccess","authorization","postData","dataToPost","link","settings","method","headers","Accept","body","JSON","stringify","fetchResponse","fetch","data","json","e","console","log","setRow","row"],"sources":["/home/zyad/Documents/ActiveProjects/SalamApp/src/hooks/usePost.ts"],"sourcesContent":["import { useState, useEffect, useCallback } from \"react\";\r\nimport useLoacalStorage from \"./useLocalStorage\";\r\n\r\n//@ts-ignore\r\nconst usePost = (apiPost) => {\r\n    \r\n    const url = `http://127.0.0.1:9090/api/v1/${apiPost}`\r\n    const [success, setSuccess] = useState()\r\n    // const [row, setRow] = useState<{}>()\r\n    const { authorization } = useLoacalStorage()\r\n    const postData = useCallback( async (dataToPost: any, link: string) => {\r\n        dataToPost.authorization = authorization\r\n    const settings = {\r\n        method: 'POST',\r\n        headers: {\r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(dataToPost)\r\n    };\r\n    try {\r\n        const fetchResponse = await fetch(url, settings);\r\n        const data = await fetchResponse.json();\r\n        setSuccess(data)\r\n        return data\r\n    } catch (e) {\r\n        console.log(e)\r\n    }    \r\n}    ,[authorization, url])\r\n\r\n\r\n// useEffect(()=>{\r\n//     if(apiPost && row){\r\n//     postData(row, url)\r\n//     }\r\n// }, [row, postData, url, apiPost])\r\n\r\nconst setRow = useCallback(()=>{\r\n    postData(row, url)\r\n},[postData, url])\r\n\r\n      return{success, setRow}\r\n}\r\n\r\nexport default usePost"],"mappings":";AAAA,SAASA,QAAQ,EAAaC,WAAW,QAAQ,OAAO;AACxD,OAAOC,gBAAgB,MAAM,mBAAmB;;AAEhD;AACA,MAAMC,OAAO,GAAIC,OAAO,IAAK;EAAA;EAEzB,MAAMC,GAAG,GAAI,gCAA+BD,OAAQ,EAAC;EACrD,MAAM,CAACE,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,EAAE;EACxC;EACA,MAAM;IAAEQ;EAAc,CAAC,GAAGN,gBAAgB,EAAE;EAC5C,MAAMO,QAAQ,GAAGR,WAAW,CAAE,OAAOS,UAAe,EAAEC,IAAY,KAAK;IACnED,UAAU,CAACF,aAAa,GAAGA,aAAa;IAC5C,MAAMI,QAAQ,GAAG;MACbC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACLC,MAAM,EAAE,kBAAkB;QAC1B,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACR,UAAU;IACnC,CAAC;IACD,IAAI;MACA,MAAMS,aAAa,GAAG,MAAMC,KAAK,CAACf,GAAG,EAAEO,QAAQ,CAAC;MAChD,MAAMS,IAAI,GAAG,MAAMF,aAAa,CAACG,IAAI,EAAE;MACvCf,UAAU,CAACc,IAAI,CAAC;MAChB,OAAOA,IAAI;IACf,CAAC,CAAC,OAAOE,CAAC,EAAE;MACRC,OAAO,CAACC,GAAG,CAACF,CAAC,CAAC;IAClB;EACJ,CAAC,EAAK,CAACf,aAAa,EAAEH,GAAG,CAAC,CAAC;;EAG3B;EACA;EACA;EACA;EACA;;EAEA,MAAMqB,MAAM,GAAGzB,WAAW,CAAC,MAAI;IAC3BQ,QAAQ,CAACkB,GAAG,EAAEtB,GAAG,CAAC;EACtB,CAAC,EAAC,CAACI,QAAQ,EAAEJ,GAAG,CAAC,CAAC;EAEZ,OAAM;IAACC,OAAO;IAAEoB;EAAM,CAAC;AAC7B,CAAC;AAAA,GAtCKvB,OAAO;EAAA,QAKiBD,gBAAgB;AAAA;AAmC9C,eAAeC,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}