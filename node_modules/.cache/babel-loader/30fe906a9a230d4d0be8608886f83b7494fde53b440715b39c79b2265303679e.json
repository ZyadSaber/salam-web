{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useCallback, useEffect } from \"react\";\nconst useFormManager = (initialValue, setSelectedRow, change) => {\n  _s();\n  const [initialValues, setInitialValues] = useState();\n  const [state, setState] = useState({});\n  const onChange = useCallback(change => {\n    //@ts-ignore\n    setSelectedRow({\n      ...initialValue,\n      [change.name]: change.value\n    });\n    setState({\n      ...state,\n      [change.name]: change.value\n    });\n    setInitialValues(initialValues);\n  }, [initialValues, initialValue, setSelectedRow, state]);\n  useEffect(() => {\n    setState(initialValue);\n  }, [initialValue]);\n  const resetState = useCallback(() => {\n    setSelectedRow(initialValues);\n  }, [initialValues, setSelectedRow]);\n  const [valueTarget, setValueTarget] = useState();\n  const additionalChange = useCallback(additionalChanges => {\n    additionalChanges.value.targets.map(v => {\n      //@ts-ignore\n      console.log(state[v]);\n    });\n  }, [state]);\n  return {\n    state,\n    onChange,\n    resetState,\n    additionalChange\n  };\n};\n_s(useFormManager, \"vMBJLOuInA0S+okCUPTZytDHOrU=\");\nexport default useFormManager;","map":{"version":3,"names":["useState","useCallback","useEffect","useFormManager","initialValue","setSelectedRow","change","initialValues","setInitialValues","state","setState","onChange","name","value","resetState","valueTarget","setValueTarget","additionalChange","additionalChanges","targets","map","v","console","log"],"sources":["/home/zyad/Documents/ActiveProjects/SalamApp/src/hooks/useFormManager.ts"],"sourcesContent":["import {useState, useCallback, useEffect} from \"react\";\n\nconst useFormManager = (initialValue?: any, setSelectedRow?: any, change?: any)=>{\n    const [initialValues, setInitialValues] = useState()\n    const [state, setState] = useState({})\n\n    const onChange = useCallback((change: any)=>{\n        //@ts-ignore\n            setSelectedRow({...initialValue, [change.name]: change.value})\n            setState({...state, [change.name]: change.value})\n            setInitialValues(initialValues)\n    },[initialValues, initialValue, setSelectedRow, state])\n\n    useEffect(()=>{\n        setState(initialValue);\n    },[initialValue])\n\n    const resetState = useCallback(()=>{\n        setSelectedRow(initialValues)\n    },[initialValues, setSelectedRow])\n\n\n    const [valueTarget, setValueTarget] = useState()\n    const additionalChange = useCallback((additionalChanges: any)=>{\n        additionalChanges.value.targets.map((v:any)=>{\n            //@ts-ignore\n            console.log(state[v])\n        })\n    },[state])\n\n\n    return{state, onChange, resetState, additionalChange}\n}\n\nexport default useFormManager"],"mappings":";AAAA,SAAQA,QAAQ,EAAEC,WAAW,EAAEC,SAAS,QAAO,OAAO;AAEtD,MAAMC,cAAc,GAAG,CAACC,YAAkB,EAAEC,cAAoB,EAAEC,MAAY,KAAG;EAAA;EAC7E,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGR,QAAQ,EAAE;EACpD,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC,CAAC;EAEtC,MAAMW,QAAQ,GAAGV,WAAW,CAAEK,MAAW,IAAG;IACxC;IACID,cAAc,CAAC;MAAC,GAAGD,YAAY;MAAE,CAACE,MAAM,CAACM,IAAI,GAAGN,MAAM,CAACO;IAAK,CAAC,CAAC;IAC9DH,QAAQ,CAAC;MAAC,GAAGD,KAAK;MAAE,CAACH,MAAM,CAACM,IAAI,GAAGN,MAAM,CAACO;IAAK,CAAC,CAAC;IACjDL,gBAAgB,CAACD,aAAa,CAAC;EACvC,CAAC,EAAC,CAACA,aAAa,EAAEH,YAAY,EAAEC,cAAc,EAAEI,KAAK,CAAC,CAAC;EAEvDP,SAAS,CAAC,MAAI;IACVQ,QAAQ,CAACN,YAAY,CAAC;EAC1B,CAAC,EAAC,CAACA,YAAY,CAAC,CAAC;EAEjB,MAAMU,UAAU,GAAGb,WAAW,CAAC,MAAI;IAC/BI,cAAc,CAACE,aAAa,CAAC;EACjC,CAAC,EAAC,CAACA,aAAa,EAAEF,cAAc,CAAC,CAAC;EAGlC,MAAM,CAACU,WAAW,EAAEC,cAAc,CAAC,GAAGhB,QAAQ,EAAE;EAChD,MAAMiB,gBAAgB,GAAGhB,WAAW,CAAEiB,iBAAsB,IAAG;IAC3DA,iBAAiB,CAACL,KAAK,CAACM,OAAO,CAACC,GAAG,CAAEC,CAAK,IAAG;MACzC;MACAC,OAAO,CAACC,GAAG,CAACd,KAAK,CAACY,CAAC,CAAC,CAAC;IACzB,CAAC,CAAC;EACN,CAAC,EAAC,CAACZ,KAAK,CAAC,CAAC;EAGV,OAAM;IAACA,KAAK;IAAEE,QAAQ;IAAEG,UAAU;IAAEG;EAAgB,CAAC;AACzD,CAAC;AAAA,GA9BKd,cAAc;AAgCpB,eAAeA,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}