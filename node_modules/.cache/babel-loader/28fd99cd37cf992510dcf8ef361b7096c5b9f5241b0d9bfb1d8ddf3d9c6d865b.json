{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useCallback, useEffect } from \"react\";\nconst useFormManager = _ref => {\n  _s();\n  let {\n    initialValue,\n    setSelectedRow\n  } = _ref;\n  const [initialValues, setInitialValues] = useState();\n  const [state, setState] = useState({});\n  const onChange = useCallback(change => {\n    //@ts-ignore\n    if (setSelectedRow) setSelectedRow({\n      ...initialValue,\n      [change.name]: change.value\n    });\n    setState({\n      ...state,\n      [change.name]: change.value\n    });\n    setInitialValues(initialValues);\n  }, [initialValues, initialValue, setSelectedRow, state]);\n  useEffect(() => {\n    if (setSelectedRow) {\n      setState(initialValue);\n    }\n  }, [initialValue, setSelectedRow]);\n  useEffect(() => {\n    setState(initialValue);\n  }, []);\n  const resetState = useCallback(() => {\n    setSelectedRow(initialValues);\n  }, [initialValues, setSelectedRow]);\n  return {\n    state,\n    onChange,\n    resetState\n  };\n};\n_s(useFormManager, \"xXLxHrite9FKejuuQ1OLY4ZPjsg=\");\nexport default useFormManager;","map":{"version":3,"names":["useState","useCallback","useEffect","useFormManager","initialValue","setSelectedRow","initialValues","setInitialValues","state","setState","onChange","change","name","value","resetState"],"sources":["/home/zyad/Documents/ActiveProjects/SalamApp/src/hooks/useFormManager.ts"],"sourcesContent":["import {useState, useCallback, useEffect} from \"react\";\n\ninterface useFormManager {\n    initialValue?: any\n    setSelectedRow?: any\n}\n\nconst useFormManager = ({initialValue, setSelectedRow}: useFormManager)=>{\n    const [initialValues, setInitialValues] = useState()\n    const [state, setState] = useState({})\n\n    const onChange = useCallback((change: any)=>{\n        //@ts-ignore\n            if (setSelectedRow)setSelectedRow({...initialValue, [change.name]: change.value})\n            setState({...state, [change.name]: change.value})\n            setInitialValues(initialValues)\n    },[initialValues, initialValue, setSelectedRow, state])\n\n    useEffect(()=>{\n        if(setSelectedRow){\n            setState(initialValue);\n        }\n    },[initialValue, setSelectedRow])\n\n    useEffect(()=>{\n        setState(initialValue);\n    },[])\n\n    const resetState = useCallback(()=>{\n        setSelectedRow(initialValues)\n    },[initialValues, setSelectedRow])\n\n    return{state, onChange, resetState}\n}\n\nexport default useFormManager"],"mappings":";AAAA,SAAQA,QAAQ,EAAEC,WAAW,EAAEC,SAAS,QAAO,OAAO;AAOtD,MAAMC,cAAc,GAAG,QAAkD;EAAA;EAAA,IAAjD;IAACC,YAAY;IAAEC;EAA8B,CAAC;EAClE,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGP,QAAQ,EAAE;EACpD,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC,CAAC;EAEtC,MAAMU,QAAQ,GAAGT,WAAW,CAAEU,MAAW,IAAG;IACxC;IACI,IAAIN,cAAc,EAACA,cAAc,CAAC;MAAC,GAAGD,YAAY;MAAE,CAACO,MAAM,CAACC,IAAI,GAAGD,MAAM,CAACE;IAAK,CAAC,CAAC;IACjFJ,QAAQ,CAAC;MAAC,GAAGD,KAAK;MAAE,CAACG,MAAM,CAACC,IAAI,GAAGD,MAAM,CAACE;IAAK,CAAC,CAAC;IACjDN,gBAAgB,CAACD,aAAa,CAAC;EACvC,CAAC,EAAC,CAACA,aAAa,EAAEF,YAAY,EAAEC,cAAc,EAAEG,KAAK,CAAC,CAAC;EAEvDN,SAAS,CAAC,MAAI;IACV,IAAGG,cAAc,EAAC;MACdI,QAAQ,CAACL,YAAY,CAAC;IAC1B;EACJ,CAAC,EAAC,CAACA,YAAY,EAAEC,cAAc,CAAC,CAAC;EAEjCH,SAAS,CAAC,MAAI;IACVO,QAAQ,CAACL,YAAY,CAAC;EAC1B,CAAC,EAAC,EAAE,CAAC;EAEL,MAAMU,UAAU,GAAGb,WAAW,CAAC,MAAI;IAC/BI,cAAc,CAACC,aAAa,CAAC;EACjC,CAAC,EAAC,CAACA,aAAa,EAAED,cAAc,CAAC,CAAC;EAElC,OAAM;IAACG,KAAK;IAAEE,QAAQ;IAAEI;EAAU,CAAC;AACvC,CAAC;AAAA,GA1BKX,cAAc;AA4BpB,eAAeA,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}