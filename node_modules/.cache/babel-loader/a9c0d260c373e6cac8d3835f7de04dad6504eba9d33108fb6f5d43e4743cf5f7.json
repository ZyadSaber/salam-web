{"ast":null,"code":"var _jsxFileName = \"/home/zyad/Documents/ActiveProjects/SalamApp/src/components/TableView/Table.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback } from 'react';\nimport \"./style.css\";\nimport Button from \"../button/button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Table = _ref => {\n  _s();\n  let {\n    dataSource,\n    rowkey = \"id\",\n    columns,\n    hideTools = true,\n    canEdit = false,\n    canAdd = false,\n    canDelete = false,\n    onAdd,\n    onEdit,\n    onDelete,\n    children,\n    actionColumn = false,\n    onAction,\n    actionLabel = \"\",\n    onSelectedRow,\n    canPrint = false,\n    onPrint,\n    addionalButtons,\n    onSave,\n    canSave = false\n  } = _ref;\n  //@ts-ignore\n  const [rowSelected, setRowSelected] = useState();\n  const handleSelectedRow = useCallback(item => () => {\n    onSelectedRow(item);\n    setRowSelected(item);\n  }, [onSelectedRow]);\n  console.log(rowSelected);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"table2 \",\n        children: [/*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table\",\n          children: /*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              className: \"table-secondary\",\n              children: [columns.map(item => {\n                return /*#__PURE__*/_jsxDEV(\"th\", {\n                  scope: \"col\",\n                  style: {\n                    width: `${item.width}%`\n                  },\n                  children: item.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 160,\n                  columnNumber: 41\n                }, this);\n              }), /*#__PURE__*/_jsxDEV(\"th\", {\n                hidden: !actionColumn,\n                children: \"Action\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tbl-content\",\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"table \",\n            children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: dataSource === null || dataSource === void 0 ? void 0 : dataSource.map(item => {\n                return /*#__PURE__*/_jsxDEV(\"tr\", {\n                  onClick: handleSelectedRow(item),\n                  children: [columns.map(column => {\n                    return /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: `table-light ${rowSelected === item && \"selectedRow\"}`,\n                      style: {\n                        width: `${column.width}%`\n                      },\n                      children: item[column.dataIndex]\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 177,\n                      columnNumber: 53\n                    }, this);\n                  }), /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"table-light\",\n                    hidden: !actionColumn,\n                    children: /*#__PURE__*/_jsxDEV(Button, {\n                      label: actionLabel,\n                      onClick: onAction\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 183,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 182,\n                    columnNumber: 45\n                  }, this)]\n                }, item[rowkey], true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 174,\n                  columnNumber: 41\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(Table, \"L+NSgJPUMzlDe6jkwM6gdC2ftGk=\");\n_c = Table;\nexport default Table;\nvar _c;\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"names":["React","useState","useCallback","Button","Table","dataSource","rowkey","columns","hideTools","canEdit","canAdd","canDelete","onAdd","onEdit","onDelete","children","actionColumn","onAction","actionLabel","onSelectedRow","canPrint","onPrint","addionalButtons","onSave","canSave","rowSelected","setRowSelected","handleSelectedRow","item","console","log","map","width","title","column","dataIndex"],"sources":["/home/zyad/Documents/ActiveProjects/SalamApp/src/components/TableView/Table.tsx"],"sourcesContent":["import React, { memo, useState, useMemo, useCallback, useEffect } from 'react';\r\nimport \"./style.css\";\r\nimport Button from \"../button/button\";\r\nimport IconButton from '../button/iconButton';\r\n\r\ninterface TableProps {\r\n    rowkey?: string | number;\r\n    dataSource?: any[];\r\n    columns: column[];\r\n    title?: string;\r\n    canEdit?: boolean;\r\n    canAdd?: boolean;\r\n    canDelete?: boolean;\r\n    hideTools?: boolean;\r\n    onAdd?: () => void;\r\n    onEdit?: () => void | any;\r\n    onDelete?: () => void;\r\n    children?: any;\r\n    Form?: any;\r\n    actionColumn?: boolean;\r\n    onAction?: () => void;\r\n    actionLabel?: string;\r\n    onSelectedRow?: any;\r\n    canPrint?: boolean;\r\n    onPrint?: () => void;\r\n    addionalButtons?: any;\r\n    onSave?: () => void;\r\n    canSave?: boolean;\r\n}\r\n\r\ninterface column {\r\n    title: string,\r\n    width?: number,\r\n    dataIndex?: any,\r\n}\r\n\r\nconst Table = ({\r\n    dataSource,\r\n    rowkey = \"id\",\r\n    columns,\r\n    hideTools = true,\r\n    canEdit = false,\r\n    canAdd = false,\r\n    canDelete = false,\r\n    onAdd,\r\n    onEdit,\r\n    onDelete,\r\n    children,\r\n    actionColumn = false,\r\n    onAction,\r\n    actionLabel = \"\",\r\n    onSelectedRow,\r\n    canPrint = false,\r\n    onPrint,\r\n    addionalButtons,\r\n    onSave,\r\n    canSave = false\r\n\r\n}: TableProps) => {\r\n    //@ts-ignore\r\n    const [rowSelected, setRowSelected] = useState()\r\n\r\n    const handleSelectedRow = useCallback((item: any) => () => {\r\n        onSelectedRow(item)\r\n        setRowSelected(item)\r\n    }, [onSelectedRow])\r\n\r\n    console.log(rowSelected)\r\n\r\n    return (\r\n        <>\r\n            {/* <div className=\"Table\">\r\n                <section>\r\n                    <div className=\"head\">\r\n                        {children}\r\n                    </div>\r\n                    <div className=\"tools\" hidden={hideTools}>\r\n                        <div className=\"TableTools\">\r\n                            <IconButton\r\n                                icon='fa-sharp fa-solid fa-plus'\r\n                                onClick={onAdd}\r\n                                disabled={!canAdd}\r\n                            />\r\n                            <IconButton\r\n                                icon='fa-sharp fa-solid fa-pen-clip'\r\n                                onClick={onEdit}\r\n                                disabled={!canEdit}\r\n                            />\r\n                            <IconButton\r\n                                icon='fa-sharp fa-solid fa-trash'\r\n                                onClick={onDelete}\r\n                                disabled={!canDelete}\r\n                            />\r\n                            <IconButton\r\n                                icon='fa-solid fa-print'\r\n                                onClick={onPrint}\r\n                                disabled={!canPrint}\r\n                            />\r\n                            <IconButton\r\n                                icon='fa-solid fa-floppy-disk'\r\n                                onClick={onSave}\r\n                                disabled={!canSave}\r\n                            />\r\n                            {addionalButtons}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"tbl-header\">\r\n                        <table>\r\n                            <thead>\r\n                                <tr>\r\n                                    {columns.map((item: any) => {\r\n                                        return (\r\n                                            <th style={{ width: `${item.width}%` }}>\r\n                                                {item.title}\r\n                                            </th>\r\n                                        )\r\n                                    })}\r\n                                    <th hidden={!actionColumn}>Action</th>\r\n                                </tr>\r\n                            </thead>\r\n                        </table>\r\n                    </div>\r\n                    <div className=\"tbl-content\">\r\n                        <table>\r\n                            <tbody>\r\n                                {dataSource?.map((item: any) => {\r\n                                    return (\r\n                                        <tr key={item[rowkey]} onClick={handleSelectedRow(item)}>\r\n                                            {columns.map((column: any) => {\r\n                                                return (\r\n                                                    <td className={`${rowSelected === item && \"selectedRow\"}`} style={{ width: `${column.width}%` }}>\r\n                                                        {item[column.dataIndex]}\r\n                                                    </td>\r\n                                                )\r\n                                            })}\r\n                                            <td hidden={!actionColumn}>\r\n                                                <Button\r\n                                                    label={actionLabel}\r\n                                                    onClick={onAction}\r\n                                                />\r\n                                            </td>\r\n                                        </tr>\r\n\r\n                                    )\r\n                                })}\r\n\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </section>\r\n            </div > */}\r\n\r\n            <div className=\"section\">\r\n                <div className=\"table2 \">\r\n                    <table className='table'>\r\n                        <thead>\r\n                            <tr className='table-secondary'>\r\n                                {columns.map((item: any) => {\r\n                                    return (\r\n                                        <th scope=\"col\" style={{ width: `${item.width}%` }}>\r\n                                            {item.title}\r\n                                        </th>\r\n                                    )\r\n                                })}\r\n                                <th hidden={!actionColumn}>Action</th>\r\n                            </tr>\r\n                        </thead>\r\n                    </table>\r\n                    <div className=\"tbl-content\">\r\n                        <table className='table '>\r\n                            <tbody>\r\n                                {dataSource?.map((item: any) => {\r\n                                    return (\r\n                                        <tr key={item[rowkey]} onClick={handleSelectedRow(item)}>\r\n                                            {columns.map((column: any) => {\r\n                                                return (\r\n                                                    <td className={`table-light ${rowSelected === item && \"selectedRow\"}`} style={{ width: `${column.width}%` }}>\r\n                                                        {item[column.dataIndex]}\r\n                                                    </td>\r\n                                                )\r\n                                            })}\r\n                                            <td className='table-light' hidden={!actionColumn}>\r\n                                                <Button\r\n                                                    label={actionLabel}\r\n                                                    onClick={onAction}\r\n                                                />\r\n                                            </td>\r\n                                        </tr>\r\n                                    )\r\n                                })}\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Table;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}