{"ast":null,"code":"var _jsxFileName = \"/home/zyad/Documents/active_projects/SalamApp/src/App.tsx\",\n  _s = $RefreshSig$();\nimport * as React from 'react';\nimport './style.css';\n//@ts-ignore\n\nimport { useTranslation } from 'react-i18next';\n//@ts-ignore\nimport cookies from 'js-cookie';\nimport { useToast, Button } from '@chakra-ui/react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const toast = useToast();\n  const languages = [{\n    code: 'fr',\n    name: 'Français',\n    country_code: 'fr'\n  }, {\n    code: 'en',\n    name: 'English',\n    country_code: 'gb'\n  }, {\n    code: 'ar',\n    name: 'العربية',\n    dir: 'rtl',\n    country_code: 'sa'\n  }];\n  const {\n    t\n  } = useTranslation();\n  const currentLanguageCode = cookies.get('i18next') || 'ar';\n  const currentLanguage = languages.find(l => l.code === currentLanguageCode);\n  useEffect(() => {\n    //@ts-ignore\n    document.body.dir = currentLanguage.dir || 'ltr';\n    document.title = t('aptl');\n  }, [currentLanguage, t]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => toast({\n        title: 'Account created.',\n        description: \"We've created your account for you.\",\n        status: 'success',\n        duration: 9000,\n        isClosable: true\n      }),\n      children: \"Show Toast\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"nGk1FDgR2eI411wB3Y2p/4PvPtY=\", false, function () {\n  return [useToast, useTranslation];\n});\n_c = App;\nexport default _c2 = memo(App);\nvar _c, _c2;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","useTranslation","cookies","useToast","Button","App","toast","languages","code","name","country_code","dir","t","currentLanguageCode","get","currentLanguage","find","l","useEffect","document","body","title","description","status","duration","isClosable","memo"],"sources":["/home/zyad/Documents/active_projects/SalamApp/src/App.tsx"],"sourcesContent":["import * as React from 'react';\r\nimport './style.css'\r\n//@ts-ignore\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport Header from \"./components/Header/component\";\r\nimport { PageRoutes } from \"./global/Route\";\r\nimport { useTranslation } from 'react-i18next'\r\n//@ts-ignore\r\nimport cookies from 'js-cookie'\r\nimport { useToast, Button } from '@chakra-ui/react'\r\n\r\nconst App = () => {\r\n  const toast = useToast()\r\n  const languages = [\r\n    {\r\n      code: 'fr',\r\n      name: 'Français',\r\n      country_code: 'fr',\r\n    },\r\n    {\r\n      code: 'en',\r\n      name: 'English',\r\n      country_code: 'gb',\r\n    },\r\n    {\r\n      code: 'ar',\r\n      name: 'العربية',\r\n      dir: 'rtl',\r\n      country_code: 'sa',\r\n    },\r\n  ]\r\n  const { t } = useTranslation()\r\n  const currentLanguageCode = cookies.get('i18next') || 'ar';\r\n  const currentLanguage = languages.find((l) => l.code === currentLanguageCode)\r\n  useEffect(() => {\r\n    //@ts-ignore\r\n    document.body.dir = currentLanguage.dir || 'ltr'\r\n    document.title = t('aptl')\r\n  }, [currentLanguage, t])\r\n  return (\r\n    <div className=\"App\">\r\n      <Button\r\n        onClick={() =>\r\n          toast({\r\n            title: 'Account created.',\r\n            description: \"We've created your account for you.\",\r\n            status: 'success',\r\n            duration: 9000,\r\n            isClosable: true,\r\n          })\r\n        }\r\n      >\r\n        Show Toast\r\n      </Button>\r\n      {/* <Router>\r\n        <Switch>\r\n          {PageRoutes.map((item: any) => {\r\n            if (item.Path !== \"\") {\r\n              return (\r\n                <Route exact path={`/${item.Path}`}>\r\n                  <Header />\r\n                  <div className=\"container1\">\r\n                    {< item.Component />}\r\n                  </div>\r\n                </Route >\r\n              )\r\n            } else {\r\n              return (\r\n                <Route exact path={`/${item.Path}`}>\r\n                  {< item.Component />}\r\n                </Route >\r\n              )\r\n            }\r\n          })}\r\n        </Switch>\r\n      </Router> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default memo(App);\r\n\r\n"],"mappings":";;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAO,aAAa;AACpB;;AAIA,SAASC,cAAc,QAAQ,eAAe;AAC9C;AACA,OAAOC,OAAO,MAAM,WAAW;AAC/B,SAASC,QAAQ,EAAEC,MAAM,QAAQ,kBAAkB;AAAA;AAEnD,MAAMC,GAAG,GAAG,MAAM;EAAA;EAChB,MAAMC,KAAK,GAAGH,QAAQ,EAAE;EACxB,MAAMI,SAAS,GAAG,CAChB;IACEC,IAAI,EAAE,IAAI;IACVC,IAAI,EAAE,UAAU;IAChBC,YAAY,EAAE;EAChB,CAAC,EACD;IACEF,IAAI,EAAE,IAAI;IACVC,IAAI,EAAE,SAAS;IACfC,YAAY,EAAE;EAChB,CAAC,EACD;IACEF,IAAI,EAAE,IAAI;IACVC,IAAI,EAAE,SAAS;IACfE,GAAG,EAAE,KAAK;IACVD,YAAY,EAAE;EAChB,CAAC,CACF;EACD,MAAM;IAAEE;EAAE,CAAC,GAAGX,cAAc,EAAE;EAC9B,MAAMY,mBAAmB,GAAGX,OAAO,CAACY,GAAG,CAAC,SAAS,CAAC,IAAI,IAAI;EAC1D,MAAMC,eAAe,GAAGR,SAAS,CAACS,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACT,IAAI,KAAKK,mBAAmB,CAAC;EAC7EK,SAAS,CAAC,MAAM;IACd;IACAC,QAAQ,CAACC,IAAI,CAACT,GAAG,GAAGI,eAAe,CAACJ,GAAG,IAAI,KAAK;IAChDQ,QAAQ,CAACE,KAAK,GAAGT,CAAC,CAAC,MAAM,CAAC;EAC5B,CAAC,EAAE,CAACG,eAAe,EAAEH,CAAC,CAAC,CAAC;EACxB,oBACE;IAAK,SAAS,EAAC,KAAK;IAAA,uBAClB,QAAC,MAAM;MACL,OAAO,EAAE,MACPN,KAAK,CAAC;QACJe,KAAK,EAAE,kBAAkB;QACzBC,WAAW,EAAE,qCAAqC;QAClDC,MAAM,EAAE,SAAS;QACjBC,QAAQ,EAAE,IAAI;QACdC,UAAU,EAAE;MACd,CAAC,CACF;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAGM;IAAA;IAAA;IAAA;EAAA,QAuBL;AAEV,CAAC;AAAA,GAnEKpB,GAAG;EAAA,QACOF,QAAQ,EAmBRF,cAAc;AAAA;AAAA,KApBxBI,GAAG;AAqET,qBAAeqB,IAAI,CAACrB,GAAG,CAAC;AAAC;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}