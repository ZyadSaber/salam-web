{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useLayoutEffect, useCallback } from \"react\";\nconst useFetch = _ref => {\n  _s();\n  let {\n    link,\n    fetchOnFirstRun,\n    refreshTimeout,\n    params\n  } = _ref;\n  // const url = `http://144.24.209.19:9090/api/v1/${link}`\n  const url = `http://127.0.0.1:9090/api/v1/${link}`;\n  const [data, setData] = useState([]);\n  const [state, setState] = useState(false);\n  const getData = useCallback(async link => {\n    const response = await fetch(link + \"?\" + new URLSearchParams(params));\n    const apiData = await response.json();\n    setData(apiData);\n  }, [params]);\n  useLayoutEffect(() => {\n    if (fetchOnFirstRun) {\n      getData(url);\n    }\n    setState(true);\n  }, [fetchOnFirstRun, getData, url, params]);\n  const refresh = () => {\n    getData(url);\n  };\n\n  // setInterval(refresh, 60000)\n\n  return {\n    data,\n    refresh,\n    setData\n  };\n};\n_s(useFetch, \"VtCEeE6rpfh7pptKLqjyXRQ7yR4=\");\nexport default useFetch;","map":{"version":3,"names":["useState","useLayoutEffect","useCallback","useFetch","link","fetchOnFirstRun","refreshTimeout","params","url","data","setData","state","setState","getData","response","fetch","URLSearchParams","apiData","json","refresh"],"sources":["/home/zyad/Documents/ActiveProjects/SalamApp/src/hooks/useFetch.ts"],"sourcesContent":["import { useState, useLayoutEffect, useCallback } from \"react\";\r\n\r\ninterface useFetchProp {\r\n  link: string;\r\n  fetchOnFirstRun?: boolean;\r\n  refreshTimeout?: number;\r\n  params?: any\r\n}\r\n\r\nconst useFetch = ({link, fetchOnFirstRun, refreshTimeout, params}: useFetchProp) => {\r\n  // const url = `http://144.24.209.19:9090/api/v1/${link}`\r\n  const url = `http://127.0.0.1:9090/api/v1/${link}`\r\n    const [data, setData] = useState<any>([]);\r\n    const [state, setState] = useState(false);\r\nconst getData = useCallback(async(link: string)=>{\r\n    const response=await fetch(link + \"?\" + new URLSearchParams(params));\r\n    const apiData=await response.json();  \r\n  setData(apiData);\r\n},[params])\r\n\r\n    useLayoutEffect(() => {\r\n      if(fetchOnFirstRun){\r\n      getData(url)\r\n      }\r\n      setState(true)\r\n      }, [fetchOnFirstRun, getData, url, params]);\r\n\r\n\r\n\r\n      const refresh = ()=>{\r\n      getData(url)\r\n      }\r\n      \r\n\r\n      // setInterval(refresh, 60000)\r\n\r\n      return{data, refresh, setData}\r\n}\r\n\r\nexport default useFetch"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,eAAe,EAAEC,WAAW,QAAQ,OAAO;AAS9D,MAAMC,QAAQ,GAAG,QAAmE;EAAA;EAAA,IAAlE;IAACC,IAAI;IAAEC,eAAe;IAAEC,cAAc;IAAEC;EAAoB,CAAC;EAC7E;EACA,MAAMC,GAAG,GAAI,gCAA+BJ,IAAK,EAAC;EAChD,MAAM,CAACK,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAM,EAAE,CAAC;EACzC,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAMa,OAAO,GAAGX,WAAW,CAAC,MAAME,IAAY,IAAG;IAC7C,MAAMU,QAAQ,GAAC,MAAMC,KAAK,CAACX,IAAI,GAAG,GAAG,GAAG,IAAIY,eAAe,CAACT,MAAM,CAAC,CAAC;IACpE,MAAMU,OAAO,GAAC,MAAMH,QAAQ,CAACI,IAAI,EAAE;IACrCR,OAAO,CAACO,OAAO,CAAC;EAClB,CAAC,EAAC,CAACV,MAAM,CAAC,CAAC;EAEPN,eAAe,CAAC,MAAM;IACpB,IAAGI,eAAe,EAAC;MACnBQ,OAAO,CAACL,GAAG,CAAC;IACZ;IACAI,QAAQ,CAAC,IAAI,CAAC;EACd,CAAC,EAAE,CAACP,eAAe,EAAEQ,OAAO,EAAEL,GAAG,EAAED,MAAM,CAAC,CAAC;EAI3C,MAAMY,OAAO,GAAG,MAAI;IACpBN,OAAO,CAACL,GAAG,CAAC;EACZ,CAAC;;EAGD;;EAEA,OAAM;IAACC,IAAI;IAAEU,OAAO;IAAET;EAAO,CAAC;AACpC,CAAC;AAAA,GA5BKP,QAAQ;AA8Bd,eAAeA,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}