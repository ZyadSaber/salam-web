{"ast":null,"code":"var _jsxFileName = \"/home/zyad/Documents/active_projects/SalamApp/common/checkBox/src/CheckBox.tsx\",\n  _s = $RefreshSig$();\nimport React, { memo, useCallback, useEffect, useState } from \"react\";\nimport { useTranslation } from 'react-i18next';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CheckBox = _ref => {\n  _s();\n  let {\n    label = \"\",\n    value,\n    onChange,\n    name,\n    width,\n    disabled,\n    padding,\n    margin = \"10px\"\n  } = _ref;\n  const {\n    t\n  } = useTranslation();\n  const [checked, setChecked] = useState(false);\n  const handleChange = useCallback(event => {\n    if (event.target.checked === true) {\n      onChange({\n        name: name,\n        value: \"Y\"\n      });\n    } else if (event.target.checked === false) {\n      onChange({\n        name: name,\n        value: \"N\"\n      });\n    }\n  }, [name, onChange]);\n  useEffect(() => {\n    if (value === \"Y\") {\n      setChecked(true);\n    } else if (value === \"N\") {\n      setChecked(false);\n    }\n  }, [value]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-check\",\n      style: {\n        width: width,\n        padding: padding,\n        margin: margin\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"form-check-input\",\n        type: \"checkbox\",\n        checked: checked,\n        id: \"flexCheckIndeterminate\",\n        onChange: handleChange,\n        disabled: disabled\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"form-check-label\",\n        htmlFor: \"flexCheckIndeterminate\",\n        children: [console.log(label), t(label)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(CheckBox, \"p51D8sazIJ3mgPEsAX7o7uNloDc=\", false, function () {\n  return [useTranslation];\n});\n_c = CheckBox;\nexport default _c2 = /*#__PURE__*/memo(CheckBox);\nvar _c, _c2;\n$RefreshReg$(_c, \"CheckBox\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","memo","useCallback","useEffect","useState","useTranslation","CheckBox","label","value","onChange","name","width","disabled","padding","margin","t","checked","setChecked","handleChange","event","target","console","log"],"sources":["/home/zyad/Documents/active_projects/SalamApp/common/checkBox/src/CheckBox.tsx"],"sourcesContent":["import React, { memo, useCallback, useEffect, useState } from \"react\";\nimport { CheckBoxProps } from \"./interface\";\nimport { useTranslation } from 'react-i18next'\n\nconst CheckBox = ({\n    label = \"\",\n    value,\n    onChange,\n    name,\n    width,\n    disabled,\n    padding,\n    margin = \"10px\"\n}: CheckBoxProps) => {\n    const { t } = useTranslation()\n    const [checked, setChecked] = useState(false)\n    const handleChange = useCallback((event: { target: { checked: boolean; }; }) => {\n        if (event.target.checked === true) {\n            onChange({ name: name, value: \"Y\" })\n        } else if (event.target.checked === false) {\n            onChange({ name: name, value: \"N\" })\n        }\n    }, [name, onChange])\n\n    useEffect(() => {\n        if (value === \"Y\") {\n            setChecked(true)\n        } else if (value === \"N\") {\n            setChecked(false)\n        }\n    }, [value])\n\n    return (\n        <>\n            <div className=\"form-check\" style={{\n                width: width,\n                padding: padding,\n                margin: margin\n            }}>\n                <input className=\"form-check-input\" type=\"checkbox\" checked={checked} id=\"flexCheckIndeterminate\" onChange={handleChange} disabled={disabled} />\n                <label className=\"form-check-label\" htmlFor=\"flexCheckIndeterminate\">\n                    {console.log(label)}\n                    {t(label)}\n                </label>\n            </div>\n        </>\n    )\n}\n\nexport default memo(CheckBox)"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,IAAI,EAAEC,WAAW,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAErE,SAASC,cAAc,QAAQ,eAAe;AAAA;AAAA;AAE9C,MAAMC,QAAQ,GAAG,QASI;EAAA;EAAA,IATH;IACdC,KAAK,GAAG,EAAE;IACVC,KAAK;IACLC,QAAQ;IACRC,IAAI;IACJC,KAAK;IACLC,QAAQ;IACRC,OAAO;IACPC,MAAM,GAAG;EACE,CAAC;EACZ,MAAM;IAAEC;EAAE,CAAC,GAAGV,cAAc,EAAE;EAC9B,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAMc,YAAY,GAAGhB,WAAW,CAAEiB,KAAyC,IAAK;IAC5E,IAAIA,KAAK,CAACC,MAAM,CAACJ,OAAO,KAAK,IAAI,EAAE;MAC/BP,QAAQ,CAAC;QAAEC,IAAI,EAAEA,IAAI;QAAEF,KAAK,EAAE;MAAI,CAAC,CAAC;IACxC,CAAC,MAAM,IAAIW,KAAK,CAACC,MAAM,CAACJ,OAAO,KAAK,KAAK,EAAE;MACvCP,QAAQ,CAAC;QAAEC,IAAI,EAAEA,IAAI;QAAEF,KAAK,EAAE;MAAI,CAAC,CAAC;IACxC;EACJ,CAAC,EAAE,CAACE,IAAI,EAAED,QAAQ,CAAC,CAAC;EAEpBN,SAAS,CAAC,MAAM;IACZ,IAAIK,KAAK,KAAK,GAAG,EAAE;MACfS,UAAU,CAAC,IAAI,CAAC;IACpB,CAAC,MAAM,IAAIT,KAAK,KAAK,GAAG,EAAE;MACtBS,UAAU,CAAC,KAAK,CAAC;IACrB;EACJ,CAAC,EAAE,CAACT,KAAK,CAAC,CAAC;EAEX,oBACI;IAAA,uBACI;MAAK,SAAS,EAAC,YAAY;MAAC,KAAK,EAAE;QAC/BG,KAAK,EAAEA,KAAK;QACZE,OAAO,EAAEA,OAAO;QAChBC,MAAM,EAAEA;MACZ,CAAE;MAAA,wBACE;QAAO,SAAS,EAAC,kBAAkB;QAAC,IAAI,EAAC,UAAU;QAAC,OAAO,EAAEE,OAAQ;QAAC,EAAE,EAAC,wBAAwB;QAAC,QAAQ,EAAEE,YAAa;QAAC,QAAQ,EAAEN;MAAS;QAAA;QAAA;QAAA;MAAA,QAAG,eAChJ;QAAO,SAAS,EAAC,kBAAkB;QAAC,OAAO,EAAC,wBAAwB;QAAA,WAC/DS,OAAO,CAACC,GAAG,CAACf,KAAK,CAAC,EAClBQ,CAAC,CAACR,KAAK,CAAC;MAAA;QAAA;QAAA;QAAA;MAAA,QACL;IAAA;MAAA;MAAA;MAAA;IAAA;EACN,iBACP;AAEX,CAAC;AAAA,GA3CKD,QAAQ;EAAA,QAUID,cAAc;AAAA;AAAA,KAV1BC,QAAQ;AA6Cd,kCAAeL,IAAI,CAACK,QAAQ,CAAC;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}