{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useCallback } from \"react\";\nimport useLoacalStorage from \"./useLocalStorage\";\nimport API_ID from \"../global/api\";\nimport { useToast } from '@chakra-ui/react';\n;\nconst usePost = _ref => {\n  _s();\n  let {\n    link = \"\",\n    noAuthorization = false\n  } = _ref;\n  const toast = useToast();\n  //@ts-ignore\n  const url = `http://144.24.209.19:9090/api/v1/${API_ID[link]}`;\n  // const url = `http://127.0.0.1:9090/api/v1/${link}`\n  // const url = `http://192.168.1.250:9090/api/v1/${link}`\n  const [success, setSuccess] = useState();\n  const {\n    authorization\n  } = useLoacalStorage();\n  const postData = useCallback(async dataToPost => {\n    if (authorization || noAuthorization) {\n      dataToPost.authorization = authorization;\n      const settings = {\n        method: 'POST',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(dataToPost)\n      };\n      try {\n        const fetchResponse = await fetch(url, settings);\n        const data = await fetchResponse.json();\n        if (data.response === \"success\") {\n          toast({\n            position: \"top-right\",\n            title: 'Alert',\n            description: `${data.response}`,\n            status: 'success',\n            duration: 9000,\n            isClosable: true\n          });\n        } else {\n          toast({\n            position: \"top-right\",\n            title: 'Alert',\n            description: `${data.response}`,\n            status: 'error',\n            duration: 9000,\n            isClosable: true\n          });\n        }\n        setSuccess(data);\n        return data;\n      } catch (e) {\n        console.log(e);\n      }\n    }\n  }, [authorization, noAuthorization, url]);\n  const setRow = useCallback(row => {\n    postData(row);\n  }, [postData]);\n  return {\n    success,\n    setRow\n  };\n};\n_s(usePost, \"YXLCeOErhj6uMqZsFu2ISZ+NHSM=\", false, function () {\n  return [useToast, useLoacalStorage];\n});\nexport default usePost;","map":{"version":3,"names":["useState","useCallback","useLoacalStorage","API_ID","useToast","usePost","link","noAuthorization","toast","url","success","setSuccess","authorization","postData","dataToPost","settings","method","headers","Accept","body","JSON","stringify","fetchResponse","fetch","data","json","response","position","title","description","status","duration","isClosable","e","console","log","setRow","row"],"sources":["/home/zyad/Documents/active_projects/SalamApp/src/hooks/usePost.ts"],"sourcesContent":["import { useState, useCallback } from \"react\";\r\nimport useLoacalStorage from \"./useLocalStorage\";\r\nimport API_ID from \"../global/api\";\r\nimport { useToast } from '@chakra-ui/react';\r\n\r\ninterface usePostProps{\r\n    link: string;\r\n    noAuthorization?: boolean\r\n};\r\ninterface successType{\r\n    response: string;\r\n}\r\n\r\nconst usePost = ({\r\n    link  = \"\",\r\n    noAuthorization = false\r\n}: usePostProps) => {\r\n    const toast = useToast()\r\n    //@ts-ignore\r\n    const url = `http://144.24.209.19:9090/api/v1/${API_ID[link]}`\r\n    // const url = `http://127.0.0.1:9090/api/v1/${link}`\r\n    // const url = `http://192.168.1.250:9090/api/v1/${link}`\r\n    const [success, setSuccess] = useState<successType>()\r\n    const { authorization } = useLoacalStorage()\r\n    const postData = useCallback(async (dataToPost: any) => {\r\n        if(authorization || noAuthorization){\r\n        dataToPost.authorization = authorization\r\n        const settings = {\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(dataToPost)\r\n        };\r\n        try {\r\n            const fetchResponse = await fetch(url, settings);\r\n            const data = await fetchResponse.json();\r\n            if (data.response === \"success\"){\r\n            toast({\r\n            position: \"top-right\",\r\n            title: 'Alert',\r\n            description: `${data.response}`,\r\n            status: 'success',\r\n            duration: 9000,\r\n            isClosable: true,\r\n        })\r\n            } else {\r\n                toast({\r\n            position: \"top-right\",\r\n            title: 'Alert',\r\n            description: `${data.response}`,\r\n            status: 'error',\r\n            duration: 9000,\r\n            isClosable: true,\r\n        })\r\n            }\r\n            setSuccess(data)\r\n            return data\r\n        } catch (e) {\r\n            console.log(e)\r\n        }}\r\n    }, [authorization, noAuthorization, url])\r\n\r\n    const setRow = useCallback((row: any) => {\r\n        postData(row)\r\n    }, [postData])\r\n\r\n    return { success, setRow }\r\n}\r\n\r\nexport default usePost"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AAC7C,OAAOC,gBAAgB,MAAM,mBAAmB;AAChD,OAAOC,MAAM,MAAM,eAAe;AAClC,SAASC,QAAQ,QAAQ,kBAAkB;AAK1C;AAKD,MAAMC,OAAO,GAAG,QAGI;EAAA;EAAA,IAHH;IACbC,IAAI,GAAI,EAAE;IACVC,eAAe,GAAG;EACR,CAAC;EACX,MAAMC,KAAK,GAAGJ,QAAQ,EAAE;EACxB;EACA,MAAMK,GAAG,GAAI,oCAAmCN,MAAM,CAACG,IAAI,CAAE,EAAC;EAC9D;EACA;EACA,MAAM,CAACI,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,EAAe;EACrD,MAAM;IAAEY;EAAc,CAAC,GAAGV,gBAAgB,EAAE;EAC5C,MAAMW,QAAQ,GAAGZ,WAAW,CAAC,MAAOa,UAAe,IAAK;IACpD,IAAGF,aAAa,IAAIL,eAAe,EAAC;MACpCO,UAAU,CAACF,aAAa,GAAGA,aAAa;MACxC,MAAMG,QAAQ,GAAG;QACbC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACLC,MAAM,EAAE,kBAAkB;UAC1B,cAAc,EAAE;QACpB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,UAAU;MACnC,CAAC;MACD,IAAI;QACA,MAAMQ,aAAa,GAAG,MAAMC,KAAK,CAACd,GAAG,EAAEM,QAAQ,CAAC;QAChD,MAAMS,IAAI,GAAG,MAAMF,aAAa,CAACG,IAAI,EAAE;QACvC,IAAID,IAAI,CAACE,QAAQ,KAAK,SAAS,EAAC;UAChClB,KAAK,CAAC;YACNmB,QAAQ,EAAE,WAAW;YACrBC,KAAK,EAAE,OAAO;YACdC,WAAW,EAAG,GAAEL,IAAI,CAACE,QAAS,EAAC;YAC/BI,MAAM,EAAE,SAAS;YACjBC,QAAQ,EAAE,IAAI;YACdC,UAAU,EAAE;UAChB,CAAC,CAAC;QACE,CAAC,MAAM;UACHxB,KAAK,CAAC;YACVmB,QAAQ,EAAE,WAAW;YACrBC,KAAK,EAAE,OAAO;YACdC,WAAW,EAAG,GAAEL,IAAI,CAACE,QAAS,EAAC;YAC/BI,MAAM,EAAE,OAAO;YACfC,QAAQ,EAAE,IAAI;YACdC,UAAU,EAAE;UAChB,CAAC,CAAC;QACE;QACArB,UAAU,CAACa,IAAI,CAAC;QAChB,OAAOA,IAAI;MACf,CAAC,CAAC,OAAOS,CAAC,EAAE;QACRC,OAAO,CAACC,GAAG,CAACF,CAAC,CAAC;MAClB;IAAC;EACL,CAAC,EAAE,CAACrB,aAAa,EAAEL,eAAe,EAAEE,GAAG,CAAC,CAAC;EAEzC,MAAM2B,MAAM,GAAGnC,WAAW,CAAEoC,GAAQ,IAAK;IACrCxB,QAAQ,CAACwB,GAAG,CAAC;EACjB,CAAC,EAAE,CAACxB,QAAQ,CAAC,CAAC;EAEd,OAAO;IAAEH,OAAO;IAAE0B;EAAO,CAAC;AAC9B,CAAC;AAAA,GAxDK/B,OAAO;EAAA,QAIKD,QAAQ,EAMIF,gBAAgB;AAAA;AAgD9C,eAAeG,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}