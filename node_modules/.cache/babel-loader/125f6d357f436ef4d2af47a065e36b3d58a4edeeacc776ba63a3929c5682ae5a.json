{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Zyad Ahmed\\\\Documents\\\\Active Projects\\\\SalamApp\\\\src\\\\Pages\\\\Items\\\\component.tsx\",\n  _s = $RefreshSig$();\nimport React, { memo, useCallback, useEffect, useState } from 'react';\nimport Header from '../../components/Header/component';\nimport Footer from '../../components/Footer/component';\nimport useCheckUser from '../../hooks/useCheckUser';\nimport './style.css';\nimport useFetch from '../../hooks/useFetch';\nimport ModalView from \"./Partials/ModalView\";\nimport useTableControlsButtons from \"../../components/TableView/hooks/useTableControlsButtons\";\nimport ApiTable from \"../../components/TableView/ApiTable\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Items = () => {\n  _s();\n  //@ts-ignore\n  const {\n    setSelectedRow,\n    onDelete,\n    onSaveAndInsertion,\n    setMode,\n    selectedRow,\n    response,\n    modal,\n    setModal\n  } = useTableControlsButtons(\"items\");\n  const [search, setSearch] = useState(\"\");\n  const [mainTableData, setMainTableData] = useState([{\n    item_name: \"\",\n    unit: \"\",\n    base_price: \"\",\n    id: 0\n  }]);\n  const {\n    hidden\n  } = useCheckUser();\n  const {\n    data\n  } = useFetch(\"http://localhost:8000/items\");\n  useEffect(() => {\n    setMainTableData(data);\n  }, [data, response]);\n  const handleAdd = useCallback(() => {\n    setMode(\"n\");\n    setModal(true);\n    setSelectedRow({});\n  }, [setMode, setModal, setSelectedRow]);\n  const handleCloseModal = useCallback(() => {\n    setModal(false);\n    setSelectedRow({});\n    setMode(\"\");\n    setMainTableData(data);\n  }, [setModal, setSelectedRow, setMode, data]);\n  const handleEdit = useCallback(() => {\n    setMode(\"u\");\n    setModal(true);\n  }, [setModal, setMode]);\n  const handleSelect = useCallback(selected => () => {\n    setSelectedRow(selected);\n  }, [setSelectedRow]);\n  const handleSearchMethod = useCallback(() => {\n    setMainTableData(data.filter(item => {\n      if (search === \"\") return item;else if (item.item_name.toLocaleLowerCase().includes(search.toLowerCase())) return item;\n    }));\n  }, [data, search]);\n  const columns = [{\n    title: \"Item Name\"\n  }, {\n    title: \"Unit\"\n  }, {\n    title: \"Base Price\"\n  }];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Items\",\n      hidden: hidden,\n      children: /*#__PURE__*/_jsxDEV(ApiTable, {\n        api: \"basicData/customers\",\n        postApi: \"basicData/customers_dml\",\n        columns: columns,\n        hideTools: false,\n        canEdit: true,\n        canAdd: true,\n        canDelete: true,\n        rowKey: \"customer_id\",\n        Modal: ModalView\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(Items, \"09QVeJ52vwwo6FaF7F2eFR/JbJA=\", false, function () {\n  return [useTableControlsButtons, useCheckUser, useFetch];\n});\n_c = Items;\nexport default _c2 = /*#__PURE__*/memo(Items);\nvar _c, _c2;\n$RefreshReg$(_c, \"Items\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","memo","useCallback","useEffect","useState","Header","Footer","useCheckUser","useFetch","ModalView","useTableControlsButtons","ApiTable","Items","setSelectedRow","onDelete","onSaveAndInsertion","setMode","selectedRow","response","modal","setModal","search","setSearch","mainTableData","setMainTableData","item_name","unit","base_price","id","hidden","data","handleAdd","handleCloseModal","handleEdit","handleSelect","selected","handleSearchMethod","filter","item","toLocaleLowerCase","includes","toLowerCase","columns","title"],"sources":["C:/Users/Zyad Ahmed/Documents/Active Projects/SalamApp/src/Pages/Items/component.tsx"],"sourcesContent":["import React, { memo, useCallback, useEffect, useState } from 'react';\r\nimport Header from '../../components/Header/component';\r\nimport Footer from '../../components/Footer/component';\r\nimport useCheckUser from '../../hooks/useCheckUser';\r\nimport './style.css';\r\nimport useFetch from '../../hooks/useFetch';\r\nimport ModalView from \"./Partials/ModalView\";\r\nimport FormView from \"./Partials/FormView\";\r\nimport Table from \"../../components/TableView/Table\";\r\nimport useTableControlsButtons from \"../../components/TableView/hooks/useTableControlsButtons\"\r\nimport ApiTable from \"../../components/TableView/ApiTable\";\r\nimport { columns } from \"./constants\"\r\n\r\ninterface ItemsType {\r\n    id?: number;\r\n    item_name: string;\r\n    unit?: string;\r\n    base_price?: string;\r\n}\r\n\r\nconst Items = () => {\r\n    //@ts-ignore\r\n    const { setSelectedRow, onDelete, onSaveAndInsertion, setMode, selectedRow, response, modal, setModal } = useTableControlsButtons(\"items\")\r\n    const [search, setSearch] = useState(\"\");\r\n    const [mainTableData, setMainTableData] = useState<ItemsType[]>([\r\n        {\r\n            item_name: \"\",\r\n            unit: \"\",\r\n            base_price: \"\",\r\n            id: 0\r\n        }\r\n    ])\r\n\r\n    const { hidden } = useCheckUser()\r\n    const { data } = useFetch(\"http://localhost:8000/items\")\r\n\r\n    useEffect(() => {\r\n        setMainTableData(data)\r\n    }, [data, response])\r\n\r\n    const handleAdd = useCallback(() => {\r\n        setMode(\"n\")\r\n        setModal(true)\r\n        setSelectedRow({})\r\n    }, [setMode, setModal, setSelectedRow])\r\n\r\n    const handleCloseModal = useCallback(() => {\r\n        setModal(false)\r\n        setSelectedRow({})\r\n        setMode(\"\")\r\n        setMainTableData(data)\r\n    }, [setModal, setSelectedRow, setMode, data])\r\n\r\n    const handleEdit = useCallback(() => {\r\n        setMode(\"u\")\r\n        setModal(true)\r\n    }, [setModal, setMode])\r\n\r\n    const handleSelect = useCallback((selected: ItemsType) => () => { setSelectedRow(selected) }, [setSelectedRow])\r\n\r\n    const handleSearchMethod = useCallback(() => {\r\n        setMainTableData(data.filter((item: ItemsType) => {\r\n            if (search === \"\") return item;\r\n            else if (item.item_name.toLocaleLowerCase().includes(search.toLowerCase())) return item;\r\n        }))\r\n    }, [data, search])\r\n\r\n    const columns = [\r\n        { title: \"Item Name\" },\r\n        { title: \"Unit\" },\r\n        { title: \"Base Price\" },\r\n    ]\r\n\r\n\r\n    return (\r\n        <>\r\n            <Header />\r\n\r\n            <div className=\"Items\" hidden={hidden}>\r\n                {/* <Table\r\n                    title={\"Items Data\"}\r\n                    columns={columns}\r\n                    Form={<FormView\r\n                        setValue={setSearch}\r\n                        onSearch={handleSearchMethod}\r\n                    />}\r\n                    hideTools={false}\r\n                    canEdit={true}\r\n                    canAdd={true}\r\n                    canDelete={true}\r\n                    onAdd={handleAdd}\r\n                    onEdit={handleEdit}\r\n                    onDelete={onDelete}\r\n                >\r\n                    {mainTableData.map((item: ItemsType) => {\r\n                        return (\r\n                            <>\r\n                                <td onClick={handleSelect(item)}>{item.item_name}</td>\r\n                                <td onClick={handleSelect(item)}>{item.unit}</td>\r\n                                <td onClick={handleSelect(item)}>{item.base_price}</td>\r\n                            </>\r\n                        )\r\n                    })}\r\n                </Table>\r\n\r\n                <ModalView\r\n                    visible={modal}\r\n                    onOK={onSaveAndInsertion}\r\n                    onClose={handleCloseModal}\r\n                    setItems={setSelectedRow}\r\n                    Items={selectedRow}\r\n                /> */}\r\n                <ApiTable\r\n                    api={\"basicData/customers\"}\r\n                    postApi={\"basicData/customers_dml\"}\r\n                    columns={columns}\r\n                    hideTools={false}\r\n                    canEdit={true}\r\n                    canAdd={true}\r\n                    canDelete={true}\r\n                    rowKey={\"customer_id\"}\r\n                    Modal={ModalView}\r\n                />\r\n            </div>\r\n            <Footer />\r\n        </>\r\n    )\r\n};\r\n\r\nexport default memo(Items);\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}