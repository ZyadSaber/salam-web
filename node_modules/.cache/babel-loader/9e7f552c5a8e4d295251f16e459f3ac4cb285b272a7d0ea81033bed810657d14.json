{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Zyad Ahmed\\\\Documents\\\\Active Projects\\\\SalamApp\\\\src\\\\Pages\\\\EmployeesData\\\\component.tsx\",\n  _s = $RefreshSig$();\nimport React, { memo, useCallback, useEffect, useState } from 'react';\nimport Header from '../../components/Header/component';\nimport Footer from '../../components/Footer/component';\nimport useCheckUser from '../../hooks/useCheckUser';\nimport './style.css';\nimport useFetch from '../../hooks/useFetch';\nimport ModalView from \"./Partials/ModalView\";\nimport FormView from \"./Partials/FormView\";\nimport Table from \"../../components/TableView/Table\";\nimport useTableControlsButtons from \"../../components/TableView/hooks/useTableControlsButtons\";\nimport { columns } from \"./constants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst EmployeesData = () => {\n  _s();\n  //@ts-ignore\n  const {\n    setSelectedRow,\n    onSaveAndInsertion,\n    selectedRow,\n    onDelete\n  } = useTableControlsButtons(\"basicData/customers_dml\");\n  const [search, setSearch] = useState(\"\");\n  const [modal, setModal] = useState(false);\n  const [mainTableData, setMainTableData] = useState([{\n    employee_id: 1,\n    name: \"Zyad Ahmed\",\n    date_of_hiring: \"2002-09-08T21:00:00.000Z\",\n    address: \"2th Ahmed\",\n    phone: \"01021020169\",\n    mobile: \"0114455626\",\n    job_title: \"Manager\",\n    email: \"zya@gmail.com\",\n    salary: 3500,\n    attendance_time: \"09:30\",\n    leaving_time: \"11:30\",\n    query_status: \"q\"\n  }]);\n  const {\n    hidden\n  } = useCheckUser();\n  const {\n    data\n  } = useFetch(\"employeesData/employees\");\n  useEffect(() => {\n    setMainTableData(data);\n  }, [data]);\n  const handleAdd = useCallback(() => {\n    setModal(true);\n    setSelectedRow({\n      query_status: \"n\"\n    });\n  }, [setSelectedRow]);\n  const handleCloseModal = useCallback(() => {\n    setModal(false);\n    setMainTableData(data);\n  }, [setModal, data]);\n  const handleEdit = useCallback(() => {\n    setModal(true);\n    setSelectedRow({\n      ...selectedRow,\n      query_status: \"u\"\n    });\n  }, [selectedRow, setSelectedRow]);\n  const handleSearchMethod = useCallback(() => {\n    setMainTableData(data.filter(item => {\n      if (search === \"\") return item;else if (item.name.toLocaleLowerCase().includes(search.toLowerCase())) return item;\n    }));\n  }, [data, search]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"customers\",\n      hidden: hidden,\n      children: [/*#__PURE__*/_jsxDEV(Table, {\n        title: \"Customers Data\",\n        columns: columns,\n        hideTools: false,\n        canEdit: true,\n        canAdd: true,\n        canDelete: true,\n        onAdd: handleAdd,\n        onEdit: handleEdit,\n        onDelete: onDelete,\n        rowkey: \"employee_id\",\n        dataSource: mainTableData,\n        onSelectedRow: setSelectedRow,\n        children: /*#__PURE__*/_jsxDEV(FormView, {\n          setValue: setSearch,\n          onSearch: handleSearchMethod\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(ModalView, {\n        visable: modal,\n        onOK: onSaveAndInsertion,\n        onClose: handleCloseModal,\n        setCustomer: setSelectedRow,\n        customer: selectedRow\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(EmployeesData, \"d0xV32gtY/GUbYtR+gYW0m1T4XY=\", false, function () {\n  return [useTableControlsButtons, useCheckUser, useFetch];\n});\n_c = EmployeesData;\nexport default _c2 = /*#__PURE__*/memo(EmployeesData);\nvar _c, _c2;\n$RefreshReg$(_c, \"EmployeesData\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","memo","useCallback","useEffect","useState","Header","Footer","useCheckUser","useFetch","ModalView","FormView","Table","useTableControlsButtons","columns","EmployeesData","setSelectedRow","onSaveAndInsertion","selectedRow","onDelete","search","setSearch","modal","setModal","mainTableData","setMainTableData","employee_id","name","date_of_hiring","address","phone","mobile","job_title","email","salary","attendance_time","leaving_time","query_status","hidden","data","handleAdd","handleCloseModal","handleEdit","handleSearchMethod","filter","item","toLocaleLowerCase","includes","toLowerCase"],"sources":["C:/Users/Zyad Ahmed/Documents/Active Projects/SalamApp/src/Pages/EmployeesData/component.tsx"],"sourcesContent":["import React, { memo, useCallback, useEffect, useState } from 'react';\r\nimport Header from '../../components/Header/component';\r\nimport Footer from '../../components/Footer/component';\r\nimport useCheckUser from '../../hooks/useCheckUser';\r\nimport './style.css';\r\nimport useFetch from '../../hooks/useFetch';\r\nimport ModalView from \"./Partials/ModalView\";\r\nimport FormView from \"./Partials/FormView\";\r\nimport Table from \"../../components/TableView/Table\";\r\nimport useTableControlsButtons from \"../../components/TableView/hooks/useTableControlsButtons\";\r\nimport { columns } from \"./constants\"\r\n\r\ninterface EmployeesDataType {\r\n    employee_id: number;\r\n    name: string;\r\n    date_of_hiring?: string;\r\n    address?: string;\r\n    phone?: string;\r\n    mobile?: string;\r\n    job_title?: string;\r\n    email?: string;\r\n    salary?: number;\r\n    attendance_time?: string;\r\n    leaving_time?: string;\r\n    query_status?: string;\r\n}\r\n\r\nconst EmployeesData = () => {\r\n    //@ts-ignore\r\n    const { setSelectedRow, onSaveAndInsertion, selectedRow, onDelete } = useTableControlsButtons(\"basicData/customers_dml\")\r\n    const [search, setSearch] = useState(\"\");\r\n    const [modal, setModal] = useState(false);\r\n    const [mainTableData, setMainTableData] = useState<EmployeesDataType[]>([\r\n        {\r\n            employee_id: 1,\r\n            name: \"Zyad Ahmed\",\r\n            date_of_hiring: \"2002-09-08T21:00:00.000Z\",\r\n            address: \"2th Ahmed\",\r\n            phone: \"01021020169\",\r\n            mobile: \"0114455626\",\r\n            job_title: \"Manager\",\r\n            email: \"zya@gmail.com\",\r\n            salary: 3500,\r\n            attendance_time: \"09:30\",\r\n            leaving_time: \"11:30\",\r\n            query_status: \"q\"\r\n        }\r\n    ])\r\n\r\n    const { hidden } = useCheckUser()\r\n    const { data } = useFetch(\"employeesData/employees\")\r\n\r\n    useEffect(() => {\r\n        setMainTableData(data)\r\n    }, [data])\r\n\r\n    const handleAdd = useCallback(() => {\r\n        setModal(true)\r\n        setSelectedRow({ query_status: \"n\" })\r\n    }, [setSelectedRow])\r\n\r\n    const handleCloseModal = useCallback(() => {\r\n        setModal(false)\r\n        setMainTableData(data)\r\n    }, [setModal, data])\r\n\r\n    const handleEdit = useCallback(() => {\r\n        setModal(true)\r\n        setSelectedRow({ ...selectedRow, query_status: \"u\" })\r\n    }, [selectedRow, setSelectedRow])\r\n\r\n    const handleSearchMethod = useCallback(() => {\r\n        setMainTableData(data.filter((item: EmployeesDataType) => {\r\n            if (search === \"\") return item;\r\n            else if (item.name.toLocaleLowerCase().includes(search.toLowerCase())) return item;\r\n        }))\r\n    }, [data, search])\r\n\r\n\r\n    return (<>\r\n        <Header />\r\n\r\n        <div className=\"customers\" hidden={hidden}>\r\n            <Table\r\n                title={\"Customers Data\"}\r\n                columns={columns}\r\n                hideTools={false}\r\n                canEdit={true}\r\n                canAdd={true}\r\n                canDelete={true}\r\n                onAdd={handleAdd}\r\n                onEdit={handleEdit}\r\n                onDelete={onDelete}\r\n                rowkey={\"employee_id\"}\r\n                dataSource={mainTableData}\r\n                onSelectedRow={setSelectedRow}\r\n            >\r\n                <FormView\r\n                    setValue={setSearch}\r\n                    onSearch={handleSearchMethod}\r\n                />\r\n            </Table>\r\n\r\n            <ModalView\r\n                visable={modal}\r\n                onOK={onSaveAndInsertion}\r\n                onClose={handleCloseModal}\r\n                setCustomer={setSelectedRow}\r\n                customer={selectedRow}\r\n            />\r\n        </div>\r\n        <Footer />\r\n    </>)\r\n\r\n};\r\n\r\nexport default memo(EmployeesData);\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}