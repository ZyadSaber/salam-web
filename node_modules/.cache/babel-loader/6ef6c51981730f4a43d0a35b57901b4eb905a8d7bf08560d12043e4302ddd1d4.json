{"ast":null,"code":"var _jsxFileName = \"/home/zyad/Documents/active_projects/SalamApp/src/components/InputText/InputText.tsx\",\n  _s = $RefreshSig$();\nimport { memo, useCallback } from \"react\";\nimport { useTranslation } from 'react-i18next';\nimport { Input, FormLabel, Flex } from '@chakra-ui/react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst InputText = _ref => {\n  _s();\n  let {\n    disabled,\n    value,\n    name,\n    Label = \"\",\n    onChange,\n    width = \"200px\",\n    type = \"text\",\n    placeHolder,\n    padding,\n    margin = \"10px\",\n    className = \"\",\n    required = false\n  } = _ref;\n  const {\n    t\n  } = useTranslation();\n  const handleChange = useCallback(event => {\n    onChange({\n      name: name,\n      value: event.target.value\n    });\n  }, [name, onChange]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Flex, {\n      direction: \"column\",\n      children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n        children: t(Label)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        placeholder: placeHolder,\n        size: \"md\",\n        isDisabled: disabled,\n        isRequired: required,\n        onChange: handleChange,\n        padding: padding,\n        margin: margin,\n        width: \"100%\",\n        className: className,\n        value: value,\n        type: type\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(InputText, \"YvvyRReRTUModekUJfZ5Gxi1A40=\", false, function () {\n  return [useTranslation];\n});\n_c = InputText;\nexport default _c2 = /*#__PURE__*/memo(InputText);\nvar _c, _c2;\n$RefreshReg$(_c, \"InputText\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["memo","useCallback","useTranslation","Input","FormLabel","Flex","InputText","disabled","value","name","Label","onChange","width","type","placeHolder","padding","margin","className","required","t","handleChange","event","target"],"sources":["/home/zyad/Documents/active_projects/SalamApp/src/components/InputText/InputText.tsx"],"sourcesContent":["import { memo, useCallback } from \"react\";\nimport { InputTextProps } from \"./interface\";\nimport { useTranslation } from 'react-i18next';\nimport { Input, FormLabel, Flex } from '@chakra-ui/react'\n\nconst InputText = ({\n    disabled,\n    value,\n    name,\n    Label = \"\",\n    onChange,\n    width = \"200px\",\n    type = \"text\",\n    placeHolder,\n    padding,\n    margin = \"10px\",\n    className = \"\",\n    required = false\n}: InputTextProps) => {\n    const { t } = useTranslation()\n\n    const handleChange = useCallback((event: { target: { value: string; }; }) => {\n        onChange({ name: name, value: event.target.value })\n    }, [name, onChange])\n\n    return (\n        <>\n            <Flex direction=\"column\">\n                <FormLabel>{t(Label)}</FormLabel>\n                <Input\n                    placeholder={placeHolder}\n                    size='md'\n                    isDisabled={disabled}\n                    isRequired={required}\n                    onChange={handleChange}\n                    padding={padding}\n                    margin={margin}\n                    width=\"100%\"\n                    className={className}\n                    value={value}\n                    type={type}\n                />\n            </Flex>\n            {/* <div className=\"mb-1 d-inline-block\" style={{ width: width, margin: margin, padding: padding }}>\n                <label htmlFor=\"exampleFormControlInput1\" className={`form-label ${className}`} >{t(Label)}</label>\n                <input type={type} className=\"form-control\" id=\"exampleFormControlInput1\" placeholder={placeHolder} disabled={disabled} onChange={handleChange} value={value} />\n            </div> */}\n        </>\n    )\n}\n\nexport default memo(InputText)"],"mappings":";;AAAA,SAASA,IAAI,EAAEC,WAAW,QAAQ,OAAO;AAEzC,SAASC,cAAc,QAAQ,eAAe;AAC9C,SAASC,KAAK,EAAEC,SAAS,EAAEC,IAAI,QAAQ,kBAAkB;AAAA;AAAA;AAEzD,MAAMC,SAAS,GAAG,QAaI;EAAA;EAAA,IAbH;IACfC,QAAQ;IACRC,KAAK;IACLC,IAAI;IACJC,KAAK,GAAG,EAAE;IACVC,QAAQ;IACRC,KAAK,GAAG,OAAO;IACfC,IAAI,GAAG,MAAM;IACbC,WAAW;IACXC,OAAO;IACPC,MAAM,GAAG,MAAM;IACfC,SAAS,GAAG,EAAE;IACdC,QAAQ,GAAG;EACC,CAAC;EACb,MAAM;IAAEC;EAAE,CAAC,GAAGjB,cAAc,EAAE;EAE9B,MAAMkB,YAAY,GAAGnB,WAAW,CAAEoB,KAAsC,IAAK;IACzEV,QAAQ,CAAC;MAAEF,IAAI,EAAEA,IAAI;MAAED,KAAK,EAAEa,KAAK,CAACC,MAAM,CAACd;IAAM,CAAC,CAAC;EACvD,CAAC,EAAE,CAACC,IAAI,EAAEE,QAAQ,CAAC,CAAC;EAEpB,oBACI;IAAA,uBACI,QAAC,IAAI;MAAC,SAAS,EAAC,QAAQ;MAAA,wBACpB,QAAC,SAAS;QAAA,UAAEQ,CAAC,CAACT,KAAK;MAAC;QAAA;QAAA;QAAA;MAAA,QAAa,eACjC,QAAC,KAAK;QACF,WAAW,EAAEI,WAAY;QACzB,IAAI,EAAC,IAAI;QACT,UAAU,EAAEP,QAAS;QACrB,UAAU,EAAEW,QAAS;QACrB,QAAQ,EAAEE,YAAa;QACvB,OAAO,EAAEL,OAAQ;QACjB,MAAM,EAAEC,MAAO;QACf,KAAK,EAAC,MAAM;QACZ,SAAS,EAAEC,SAAU;QACrB,KAAK,EAAET,KAAM;QACb,IAAI,EAAEK;MAAK;QAAA;QAAA;QAAA;MAAA,QACb;IAAA;MAAA;MAAA;MAAA;IAAA;EACC,iBAKR;AAEX,CAAC;AAAA,GA5CKP,SAAS;EAAA,QAcGJ,cAAc;AAAA;AAAA,KAd1BI,SAAS;AA8Cf,kCAAeN,IAAI,CAACM,SAAS,CAAC;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}