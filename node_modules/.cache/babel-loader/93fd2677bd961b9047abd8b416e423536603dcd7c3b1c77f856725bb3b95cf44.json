{"ast":null,"code":"var _jsxFileName = \"/home/zyad/Documents/ActiveProjects/SalamApp/src/components/button/button.tsx\",\n  _s = $RefreshSig$();\nimport { memo } from 'react';\nimport './style.css';\nimport useTranslateLabel from '../../hooks/useTranslateLabel';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Button = _ref => {\n  _s();\n  let {\n    label = \"\",\n    onClick,\n    disabled,\n    className,\n    hidden,\n    margin,\n    width,\n    height,\n    noAuthorization = false\n  } = _ref;\n  const {\n    tran_label,\n    test\n  } = useTranslateLabel({\n    label: label,\n    noAuthorization: noAuthorization\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      className: `button btn btn-primary ${className} `,\n      style: {\n        width: `${width}`,\n        margin: `${margin}`,\n        height: `${height}`,\n        display: \"inline-block\"\n      },\n      onClick: onClick,\n      disabled: disabled,\n      hidden: hidden,\n      children: test(\"dd\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(Button, \"APaBj+rReB/zO9u29x4kPU4138k=\", false, function () {\n  return [useTranslateLabel];\n});\n_c = Button;\nexport default _c2 = /*#__PURE__*/memo(Button);\nvar _c, _c2;\n$RefreshReg$(_c, \"Button\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["memo","useTranslateLabel","Button","label","onClick","disabled","className","hidden","margin","width","height","noAuthorization","tran_label","test","display"],"sources":["/home/zyad/Documents/ActiveProjects/SalamApp/src/components/button/button.tsx"],"sourcesContent":["import { memo } from 'react';\r\nimport './style.css';\r\nimport { buttonProp } from \"./interface\";\r\nimport useTranslateLabel from '../../hooks/useTranslateLabel';\r\n\r\nconst Button = ({\r\n    label = \"\",\r\n    onClick,\r\n    disabled,\r\n    className,\r\n    hidden,\r\n    margin,\r\n    width,\r\n    height,\r\n    noAuthorization = false\r\n}: buttonProp) => {\r\n    const { tran_label, test } = useTranslateLabel({ label: label, noAuthorization: noAuthorization })\r\n    return (\r\n        <>\r\n            <button className={`button btn btn-primary ${className} `} style={{\r\n                width: `${width}`,\r\n                margin: `${margin}`,\r\n                height: `${height}`,\r\n                display: \"inline-block\"\r\n            }} onClick={onClick} disabled={disabled} hidden={hidden}>{test(\"dd\")}</button>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default memo(Button)"],"mappings":";;AAAA,SAASA,IAAI,QAAQ,OAAO;AAC5B,OAAO,aAAa;AAEpB,OAAOC,iBAAiB,MAAM,+BAA+B;AAAC;AAAA;AAE9D,MAAMC,MAAM,GAAG,QAUG;EAAA;EAAA,IAVF;IACZC,KAAK,GAAG,EAAE;IACVC,OAAO;IACPC,QAAQ;IACRC,SAAS;IACTC,MAAM;IACNC,MAAM;IACNC,KAAK;IACLC,MAAM;IACNC,eAAe,GAAG;EACV,CAAC;EACT,MAAM;IAAEC,UAAU;IAAEC;EAAK,CAAC,GAAGZ,iBAAiB,CAAC;IAAEE,KAAK,EAAEA,KAAK;IAAEQ,eAAe,EAAEA;EAAgB,CAAC,CAAC;EAClG,oBACI;IAAA,uBACI;MAAQ,SAAS,EAAG,0BAAyBL,SAAU,GAAG;MAAC,KAAK,EAAE;QAC9DG,KAAK,EAAG,GAAEA,KAAM,EAAC;QACjBD,MAAM,EAAG,GAAEA,MAAO,EAAC;QACnBE,MAAM,EAAG,GAAEA,MAAO,EAAC;QACnBI,OAAO,EAAE;MACb,CAAE;MAAC,OAAO,EAAEV,OAAQ;MAAC,QAAQ,EAAEC,QAAS;MAAC,MAAM,EAAEE,MAAO;MAAA,UAAEM,IAAI,CAAC,IAAI;IAAC;MAAA;MAAA;MAAA;IAAA;EAAU,iBAC/E;AAEX,CAAC;AAAA,GAtBKX,MAAM;EAAA,QAWqBD,iBAAiB;AAAA;AAAA,KAX5CC,MAAM;AAwBZ,kCAAeF,IAAI,CAACE,MAAM,CAAC;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}