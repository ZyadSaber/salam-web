{"ast":null,"code":"var _s = $RefreshSig$();\n// import { memo, useEffect, useState } from \"react\";\nimport { useToast } from '@chakra-ui/react';\n// export default function Notification({label = \"\", body = \"\", type = \"warning\"}:notificationProp){\n//     const toast = useToast()\n//     toast({\n//             position: \"top-right\",\n//             title: `${label}`,\n//             description: `${body}`,\n//             status: `${type}`,\n//             duration: 9000,\n//             isClosable: true,\n//         })\n// }\n// const Notification = ({\n//     Label = \"Message\",\n//     body,\n//     duration = 5000,\n//     additionalMessage\n// }: notificationProp) => {\nconst Notification = _ref => {\n  _s();\n  let {\n    label = \"\",\n    body = \"\",\n    type = \"warning\"\n  } = _ref;\n  const toast = useToast();\n  toast({\n    position: \"top-right\",\n    title: `${label}`,\n    description: `${body}`,\n    status: `${type}`,\n    duration: 9000,\n    isClosable: true\n  });\n};\n//     // const [visible, setVisible] = useState<boolean>(false)\n//     // const [message, setMessage] = useState({\n//     //     response: \"NULL\"\n//     // })\n\n//     // const closeNotification = () => {\n//     //     setVisible(false)\n\n//     // }\n\n//     // useEffect(() => {\n//     //     if (body) {\n//     //         setMessage(body)\n//     //         setVisible(true)\n//     //         setTimeout(closeNotification, duration)\n//     //     }\n//     // }, [body, duration])\n// }\n_s(Notification, \"WUU7e0p6AiTpvVrXhi50JBdcu+0=\", false, function () {\n  return [useToast];\n});\n_c = Notification;\nexport default Notification;\nvar _c;\n$RefreshReg$(_c, \"Notification\");","map":{"version":3,"names":["useToast","Notification","label","body","type","toast","position","title","description","status","duration","isClosable"],"sources":["/home/zyad/Documents/active_projects/SalamApp/src/components/Notification/component.ts"],"sourcesContent":["// import { memo, useEffect, useState } from \"react\";\nimport { useToast } from '@chakra-ui/react'\n\ninterface notificationProp {\n    label: string;\n    body: string;\n    type: \"success\" | \"error\" | \"warning\" | \"info\"\n}\n// export default function Notification({label = \"\", body = \"\", type = \"warning\"}:notificationProp){\n//     const toast = useToast()\n//     toast({\n//             position: \"top-right\",\n//             title: `${label}`,\n//             description: `${body}`,\n//             status: `${type}`,\n//             duration: 9000,\n//             isClosable: true,\n//         })\n// }\n// const Notification = ({\n//     Label = \"Message\",\n//     body,\n//     duration = 5000,\n//     additionalMessage\n// }: notificationProp) => {\nconst Notification = ({label = \"\", body = \"\", type = \"warning\"}:notificationProp) =>{\n        const toast = useToast()\n    toast({\n            position: \"top-right\",\n            title: `${label}`,\n            description: `${body}`,\n            status: `${type}`,\n            duration: 9000,\n            isClosable: true,\n        })\n}\n//     // const [visible, setVisible] = useState<boolean>(false)\n//     // const [message, setMessage] = useState({\n//     //     response: \"NULL\"\n//     // })\n\n//     // const closeNotification = () => {\n//     //     setVisible(false)\n\n//     // }\n\n//     // useEffect(() => {\n//     //     if (body) {\n//     //         setMessage(body)\n//     //         setVisible(true)\n//     //         setTimeout(closeNotification, duration)\n//     //     }\n//     // }, [body, duration])\n// }\n\nexport default Notification"],"mappings":";AAAA;AACA,SAASA,QAAQ,QAAQ,kBAAkB;AAO3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,YAAY,GAAG,QAA+D;EAAA;EAAA,IAA9D;IAACC,KAAK,GAAG,EAAE;IAAEC,IAAI,GAAG,EAAE;IAAEC,IAAI,GAAG;EAA0B,CAAC;EACxE,MAAMC,KAAK,GAAGL,QAAQ,EAAE;EAC5BK,KAAK,CAAC;IACEC,QAAQ,EAAE,WAAW;IACrBC,KAAK,EAAG,GAAEL,KAAM,EAAC;IACjBM,WAAW,EAAG,GAAEL,IAAK,EAAC;IACtBM,MAAM,EAAG,GAAEL,IAAK,EAAC;IACjBM,QAAQ,EAAE,IAAI;IACdC,UAAU,EAAE;EAChB,CAAC,CAAC;AACV,CAAC;AACD;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,GA5BMV,YAAY;EAAA,QACID,QAAQ;AAAA;AAAA,KADxBC,YAAY;AA8BlB,eAAeA,YAAY;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}