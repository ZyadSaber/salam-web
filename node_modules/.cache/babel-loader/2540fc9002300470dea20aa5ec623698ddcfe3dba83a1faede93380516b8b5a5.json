{"ast":null,"code":"var _jsxFileName = \"/home/zyad/Documents/active_projects/SalamApp/src/components/TableView/Table.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback } from 'react';\nimport \"./style.css\";\nimport { Table as TableView, Thead, Tbody, Tfoot, Tr, Th, Td, TableCaption, TableContainer } from '@chakra-ui/react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Table = _ref => {\n  _s();\n  let {\n    dataSource,\n    rowkey = \"rowkey\",\n    columns,\n    hideTools = true,\n    canEdit = false,\n    canAdd = false,\n    canDelete = false,\n    onAdd,\n    onEdit,\n    onDelete,\n    children,\n    actionColumn = false,\n    onAction,\n    actionLabel = \"\",\n    onSelectedRow,\n    canPrint = false,\n    onPrint,\n    addionalButtons,\n    onSave,\n    canSave = false,\n    width = \"100%\"\n  } = _ref;\n  //@ts-ignore\n  const [rowSelected, setRowSelected] = useState();\n  const handleSelectedRow = useCallback(item => () => {\n    onSelectedRow(item);\n    setRowSelected(item);\n  }, [onSelectedRow]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(TableContainer, {\n      children: /*#__PURE__*/_jsxDEV(TableView, {\n        variant: \"simple\",\n        children: [/*#__PURE__*/_jsxDEV(TableCaption, {\n          children: \"Imperial to metric conversion factors\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Thead, {\n          children: /*#__PURE__*/_jsxDEV(Tr, {\n            children: [/*#__PURE__*/_jsxDEV(Th, {\n              children: \"To convert\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Th, {\n              children: \"into\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Th, {\n              isNumeric: true,\n              children: \"multiply by\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Tbody, {\n          children: [/*#__PURE__*/_jsxDEV(Tr, {\n            children: [/*#__PURE__*/_jsxDEV(Td, {\n              children: \"inches\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Td, {\n              children: \"millimetres (mm)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Td, {\n              isNumeric: true,\n              children: \"25.4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Tr, {\n            children: [/*#__PURE__*/_jsxDEV(Td, {\n              children: \"feet\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Td, {\n              children: \"centimetres (cm)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Td, {\n              isNumeric: true,\n              children: \"30.48\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Tr, {\n            children: [/*#__PURE__*/_jsxDEV(Td, {\n              children: \"yards\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Td, {\n              children: \"metres (m)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Td, {\n              isNumeric: true,\n              children: \"0.91444\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Tfoot, {\n          children: /*#__PURE__*/_jsxDEV(Tr, {\n            children: [/*#__PURE__*/_jsxDEV(Th, {\n              children: \"To convert\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Th, {\n              children: \"into\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Th, {\n              isNumeric: true,\n              children: \"multiply by\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(Table, \"L+NSgJPUMzlDe6jkwM6gdC2ftGk=\");\n_c = Table;\nexport default Table;\nvar _c;\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"names":["React","useState","useCallback","Table","TableView","Thead","Tbody","Tfoot","Tr","Th","Td","TableCaption","TableContainer","dataSource","rowkey","columns","hideTools","canEdit","canAdd","canDelete","onAdd","onEdit","onDelete","children","actionColumn","onAction","actionLabel","onSelectedRow","canPrint","onPrint","addionalButtons","onSave","canSave","width","rowSelected","setRowSelected","handleSelectedRow","item"],"sources":["/home/zyad/Documents/active_projects/SalamApp/src/components/TableView/Table.tsx"],"sourcesContent":["import React, { memo, useState, useMemo, useCallback, useEffect } from 'react';\r\nimport \"./style.css\";\r\nimport Button from \"../button/button\";\r\nimport IconButton from '../button/iconButton';\r\nimport { addionalButton } from \"../../Types/general\";\r\nimport {\r\n    Table as TableView,\r\n    Thead,\r\n    Tbody,\r\n    Tfoot,\r\n    Tr,\r\n    Th,\r\n    Td,\r\n    TableCaption,\r\n    TableContainer,\r\n} from '@chakra-ui/react'\r\n\r\ninterface TableProps {\r\n    rowkey?: string | number;\r\n    dataSource?: any[];\r\n    columns: column[];\r\n    title?: string;\r\n    canEdit?: boolean;\r\n    canAdd?: boolean;\r\n    canDelete?: boolean;\r\n    hideTools?: boolean;\r\n    onAdd?: () => void;\r\n    onEdit?: () => void | any;\r\n    onDelete?: () => void;\r\n    children?: any;\r\n    Form?: any;\r\n    actionColumn?: boolean;\r\n    onAction?: any;\r\n    actionLabel?: string;\r\n    onSelectedRow?: any;\r\n    canPrint?: boolean;\r\n    onPrint?: () => void;\r\n    addionalButtons?: addionalButton[];\r\n    onSave?: () => void;\r\n    canSave?: boolean;\r\n    width?: number | string;\r\n}\r\n\r\ninterface column {\r\n    title: string;\r\n    width?: number | string;\r\n    dataIndex?: any;\r\n}\r\n\r\nconst Table = ({\r\n    dataSource,\r\n    rowkey = \"rowkey\",\r\n    columns,\r\n    hideTools = true,\r\n    canEdit = false,\r\n    canAdd = false,\r\n    canDelete = false,\r\n    onAdd,\r\n    onEdit,\r\n    onDelete,\r\n    children,\r\n    actionColumn = false,\r\n    onAction,\r\n    actionLabel = \"\",\r\n    onSelectedRow,\r\n    canPrint = false,\r\n    onPrint,\r\n    addionalButtons,\r\n    onSave,\r\n    canSave = false,\r\n    width = \"100%\"\r\n}: TableProps) => {\r\n    //@ts-ignore\r\n    const [rowSelected, setRowSelected] = useState()\r\n    const handleSelectedRow = useCallback((item: any) => () => {\r\n        onSelectedRow(item)\r\n        setRowSelected(item)\r\n    }, [onSelectedRow])\r\n\r\n    return (\r\n        <>\r\n            <TableContainer>\r\n                <TableView variant='simple'>\r\n                    <TableCaption>Imperial to metric conversion factors</TableCaption>\r\n                    <Thead>\r\n                        <Tr>\r\n                            <Th>To convert</Th>\r\n                            <Th>into</Th>\r\n                            <Th isNumeric>multiply by</Th>\r\n                        </Tr>\r\n                    </Thead>\r\n                    <Tbody>\r\n                        <Tr>\r\n                            <Td>inches</Td>\r\n                            <Td>millimetres (mm)</Td>\r\n                            <Td isNumeric>25.4</Td>\r\n                        </Tr>\r\n                        <Tr>\r\n                            <Td>feet</Td>\r\n                            <Td>centimetres (cm)</Td>\r\n                            <Td isNumeric>30.48</Td>\r\n                        </Tr>\r\n                        <Tr>\r\n                            <Td>yards</Td>\r\n                            <Td>metres (m)</Td>\r\n                            <Td isNumeric>0.91444</Td>\r\n                        </Tr>\r\n                    </Tbody>\r\n                    <Tfoot>\r\n                        <Tr>\r\n                            <Th>To convert</Th>\r\n                            <Th>into</Th>\r\n                            <Th isNumeric>multiply by</Th>\r\n                        </Tr>\r\n                    </Tfoot>\r\n                </TableView>\r\n            </TableContainer>\r\n            {/* <div className=\"view\" style={{ width: width }}>\r\n                <div className=\"section\">\r\n                    {children}\r\n                    <div className=\"tools\" hidden={hideTools}>\r\n                        <div className=\"TableTools\">\r\n                            <IconButton\r\n                                icon='fa-sharp fa-solid fa-plus'\r\n                                onClick={onAdd}\r\n                                disabled={canAdd}\r\n                            />\r\n                            <IconButton\r\n                                icon='fa-sharp fa-solid fa-pen-clip'\r\n                                onClick={onEdit}\r\n                                disabled={canEdit}\r\n                            />\r\n                            <IconButton\r\n                                icon='fa-sharp fa-solid fa-trash'\r\n                                onClick={onDelete}\r\n                                disabled={canDelete}\r\n                            />\r\n                            {addionalButtons && addionalButtons.map((button: addionalButton) => {\r\n                                return (\r\n                                    <IconButton\r\n                                        icon={button.icon}\r\n                                        onClick={button.onClick}\r\n                                        disabled={button.disabled}\r\n                                    />\r\n                                )\r\n                            })}\r\n                            <IconButton\r\n                                icon='fa-solid fa-floppy-disk'\r\n                                onClick={onSave}\r\n                                disabled={canSave}\r\n                            />\r\n                            <IconButton\r\n                                icon='fa-solid fa-print'\r\n                                onClick={onPrint}\r\n                                disabled={canPrint}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"table2 \">\r\n                        <table className='table'>\r\n                            <thead>\r\n                                <tr className='table-secondary'>\r\n                                    {columns.map((item: any) => {\r\n                                        return (\r\n                                            <th scope=\"col\" style={{ width: item.width }}>\r\n                                                {item.title}\r\n                                            </th>\r\n                                        )\r\n                                    })}\r\n                                    <th hidden={!actionColumn}>Action</th>\r\n                                </tr>\r\n                            </thead>\r\n                        </table>\r\n                        <div className=\"tbl-content\">\r\n                            <table className='table '>\r\n                                <tbody>\r\n                                    {dataSource?.map((item: any) => {\r\n                                        return (\r\n                                            <tr key={item[rowkey]} onClick={handleSelectedRow(item)}>\r\n                                                {columns.map((column: any) => {\r\n                                                    return (\r\n                                                        <td className={`${rowSelected === item ? \"table-success\" : \"table-light\"} `} style={{ width: column.width }}>\r\n                                                            {item[column.dataIndex]}\r\n                                                        </td>\r\n                                                    )\r\n                                                })}\r\n                                                <td className={`${rowSelected === item ? \"table-success\" : \"table-light\"} `} hidden={!actionColumn}>\r\n                                                    <Button\r\n                                                        label={actionLabel}\r\n                                                        onClick={() => { onAction(item) }}\r\n                                                    />\r\n                                                </td>\r\n                                            </tr>\r\n                                        )\r\n                                    })}\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div> */}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Table;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}