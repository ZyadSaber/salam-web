{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect, useCallback } from \"react\";\nimport API_ID from \"../global/api\";\nimport useLoacalStorage from \"./useLocalStorage\";\nimport { useToast } from '@chakra-ui/react';\nconst useFetch = _ref => {\n  _s();\n  let {\n    link = \"\",\n    fetchOnFirstRun,\n    refreshTimeout,\n    params,\n    noAuthorization = false\n  } = _ref;\n  const toast = useToast();\n  const {\n    authorization\n  } = useLoacalStorage();\n  //@ts-ignore\n  const url = `http://144.24.209.19:9090/api/v1/${API_ID[link]}`;\n  const [data, setData] = useState([]);\n  const getData = useCallback(async () => {\n    if (authorization || noAuthorization) {\n      const response = await fetch(`${url}?authorization=${authorization}&${new URLSearchParams(params)}`);\n      const apiData = await response.json();\n      setData(apiData);\n    }\n  }, [authorization, noAuthorization, params, url]);\n  useEffect(() => {\n    if (fetchOnFirstRun) {\n      getData();\n    }\n  }, [fetchOnFirstRun, getData, url, params]);\n  useEffect(() => {\n    if (data.response) {\n      toast({\n        position: \"top-right\",\n        title: 'Success',\n        description: `${data.response}`,\n        status: 'success',\n        duration: 5000,\n        isClosable: true\n      });\n    }\n  }, [data, toast]);\n  const runFetch = useCallback(() => {\n    getData();\n  }, [getData]);\n  return {\n    data,\n    runFetch,\n    setData\n  };\n};\n_s(useFetch, \"QLapAhh8Puv8LlD94oBP+3PODZ8=\", false, function () {\n  return [useToast, useLoacalStorage];\n});\nexport default useFetch;","map":{"version":3,"names":["useState","useEffect","useCallback","API_ID","useLoacalStorage","useToast","useFetch","link","fetchOnFirstRun","refreshTimeout","params","noAuthorization","toast","authorization","url","data","setData","getData","response","fetch","URLSearchParams","apiData","json","position","title","description","status","duration","isClosable","runFetch"],"sources":["/home/zyad/Documents/active_projects/SalamApp/src/hooks/useFetch.ts"],"sourcesContent":["import { useState, useEffect, useCallback } from \"react\";\r\nimport API_ID from \"../global/api\";\r\nimport useLoacalStorage from \"./useLocalStorage\";\r\nimport { useToast } from '@chakra-ui/react';\r\n\r\ninterface useFetchProp {\r\n  link: string;\r\n  fetchOnFirstRun?: boolean;\r\n  refreshTimeout?: number;\r\n  params?: any\r\n  noAuthorization?: boolean\r\n}\r\n\r\nconst useFetch = ({\r\n    link = \"\", \r\n    fetchOnFirstRun,\r\n    refreshTimeout,\r\n    params, \r\n    noAuthorization = false\r\n  }: useFetchProp) => {\r\n    const toast = useToast()\r\n  const { authorization } = useLoacalStorage()\r\n  //@ts-ignore\r\n  const url = `http://144.24.209.19:9090/api/v1/${API_ID[link]}`\r\n  const [data, setData] = useState<any>([]);\r\n  const getData = useCallback(async()=>{\r\n    if(authorization || noAuthorization){\r\nconst response = await fetch(`${url}?authorization=${authorization}&${new URLSearchParams(params)}`)\r\n    const apiData=await response.json();  \r\n  setData(apiData);\r\n    }\r\n},[authorization, noAuthorization, params, url])\r\n\r\n\r\n    useEffect(() => {\r\n      if(fetchOnFirstRun){\r\n        getData()\r\n      }\r\n      }, [fetchOnFirstRun, getData, url, params]);\r\n\r\n      useEffect(()=>{\r\n        if (data.response){\r\n          toast({\r\n            position: \"top-right\",\r\n            title: 'Success',\r\n            description: `${data.response}`,\r\n            status: 'success',\r\n            duration: 5000,\r\n            isClosable: true,\r\n        })\r\n        }\r\n      }, [data, toast])\r\n\r\n\r\n\r\n      const runFetch = useCallback(()=>{\r\n          getData()\r\n      },[getData])\r\n\r\n      return{data, runFetch, setData}\r\n}\r\n\r\nexport default useFetch"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,EAAEC,WAAW,QAAQ,OAAO;AACxD,OAAOC,MAAM,MAAM,eAAe;AAClC,OAAOC,gBAAgB,MAAM,mBAAmB;AAChD,SAASC,QAAQ,QAAQ,kBAAkB;AAU3C,MAAMC,QAAQ,GAAG,QAMK;EAAA;EAAA,IANJ;IACdC,IAAI,GAAG,EAAE;IACTC,eAAe;IACfC,cAAc;IACdC,MAAM;IACNC,eAAe,GAAG;EACN,CAAC;EACb,MAAMC,KAAK,GAAGP,QAAQ,EAAE;EAC1B,MAAM;IAAEQ;EAAc,CAAC,GAAGT,gBAAgB,EAAE;EAC5C;EACA,MAAMU,GAAG,GAAI,oCAAmCX,MAAM,CAACI,IAAI,CAAE,EAAC;EAC9D,MAAM,CAACQ,IAAI,EAAEC,OAAO,CAAC,GAAGhB,QAAQ,CAAM,EAAE,CAAC;EACzC,MAAMiB,OAAO,GAAGf,WAAW,CAAC,YAAS;IACnC,IAAGW,aAAa,IAAIF,eAAe,EAAC;MACxC,MAAMO,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEL,GAAI,kBAAiBD,aAAc,IAAG,IAAIO,eAAe,CAACV,MAAM,CAAE,EAAC,CAAC;MAChG,MAAMW,OAAO,GAAC,MAAMH,QAAQ,CAACI,IAAI,EAAE;MACrCN,OAAO,CAACK,OAAO,CAAC;IACd;EACJ,CAAC,EAAC,CAACR,aAAa,EAAEF,eAAe,EAAED,MAAM,EAAEI,GAAG,CAAC,CAAC;EAG5Cb,SAAS,CAAC,MAAM;IACd,IAAGO,eAAe,EAAC;MACjBS,OAAO,EAAE;IACX;EACA,CAAC,EAAE,CAACT,eAAe,EAAES,OAAO,EAAEH,GAAG,EAAEJ,MAAM,CAAC,CAAC;EAE3CT,SAAS,CAAC,MAAI;IACZ,IAAIc,IAAI,CAACG,QAAQ,EAAC;MAChBN,KAAK,CAAC;QACJW,QAAQ,EAAE,WAAW;QACrBC,KAAK,EAAE,SAAS;QAChBC,WAAW,EAAG,GAAEV,IAAI,CAACG,QAAS,EAAC;QAC/BQ,MAAM,EAAE,SAAS;QACjBC,QAAQ,EAAE,IAAI;QACdC,UAAU,EAAE;MAChB,CAAC,CAAC;IACF;EACF,CAAC,EAAE,CAACb,IAAI,EAAEH,KAAK,CAAC,CAAC;EAIjB,MAAMiB,QAAQ,GAAG3B,WAAW,CAAC,MAAI;IAC7Be,OAAO,EAAE;EACb,CAAC,EAAC,CAACA,OAAO,CAAC,CAAC;EAEZ,OAAM;IAACF,IAAI;IAAEc,QAAQ;IAAEb;EAAO,CAAC;AACrC,CAAC;AAAA,GA/CKV,QAAQ;EAAA,QAOID,QAAQ,EACED,gBAAgB;AAAA;AAyC5C,eAAeE,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}