{"ast":null,"code":"import { defaults, hasXMLHttpRequest } from './utils.js';\nimport * as fetchNode from './getFetch.cjs';\nlet fetchApi;\nif (typeof fetch === 'function') {\n  if (typeof global !== 'undefined' && global.fetch) {\n    fetchApi = global.fetch;\n  } else if (typeof window !== 'undefined' && window.fetch) {\n    fetchApi = window.fetch;\n  } else {\n    fetchApi = fetch;\n  }\n}\nlet XmlHttpRequestApi;\nif (hasXMLHttpRequest()) {\n  if (typeof global !== 'undefined' && global.XMLHttpRequest) {\n    XmlHttpRequestApi = global.XMLHttpRequest;\n  } else if (typeof window !== 'undefined' && window.XMLHttpRequest) {\n    XmlHttpRequestApi = window.XMLHttpRequest;\n  }\n}\nlet ActiveXObjectApi;\nif (typeof ActiveXObject === 'function') {\n  if (typeof global !== 'undefined' && global.ActiveXObject) {\n    ActiveXObjectApi = global.ActiveXObject;\n  } else if (typeof window !== 'undefined' && window.ActiveXObject) {\n    ActiveXObjectApi = window.ActiveXObject;\n  }\n}\nif (!fetchApi && fetchNode && !XmlHttpRequestApi && !ActiveXObjectApi) fetchApi = fetchNode.default || fetchNode; // because of strange export\nif (typeof fetchApi !== 'function') fetchApi = undefined;\nconst addQueryString = (url, params) => {\n  if (params && typeof params === 'object') {\n    let queryString = '';\n    // Must encode data\n    for (const paramName in params) {\n      queryString += '&' + encodeURIComponent(paramName) + '=' + encodeURIComponent(params[paramName]);\n    }\n    if (!queryString) return url;\n    url = url + (url.indexOf('?') !== -1 ? '&' : '?') + queryString.slice(1);\n  }\n  return url;\n};\nconst fetchIt = (url, fetchOptions, callback) => {\n  fetchApi(url, fetchOptions).then(response => {\n    if (!response.ok) return callback(response.statusText || 'Error', {\n      status: response.status\n    });\n    response.text().then(data => {\n      callback(null, {\n        status: response.status,\n        data\n      });\n    }).catch(callback);\n  }).catch(callback);\n};\nlet omitFetchOptions = false;\n\n// fetch api stuff\nconst requestWithFetch = (options, url, payload, callback) => {\n  if (options.queryStringParams) {\n    url = addQueryString(url, options.queryStringParams);\n  }\n  const headers = defaults({}, typeof options.customHeaders === 'function' ? options.customHeaders() : options.customHeaders);\n  if (payload) headers['Content-Type'] = 'application/json';\n  const reqOptions = typeof options.requestOptions === 'function' ? options.requestOptions(payload) : options.requestOptions;\n  const fetchOptions = defaults({\n    method: payload ? 'POST' : 'GET',\n    body: payload ? options.stringify(payload) : undefined,\n    headers\n  }, omitFetchOptions ? {} : reqOptions);\n  try {\n    fetchIt(url, fetchOptions, callback);\n  } catch (e) {\n    if (!reqOptions || Object.keys(reqOptions).length === 0 || !e.message || e.message.indexOf('not implemented') < 0) {\n      return callback(e);\n    }\n    try {\n      Object.keys(reqOptions).forEach(opt => {\n        delete fetchOptions[opt];\n      });\n      fetchIt(url, fetchOptions, callback);\n      omitFetchOptions = true;\n    } catch (err) {\n      callback(err);\n    }\n  }\n};\n\n// xml http request stuff\nconst requestWithXmlHttpRequest = (options, url, payload, callback) => {\n  if (payload && typeof payload === 'object') {\n    // if (!cache) payload._t = Date.now()\n    // URL encoded form payload must be in querystring format\n    payload = addQueryString('', payload).slice(1);\n  }\n  if (options.queryStringParams) {\n    url = addQueryString(url, options.queryStringParams);\n  }\n  try {\n    let x;\n    if (XmlHttpRequestApi) {\n      x = new XmlHttpRequestApi();\n    } else {\n      x = new ActiveXObjectApi('MSXML2.XMLHTTP.3.0');\n    }\n    x.open(payload ? 'POST' : 'GET', url, 1);\n    if (!options.crossDomain) {\n      x.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\n    }\n    x.withCredentials = !!options.withCredentials;\n    if (payload) {\n      x.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');\n    }\n    if (x.overrideMimeType) {\n      x.overrideMimeType('application/json');\n    }\n    let h = options.customHeaders;\n    h = typeof h === 'function' ? h() : h;\n    if (h) {\n      for (const i in h) {\n        x.setRequestHeader(i, h[i]);\n      }\n    }\n    x.onreadystatechange = () => {\n      x.readyState > 3 && callback(x.status >= 400 ? x.statusText : null, {\n        status: x.status,\n        data: x.responseText\n      });\n    };\n    x.send(payload);\n  } catch (e) {\n    console && console.log(e);\n  }\n};\nconst request = (options, url, payload, callback) => {\n  if (typeof payload === 'function') {\n    callback = payload;\n    payload = undefined;\n  }\n  callback = callback || (() => {});\n  if (fetchApi) {\n    // use fetch api\n    return requestWithFetch(options, url, payload, callback);\n  }\n  if (hasXMLHttpRequest() || typeof ActiveXObject === 'function') {\n    // use xml http request\n    return requestWithXmlHttpRequest(options, url, payload, callback);\n  }\n  callback(new Error('No fetch and no xhr implementation found!'));\n};\nexport default request;","map":{"version":3,"names":["defaults","hasXMLHttpRequest","fetchNode","fetchApi","fetch","global","window","XmlHttpRequestApi","XMLHttpRequest","ActiveXObjectApi","ActiveXObject","default","undefined","addQueryString","url","params","queryString","paramName","encodeURIComponent","indexOf","slice","fetchIt","fetchOptions","callback","then","response","ok","statusText","status","text","data","catch","omitFetchOptions","requestWithFetch","options","payload","queryStringParams","headers","customHeaders","reqOptions","requestOptions","method","body","stringify","e","Object","keys","length","message","forEach","opt","err","requestWithXmlHttpRequest","x","open","crossDomain","setRequestHeader","withCredentials","overrideMimeType","h","i","onreadystatechange","readyState","responseText","send","console","log","request","Error"],"sources":["/home/zyad/Documents/ActiveProjects/SalamApp/node_modules/i18next-http-backend/lib/request.js"],"sourcesContent":["import { defaults, hasXMLHttpRequest } from './utils.js'\nimport * as fetchNode from './getFetch.cjs'\n\nlet fetchApi\nif (typeof fetch === 'function') {\n  if (typeof global !== 'undefined' && global.fetch) {\n    fetchApi = global.fetch\n  } else if (typeof window !== 'undefined' && window.fetch) {\n    fetchApi = window.fetch\n  } else {\n    fetchApi = fetch\n  }\n}\nlet XmlHttpRequestApi\nif (hasXMLHttpRequest()) {\n  if (typeof global !== 'undefined' && global.XMLHttpRequest) {\n    XmlHttpRequestApi = global.XMLHttpRequest\n  } else if (typeof window !== 'undefined' && window.XMLHttpRequest) {\n    XmlHttpRequestApi = window.XMLHttpRequest\n  }\n}\nlet ActiveXObjectApi\nif (typeof ActiveXObject === 'function') {\n  if (typeof global !== 'undefined' && global.ActiveXObject) {\n    ActiveXObjectApi = global.ActiveXObject\n  } else if (typeof window !== 'undefined' && window.ActiveXObject) {\n    ActiveXObjectApi = window.ActiveXObject\n  }\n}\nif (!fetchApi && fetchNode && !XmlHttpRequestApi && !ActiveXObjectApi) fetchApi = fetchNode.default || fetchNode // because of strange export\nif (typeof fetchApi !== 'function') fetchApi = undefined\n\nconst addQueryString = (url, params) => {\n  if (params && typeof params === 'object') {\n    let queryString = ''\n    // Must encode data\n    for (const paramName in params) {\n      queryString += '&' + encodeURIComponent(paramName) + '=' + encodeURIComponent(params[paramName])\n    }\n    if (!queryString) return url\n    url = url + (url.indexOf('?') !== -1 ? '&' : '?') + queryString.slice(1)\n  }\n  return url\n}\n\nconst fetchIt = (url, fetchOptions, callback) => {\n  fetchApi(url, fetchOptions).then((response) => {\n    if (!response.ok) return callback(response.statusText || 'Error', { status: response.status })\n    response.text().then((data) => {\n      callback(null, { status: response.status, data })\n    }).catch(callback)\n  }).catch(callback)\n}\n\nlet omitFetchOptions = false\n\n// fetch api stuff\nconst requestWithFetch = (options, url, payload, callback) => {\n  if (options.queryStringParams) {\n    url = addQueryString(url, options.queryStringParams)\n  }\n  const headers = defaults({}, typeof options.customHeaders === 'function' ? options.customHeaders() : options.customHeaders)\n  if (payload) headers['Content-Type'] = 'application/json'\n  const reqOptions = typeof options.requestOptions === 'function' ? options.requestOptions(payload) : options.requestOptions\n  const fetchOptions = defaults({\n    method: payload ? 'POST' : 'GET',\n    body: payload ? options.stringify(payload) : undefined,\n    headers\n  }, omitFetchOptions ? {} : reqOptions)\n  try {\n    fetchIt(url, fetchOptions, callback)\n  } catch (e) {\n    if (!reqOptions || Object.keys(reqOptions).length === 0 || !e.message || e.message.indexOf('not implemented') < 0) {\n      return callback(e)\n    }\n    try {\n      Object.keys(reqOptions).forEach((opt) => {\n        delete fetchOptions[opt]\n      })\n      fetchIt(url, fetchOptions, callback)\n      omitFetchOptions = true\n    } catch (err) {\n      callback(err)\n    }\n  }\n}\n\n// xml http request stuff\nconst requestWithXmlHttpRequest = (options, url, payload, callback) => {\n  if (payload && typeof payload === 'object') {\n    // if (!cache) payload._t = Date.now()\n    // URL encoded form payload must be in querystring format\n    payload = addQueryString('', payload).slice(1)\n  }\n\n  if (options.queryStringParams) {\n    url = addQueryString(url, options.queryStringParams)\n  }\n\n  try {\n    let x\n    if (XmlHttpRequestApi) {\n      x = new XmlHttpRequestApi()\n    } else {\n      x = new ActiveXObjectApi('MSXML2.XMLHTTP.3.0')\n    }\n    x.open(payload ? 'POST' : 'GET', url, 1)\n    if (!options.crossDomain) {\n      x.setRequestHeader('X-Requested-With', 'XMLHttpRequest')\n    }\n    x.withCredentials = !!options.withCredentials\n    if (payload) {\n      x.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded')\n    }\n    if (x.overrideMimeType) {\n      x.overrideMimeType('application/json')\n    }\n    let h = options.customHeaders\n    h = typeof h === 'function' ? h() : h\n    if (h) {\n      for (const i in h) {\n        x.setRequestHeader(i, h[i])\n      }\n    }\n    x.onreadystatechange = () => {\n      x.readyState > 3 && callback(x.status >= 400 ? x.statusText : null, { status: x.status, data: x.responseText })\n    }\n    x.send(payload)\n  } catch (e) {\n    console && console.log(e)\n  }\n}\n\nconst request = (options, url, payload, callback) => {\n  if (typeof payload === 'function') {\n    callback = payload\n    payload = undefined\n  }\n  callback = callback || (() => {})\n\n  if (fetchApi) {\n    // use fetch api\n    return requestWithFetch(options, url, payload, callback)\n  }\n\n  if (hasXMLHttpRequest() || typeof ActiveXObject === 'function') {\n    // use xml http request\n    return requestWithXmlHttpRequest(options, url, payload, callback)\n  }\n\n  callback(new Error('No fetch and no xhr implementation found!'))\n}\n\nexport default request\n"],"mappings":"AAAA,SAASA,QAAQ,EAAEC,iBAAiB,QAAQ,YAAY;AACxD,OAAO,KAAKC,SAAS,MAAM,gBAAgB;AAE3C,IAAIC,QAAQ;AACZ,IAAI,OAAOC,KAAK,KAAK,UAAU,EAAE;EAC/B,IAAI,OAAOC,MAAM,KAAK,WAAW,IAAIA,MAAM,CAACD,KAAK,EAAE;IACjDD,QAAQ,GAAGE,MAAM,CAACD,KAAK;EACzB,CAAC,MAAM,IAAI,OAAOE,MAAM,KAAK,WAAW,IAAIA,MAAM,CAACF,KAAK,EAAE;IACxDD,QAAQ,GAAGG,MAAM,CAACF,KAAK;EACzB,CAAC,MAAM;IACLD,QAAQ,GAAGC,KAAK;EAClB;AACF;AACA,IAAIG,iBAAiB;AACrB,IAAIN,iBAAiB,EAAE,EAAE;EACvB,IAAI,OAAOI,MAAM,KAAK,WAAW,IAAIA,MAAM,CAACG,cAAc,EAAE;IAC1DD,iBAAiB,GAAGF,MAAM,CAACG,cAAc;EAC3C,CAAC,MAAM,IAAI,OAAOF,MAAM,KAAK,WAAW,IAAIA,MAAM,CAACE,cAAc,EAAE;IACjED,iBAAiB,GAAGD,MAAM,CAACE,cAAc;EAC3C;AACF;AACA,IAAIC,gBAAgB;AACpB,IAAI,OAAOC,aAAa,KAAK,UAAU,EAAE;EACvC,IAAI,OAAOL,MAAM,KAAK,WAAW,IAAIA,MAAM,CAACK,aAAa,EAAE;IACzDD,gBAAgB,GAAGJ,MAAM,CAACK,aAAa;EACzC,CAAC,MAAM,IAAI,OAAOJ,MAAM,KAAK,WAAW,IAAIA,MAAM,CAACI,aAAa,EAAE;IAChED,gBAAgB,GAAGH,MAAM,CAACI,aAAa;EACzC;AACF;AACA,IAAI,CAACP,QAAQ,IAAID,SAAS,IAAI,CAACK,iBAAiB,IAAI,CAACE,gBAAgB,EAAEN,QAAQ,GAAGD,SAAS,CAACS,OAAO,IAAIT,SAAS,EAAC;AACjH,IAAI,OAAOC,QAAQ,KAAK,UAAU,EAAEA,QAAQ,GAAGS,SAAS;AAExD,MAAMC,cAAc,GAAG,CAACC,GAAG,EAAEC,MAAM,KAAK;EACtC,IAAIA,MAAM,IAAI,OAAOA,MAAM,KAAK,QAAQ,EAAE;IACxC,IAAIC,WAAW,GAAG,EAAE;IACpB;IACA,KAAK,MAAMC,SAAS,IAAIF,MAAM,EAAE;MAC9BC,WAAW,IAAI,GAAG,GAAGE,kBAAkB,CAACD,SAAS,CAAC,GAAG,GAAG,GAAGC,kBAAkB,CAACH,MAAM,CAACE,SAAS,CAAC,CAAC;IAClG;IACA,IAAI,CAACD,WAAW,EAAE,OAAOF,GAAG;IAC5BA,GAAG,GAAGA,GAAG,IAAIA,GAAG,CAACK,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,CAAC,GAAGH,WAAW,CAACI,KAAK,CAAC,CAAC,CAAC;EAC1E;EACA,OAAON,GAAG;AACZ,CAAC;AAED,MAAMO,OAAO,GAAG,CAACP,GAAG,EAAEQ,YAAY,EAAEC,QAAQ,KAAK;EAC/CpB,QAAQ,CAACW,GAAG,EAAEQ,YAAY,CAAC,CAACE,IAAI,CAAEC,QAAQ,IAAK;IAC7C,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE,OAAOH,QAAQ,CAACE,QAAQ,CAACE,UAAU,IAAI,OAAO,EAAE;MAAEC,MAAM,EAAEH,QAAQ,CAACG;IAAO,CAAC,CAAC;IAC9FH,QAAQ,CAACI,IAAI,EAAE,CAACL,IAAI,CAAEM,IAAI,IAAK;MAC7BP,QAAQ,CAAC,IAAI,EAAE;QAAEK,MAAM,EAAEH,QAAQ,CAACG,MAAM;QAAEE;MAAK,CAAC,CAAC;IACnD,CAAC,CAAC,CAACC,KAAK,CAACR,QAAQ,CAAC;EACpB,CAAC,CAAC,CAACQ,KAAK,CAACR,QAAQ,CAAC;AACpB,CAAC;AAED,IAAIS,gBAAgB,GAAG,KAAK;;AAE5B;AACA,MAAMC,gBAAgB,GAAG,CAACC,OAAO,EAAEpB,GAAG,EAAEqB,OAAO,EAAEZ,QAAQ,KAAK;EAC5D,IAAIW,OAAO,CAACE,iBAAiB,EAAE;IAC7BtB,GAAG,GAAGD,cAAc,CAACC,GAAG,EAAEoB,OAAO,CAACE,iBAAiB,CAAC;EACtD;EACA,MAAMC,OAAO,GAAGrC,QAAQ,CAAC,CAAC,CAAC,EAAE,OAAOkC,OAAO,CAACI,aAAa,KAAK,UAAU,GAAGJ,OAAO,CAACI,aAAa,EAAE,GAAGJ,OAAO,CAACI,aAAa,CAAC;EAC3H,IAAIH,OAAO,EAAEE,OAAO,CAAC,cAAc,CAAC,GAAG,kBAAkB;EACzD,MAAME,UAAU,GAAG,OAAOL,OAAO,CAACM,cAAc,KAAK,UAAU,GAAGN,OAAO,CAACM,cAAc,CAACL,OAAO,CAAC,GAAGD,OAAO,CAACM,cAAc;EAC1H,MAAMlB,YAAY,GAAGtB,QAAQ,CAAC;IAC5ByC,MAAM,EAAEN,OAAO,GAAG,MAAM,GAAG,KAAK;IAChCO,IAAI,EAAEP,OAAO,GAAGD,OAAO,CAACS,SAAS,CAACR,OAAO,CAAC,GAAGvB,SAAS;IACtDyB;EACF,CAAC,EAAEL,gBAAgB,GAAG,CAAC,CAAC,GAAGO,UAAU,CAAC;EACtC,IAAI;IACFlB,OAAO,CAACP,GAAG,EAAEQ,YAAY,EAAEC,QAAQ,CAAC;EACtC,CAAC,CAAC,OAAOqB,CAAC,EAAE;IACV,IAAI,CAACL,UAAU,IAAIM,MAAM,CAACC,IAAI,CAACP,UAAU,CAAC,CAACQ,MAAM,KAAK,CAAC,IAAI,CAACH,CAAC,CAACI,OAAO,IAAIJ,CAAC,CAACI,OAAO,CAAC7B,OAAO,CAAC,iBAAiB,CAAC,GAAG,CAAC,EAAE;MACjH,OAAOI,QAAQ,CAACqB,CAAC,CAAC;IACpB;IACA,IAAI;MACFC,MAAM,CAACC,IAAI,CAACP,UAAU,CAAC,CAACU,OAAO,CAAEC,GAAG,IAAK;QACvC,OAAO5B,YAAY,CAAC4B,GAAG,CAAC;MAC1B,CAAC,CAAC;MACF7B,OAAO,CAACP,GAAG,EAAEQ,YAAY,EAAEC,QAAQ,CAAC;MACpCS,gBAAgB,GAAG,IAAI;IACzB,CAAC,CAAC,OAAOmB,GAAG,EAAE;MACZ5B,QAAQ,CAAC4B,GAAG,CAAC;IACf;EACF;AACF,CAAC;;AAED;AACA,MAAMC,yBAAyB,GAAG,CAAClB,OAAO,EAAEpB,GAAG,EAAEqB,OAAO,EAAEZ,QAAQ,KAAK;EACrE,IAAIY,OAAO,IAAI,OAAOA,OAAO,KAAK,QAAQ,EAAE;IAC1C;IACA;IACAA,OAAO,GAAGtB,cAAc,CAAC,EAAE,EAAEsB,OAAO,CAAC,CAACf,KAAK,CAAC,CAAC,CAAC;EAChD;EAEA,IAAIc,OAAO,CAACE,iBAAiB,EAAE;IAC7BtB,GAAG,GAAGD,cAAc,CAACC,GAAG,EAAEoB,OAAO,CAACE,iBAAiB,CAAC;EACtD;EAEA,IAAI;IACF,IAAIiB,CAAC;IACL,IAAI9C,iBAAiB,EAAE;MACrB8C,CAAC,GAAG,IAAI9C,iBAAiB,EAAE;IAC7B,CAAC,MAAM;MACL8C,CAAC,GAAG,IAAI5C,gBAAgB,CAAC,oBAAoB,CAAC;IAChD;IACA4C,CAAC,CAACC,IAAI,CAACnB,OAAO,GAAG,MAAM,GAAG,KAAK,EAAErB,GAAG,EAAE,CAAC,CAAC;IACxC,IAAI,CAACoB,OAAO,CAACqB,WAAW,EAAE;MACxBF,CAAC,CAACG,gBAAgB,CAAC,kBAAkB,EAAE,gBAAgB,CAAC;IAC1D;IACAH,CAAC,CAACI,eAAe,GAAG,CAAC,CAACvB,OAAO,CAACuB,eAAe;IAC7C,IAAItB,OAAO,EAAE;MACXkB,CAAC,CAACG,gBAAgB,CAAC,cAAc,EAAE,mCAAmC,CAAC;IACzE;IACA,IAAIH,CAAC,CAACK,gBAAgB,EAAE;MACtBL,CAAC,CAACK,gBAAgB,CAAC,kBAAkB,CAAC;IACxC;IACA,IAAIC,CAAC,GAAGzB,OAAO,CAACI,aAAa;IAC7BqB,CAAC,GAAG,OAAOA,CAAC,KAAK,UAAU,GAAGA,CAAC,EAAE,GAAGA,CAAC;IACrC,IAAIA,CAAC,EAAE;MACL,KAAK,MAAMC,CAAC,IAAID,CAAC,EAAE;QACjBN,CAAC,CAACG,gBAAgB,CAACI,CAAC,EAAED,CAAC,CAACC,CAAC,CAAC,CAAC;MAC7B;IACF;IACAP,CAAC,CAACQ,kBAAkB,GAAG,MAAM;MAC3BR,CAAC,CAACS,UAAU,GAAG,CAAC,IAAIvC,QAAQ,CAAC8B,CAAC,CAACzB,MAAM,IAAI,GAAG,GAAGyB,CAAC,CAAC1B,UAAU,GAAG,IAAI,EAAE;QAAEC,MAAM,EAAEyB,CAAC,CAACzB,MAAM;QAAEE,IAAI,EAAEuB,CAAC,CAACU;MAAa,CAAC,CAAC;IACjH,CAAC;IACDV,CAAC,CAACW,IAAI,CAAC7B,OAAO,CAAC;EACjB,CAAC,CAAC,OAAOS,CAAC,EAAE;IACVqB,OAAO,IAAIA,OAAO,CAACC,GAAG,CAACtB,CAAC,CAAC;EAC3B;AACF,CAAC;AAED,MAAMuB,OAAO,GAAG,CAACjC,OAAO,EAAEpB,GAAG,EAAEqB,OAAO,EAAEZ,QAAQ,KAAK;EACnD,IAAI,OAAOY,OAAO,KAAK,UAAU,EAAE;IACjCZ,QAAQ,GAAGY,OAAO;IAClBA,OAAO,GAAGvB,SAAS;EACrB;EACAW,QAAQ,GAAGA,QAAQ,KAAK,MAAM,CAAC,CAAC,CAAC;EAEjC,IAAIpB,QAAQ,EAAE;IACZ;IACA,OAAO8B,gBAAgB,CAACC,OAAO,EAAEpB,GAAG,EAAEqB,OAAO,EAAEZ,QAAQ,CAAC;EAC1D;EAEA,IAAItB,iBAAiB,EAAE,IAAI,OAAOS,aAAa,KAAK,UAAU,EAAE;IAC9D;IACA,OAAO0C,yBAAyB,CAAClB,OAAO,EAAEpB,GAAG,EAAEqB,OAAO,EAAEZ,QAAQ,CAAC;EACnE;EAEAA,QAAQ,CAAC,IAAI6C,KAAK,CAAC,2CAA2C,CAAC,CAAC;AAClE,CAAC;AAED,eAAeD,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}